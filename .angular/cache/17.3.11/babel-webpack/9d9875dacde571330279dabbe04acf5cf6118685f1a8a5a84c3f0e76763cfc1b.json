{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CalendarService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = 'assets/data/calendar.json';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  getAllCalendars() {\n    return this.httpClient.get(this.API_URL).pipe(catchError(this.errorHandler));\n  }\n  addUpdateCalendar(calendar) {\n    this.dialogData = calendar;\n  }\n  deleteCalendar(calendar) {\n    this.dialogData = calendar;\n  }\n  errorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  static {\n    this.ɵfac = function CalendarService_Factory(t) {\n      return new (t || CalendarService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CalendarService,\n      factory: CalendarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","HttpHeaders","throwError","catchError","CalendarService","constructor","httpClient","API_URL","httpOptions","headers","dataChange","data","value","getDialogData","dialogData","getAllCalendars","get","pipe","errorHandler","addUpdateCalendar","calendar","deleteCalendar","error","errorMessage","ErrorEvent","message","status","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/calendar/calendar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Calendar } from './calendar.model';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class CalendarService {\r\n  private readonly API_URL = 'assets/data/calendar.json';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n  dataChange: BehaviorSubject<Calendar[]> = new BehaviorSubject<Calendar[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData!: Calendar;\r\n  constructor(private httpClient: HttpClient) { }\r\n  get data(): Calendar[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  getAllCalendars(): Observable<Calendar[]> {\r\n    return this.httpClient\r\n      .get<Calendar[]>(this.API_URL)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  addUpdateCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  deleteCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AAGtC,SAEEC,WAAW,QAEN,sBAAsB;AAC7B,SAASC,UAAU,QAAQ,MAAM;AACjC,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,eAAe;EAU1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IATb,KAAAC,OAAO,GAAG,2BAA2B;IACtD,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IACD,KAAAS,UAAU,GAAgC,IAAIV,eAAe,CAAa,EAAE,CAAC;EAG/B;EAC9C,IAAIW,IAAIA,CAAA;IACN,OAAO,IAAI,CAACD,UAAU,CAACE,KAAK;EAC9B;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACC,UAAU;EACxB;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACT,UAAU,CACnBU,GAAG,CAAa,IAAI,CAACT,OAAO,CAAC,CAC7BU,IAAI,CAACd,UAAU,CAAC,IAAI,CAACe,YAAY,CAAC,CAAC;EACxC;EAEAC,iBAAiBA,CAACC,QAAkB;IAClC,IAAI,CAACN,UAAU,GAAGM,QAAQ;EAC5B;EACAC,cAAcA,CAACD,QAAkB;IAC/B,IAAI,CAACN,UAAU,GAAGM,QAAQ;EAC5B;EACAF,YAAYA,CAACI,KAAwB;IACnC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOrB,UAAU,CAACqB,YAAY,CAAC;EACjC;;;uBAxCWnB,eAAe,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAf5B,eAAe;MAAA6B,OAAA,EAAf7B,eAAe,CAAA8B,IAAA;MAAAC,UAAA,EAHd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}