{"ast":null,"code":"import { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BreadcrumbComponent } from '@shared/components/breadcrumb/breadcrumb.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/checkbox\";\nimport * as i8 from \"@angular/material/button\";\nfunction FormValidationsComponent_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"app-breadcrumb\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const breadscrum_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"title\", breadscrum_r1.title)(\"items\", breadscrum_r1.items)(\"active_item\", breadscrum_r1.active);\n  }\n}\nfunction FormValidationsComponent_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" First name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormValidationsComponent_Conditional_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormValidationsComponent_Conditional_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormValidationsComponent_Conditional_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" City name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormValidationsComponent_Conditional_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" State name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormValidationsComponent_Conditional_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Country is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormValidationsComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.hide = true;\n    this.agree = false;\n    this.breadscrums = [{\n      title: 'Validation',\n      items: ['Forms'],\n      active: 'Validation'\n    }];\n    this.register = this.fb.group({\n      first: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      last: [''],\n      password: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email, Validators.minLength(5)]],\n      address: [''],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      country: ['', [Validators.required]],\n      termcondition: [false, [Validators.requiredTrue]]\n    });\n  }\n  onRegister() {\n    console.log('Form Value', this.register.value);\n  }\n  static {\n    this.ɵfac = function FormValidationsComponent_Factory(t) {\n      return new (t || FormValidationsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormValidationsComponent,\n      selectors: [[\"app-form-validations\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 102,\n      vars: 17,\n      consts: [[1, \"content\"], [1, \"content-block\"], [1, \"block-header\"], [1, \"row\", \"clearfix\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"card\"], [1, \"header\"], [1, \"body\"], [1, \"register-form\", \"m-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"first\", \"required\", \"\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"formControlName\", \"last\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"address\"], [\"matInput\", \"\", \"formControlName\", \"city\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"state\", \"required\", \"\"], [\"formControlName\", \"country\", \"required\", \"\"], [3, \"value\"], [\"formControlName\", \"termcondition\", 1, \"example-margin\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-space\", 3, \"disabled\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"warn\"], [3, \"title\", \"items\", \"active_item\"]],\n      template: function FormValidationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n          i0.ɵɵrepeaterCreate(2, FormValidationsComponent_For_3_Template, 2, 3, \"div\", 2, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h2\");\n          i0.ɵɵtext(9, \"Basic Validation\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function FormValidationsComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.onRegister();\n          });\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10)(14, \"mat-form-field\", 11)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"First name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵelementStart(18, \"mat-icon\", 13);\n          i0.ɵɵtext(19, \"face\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(20, FormValidationsComponent_Conditional_20_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 10)(22, \"mat-form-field\", 11)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Last name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 14);\n          i0.ɵɵelementStart(26, \"mat-icon\", 13);\n          i0.ɵɵtext(27, \"face\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(28, \"div\", 9)(29, \"div\", 15)(30, \"mat-form-field\", 11)(31, \"mat-label\");\n          i0.ɵɵtext(32, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"input\", 16);\n          i0.ɵɵelementStart(34, \"mat-icon\", 17);\n          i0.ɵɵlistener(\"click\", function FormValidationsComponent_Template_mat_icon_click_34_listener() {\n            return ctx.hide = !ctx.hide;\n          });\n          i0.ɵɵtext(35);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, FormValidationsComponent_Conditional_36_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(37, \"div\", 9)(38, \"div\", 15)(39, \"mat-form-field\", 11)(40, \"mat-label\");\n          i0.ɵɵtext(41, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"input\", 18);\n          i0.ɵɵelementStart(43, \"mat-icon\", 13);\n          i0.ɵɵtext(44, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(45, FormValidationsComponent_Conditional_45_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(46, \"div\", 9)(47, \"div\", 15)(48, \"mat-form-field\", 11)(49, \"mat-label\");\n          i0.ɵɵtext(50, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(51, \"textarea\", 19);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(52, \"div\", 9)(53, \"div\", 10)(54, \"mat-form-field\", 11)(55, \"mat-label\");\n          i0.ɵɵtext(56, \"City\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(57, \"input\", 20);\n          i0.ɵɵelementStart(58, \"mat-icon\", 13);\n          i0.ɵɵtext(59, \"location_city\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(60, FormValidationsComponent_Conditional_60_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(61, \"div\", 10)(62, \"mat-form-field\", 11)(63, \"mat-label\");\n          i0.ɵɵtext(64, \"State\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(65, \"input\", 21);\n          i0.ɵɵelementStart(66, \"mat-icon\", 13);\n          i0.ɵɵtext(67, \"business\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(68, FormValidationsComponent_Conditional_68_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(69, \"div\", 9)(70, \"div\", 15)(71, \"mat-form-field\", 11)(72, \"mat-label\");\n          i0.ɵɵtext(73, \"Country\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(74, \"mat-select\", 22)(75, \"mat-option\", 23);\n          i0.ɵɵtext(76, \" India \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(77, \"mat-option\", 23);\n          i0.ɵɵtext(78, \" Algeria \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(79, \"mat-option\", 23);\n          i0.ɵɵtext(80, \" Brazil \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"mat-option\", 23);\n          i0.ɵɵtext(82, \" Poland \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(83, \"mat-option\", 23);\n          i0.ɵɵtext(84, \" Sri Lanka \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(85, \"mat-option\", 23);\n          i0.ɵɵtext(86, \" Thailand \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"mat-option\", 23);\n          i0.ɵɵtext(88, \" Japan \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(89, \"mat-icon\", 13);\n          i0.ɵɵtext(90, \"flag\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(91, FormValidationsComponent_Conditional_91_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(92, \"div\", 9)(93, \"div\", 15)(94, \"mat-checkbox\", 24);\n          i0.ɵɵtext(95, \"I accept terms and conditions \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(96, \"div\", 9)(97, \"div\", 15)(98, \"button\", 25);\n          i0.ɵɵtext(99, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(100, \"button\", 26);\n          i0.ɵɵtext(101, \"Cancel\");\n          i0.ɵɵelementEnd()()()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_16_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx.breadscrums);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.register);\n          i0.ɵɵadvance(9);\n          i0.ɵɵconditional(20, ((tmp_2_0 = ctx.register.get(\"first\")) == null ? null : tmp_2_0.hasError(\"required\")) ? 20 : -1);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.hide ? \"visibility_off\" : \"visibility\", \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(36, ((tmp_5_0 = ctx.register.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 36 : -1);\n          i0.ɵɵadvance(9);\n          i0.ɵɵconditional(45, ((tmp_6_0 = ctx.register.get(\"email\")) == null ? null : tmp_6_0.hasError(\"required\")) || ((tmp_6_0 = ctx.register.get(\"email\")) == null ? null : tmp_6_0.touched) ? 45 : -1);\n          i0.ɵɵadvance(15);\n          i0.ɵɵconditional(60, ((tmp_7_0 = ctx.register.get(\"city\")) == null ? null : tmp_7_0.hasError(\"required\")) ? 60 : -1);\n          i0.ɵɵadvance(8);\n          i0.ɵɵconditional(68, ((tmp_8_0 = ctx.register.get(\"state\")) == null ? null : tmp_8_0.hasError(\"required\")) ? 68 : -1);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"value\", \"India\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Algeria\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Brazil\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Poland\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Sri Lanka\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Thailand\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", \"Japan\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(91, ((tmp_16_0 = ctx.register.get(\"country\")) == null ? null : tmp_16_0.hasError(\"required\")) ? 91 : -1);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", !ctx.register.valid);\n        }\n      },\n      dependencies: [BreadcrumbComponent, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i2.MatFormField, i2.MatLabel, i2.MatError, i2.MatSuffix, MatInputModule, i3.MatInput, MatIconModule, i4.MatIcon, MatSelectModule, i5.MatSelect, i6.MatOption, MatOptionModule, MatCheckboxModule, i7.MatCheckbox, MatButtonModule, i8.MatButton],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatOptionModule","MatSelectModule","MatIconModule","MatInputModule","MatFormFieldModule","BreadcrumbComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","breadscrum_r1","title","items","active","ɵɵtext","FormValidationsComponent","constructor","fb","hide","agree","breadscrums","register","group","first","required","pattern","last","password","email","minLength","address","city","state","country","termcondition","requiredTrue","onRegister","console","log","value","ɵɵdirectiveInject","i1","UntypedFormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FormValidationsComponent_Template","rf","ctx","ɵɵrepeaterCreate","FormValidationsComponent_For_3_Template","ɵɵrepeaterTrackByIdentity","ɵɵlistener","FormValidationsComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","FormValidationsComponent_Conditional_20_Template","FormValidationsComponent_Template_mat_icon_click_34_listener","FormValidationsComponent_Conditional_36_Template","FormValidationsComponent_Conditional_45_Template","FormValidationsComponent_Conditional_60_Template","FormValidationsComponent_Conditional_68_Template","FormValidationsComponent_Conditional_91_Template","ɵɵrepeater","ɵɵconditional","tmp_2_0","get","hasError","ɵɵtextInterpolate1","tmp_5_0","tmp_6_0","touched","tmp_7_0","tmp_8_0","tmp_16_0","valid","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i2","MatFormField","MatLabel","MatError","MatSuffix","i3","MatInput","i4","MatIcon","i5","MatSelect","i6","MatOption","i7","MatCheckbox","i8","MatButton","styles"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/forms/form-validations/form-validations.component.ts","/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/forms/form-validations/form-validations.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { BreadcrumbComponent } from '@shared/components/breadcrumb/breadcrumb.component';\r\n\r\n@Component({\r\n  selector: 'app-form-validations',\r\n  templateUrl: './form-validations.component.html',\r\n  styleUrls: ['./form-validations.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    BreadcrumbComponent,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\nexport class FormValidationsComponent {\r\n  // Form 1\r\n  register: UntypedFormGroup;\r\n  hide = true;\r\n  agree = false;\r\n  customForm?: UntypedFormGroup;\r\n\r\n  breadscrums = [\r\n    {\r\n      title: 'Validation',\r\n      items: ['Forms'],\r\n      active: 'Validation',\r\n    },\r\n  ];\r\n\r\n  constructor(private fb: UntypedFormBuilder) {\r\n    this.register = this.fb.group({\r\n      first: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\r\n      last: [''],\r\n      password: ['', [Validators.required]],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      address: [''],\r\n      city: ['', [Validators.required]],\r\n      state: ['', [Validators.required]],\r\n      country: ['', [Validators.required]],\r\n      termcondition: [false, [Validators.requiredTrue]],\r\n    });\r\n  }\r\n  onRegister() {\r\n    console.log('Form Value', this.register.value);\r\n  }\r\n}\r\n","<section class=\"content\">\n  <div class=\"content-block\">\n    @for (breadscrum of breadscrums; track breadscrum) {\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"breadscrum.title\" [items]=\"breadscrum.items\" [active_item]=\"breadscrum.active\">\n      </app-breadcrumb>\n    </div>\n    }\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Basic Validation</h2>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"register\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-icon matSuffix>face</mat-icon>\n                    @if (register.get('first')?.hasError('required')) {\n                    <mat-error>\n                      First name is required\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                    <mat-icon matSuffix>face</mat-icon>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\n                    <mat-icon matSuffix (click)=\"hide = !hide\">\n                      {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    @if (register.get('password')?.hasError('required')) {\n                    <mat-error>\n                      Password is required\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-icon matSuffix>email</mat-icon>\n                    @if (register.get('email')?.hasError('required') || register.get('email')?.touched) {\n                    <mat-error>\n                      Please enter a valid email address\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>City</mat-label>\n                    <input matInput formControlName=\"city\" required>\n                    <mat-icon matSuffix>location_city</mat-icon>\n                    @if (register.get('city')?.hasError('required')) {\n                    <mat-error>\n                      City name is required\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>State</mat-label>\n                    <input matInput formControlName=\"state\" required>\n                    <mat-icon matSuffix>business</mat-icon>\n                    @if (register.get('state')?.hasError('required')) {\n                    <mat-error>\n                      State name is required\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Country</mat-label>\n                    <mat-select formControlName=\"country\" required>\n                      <mat-option [value]=\"'India'\">\n                        India\n                      </mat-option>\n                      <mat-option [value]=\"'Algeria'\">\n                        Algeria\n                      </mat-option>\n                      <mat-option [value]=\"'Brazil'\">\n                        Brazil\n                      </mat-option>\n                      <mat-option [value]=\"'Poland'\">\n                        Poland\n                      </mat-option>\n                      <mat-option [value]=\"'Sri Lanka'\">\n                        Sri Lanka\n                      </mat-option>\n                      <mat-option [value]=\"'Thailand'\">\n                        Thailand\n                      </mat-option>\n                      <mat-option [value]=\"'Japan'\">\n                        Japan\n                      </mat-option>\n                    </mat-select>\n                    <mat-icon matSuffix>flag</mat-icon>\n                    @if (register.get('country')?.hasError('required')) {\n                    <mat-error>\n                      Country is required\n                    </mat-error>\n                    }\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <mat-checkbox class=\"example-margin\" formControlName=\"termcondition\">I accept\n                    terms\n                    and conditions\n                  </mat-checkbox>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                    [disabled]=\"!register.valid\">Submit</button>\n                  <button type=\"button\" mat-raised-button color=\"warn\">Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>"],"mappings":"AACA,SAA+CA,UAAU,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACnH,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,mBAAmB,QAAQ,oDAAoD;;;;;;;;;;;;ICNpFC,EAAA,CAAAC,cAAA,aAA0B;IAExBD,EAAA,CAAAE,SAAA,yBACiB;IACnBF,EAAA,CAAAG,YAAA,EAAM;;;;IAFYH,EAAA,CAAAI,SAAA,EAA0B;IAA4BJ,EAAtD,CAAAK,UAAA,UAAAC,aAAA,CAAAC,KAAA,CAA0B,UAAAD,aAAA,CAAAE,KAAA,CAA2B,gBAAAF,aAAA,CAAAG,MAAA,CAAkC;;;;;IAoBzFT,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,+BACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;;;IAoBZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,6BACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;;;IAYZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,2CACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;;;IAoBZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,8BACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;;;IAUZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,+BACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;;;IAkCZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAU,MAAA,4BACF;IAAAV,EAAA,CAAAG,YAAA,EAAY;;;ADxGhC,OAAM,MAAOQ,wBAAwB;EAenCC,YAAoBC,EAAsB;IAAtB,KAAAA,EAAE,GAAFA,EAAE;IAZtB,KAAAC,IAAI,GAAG,IAAI;IACX,KAAAC,KAAK,GAAG,KAAK;IAGb,KAAAC,WAAW,GAAG,CACZ;MACET,KAAK,EAAE,YAAY;MACnBC,KAAK,EAAE,CAAC,OAAO,CAAC;MAChBC,MAAM,EAAE;KACT,CACF;IAGC,IAAI,CAACQ,QAAQ,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC9B,UAAU,CAAC+B,QAAQ,EAAE/B,UAAU,CAACgC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACnEC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClC,UAAU,CAAC+B,QAAQ,CAAC,CAAC;MACrCI,KAAK,EAAE,CACL,EAAE,EACF,CAACnC,UAAU,CAAC+B,QAAQ,EAAE/B,UAAU,CAACmC,KAAK,EAAEnC,UAAU,CAACoC,SAAS,CAAC,CAAC,CAAC,CAAC,CACjE;MACDC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACtC,UAAU,CAAC+B,QAAQ,CAAC,CAAC;MACjCQ,KAAK,EAAE,CAAC,EAAE,EAAE,CAACvC,UAAU,CAAC+B,QAAQ,CAAC,CAAC;MAClCS,OAAO,EAAE,CAAC,EAAE,EAAE,CAACxC,UAAU,CAAC+B,QAAQ,CAAC,CAAC;MACpCU,aAAa,EAAE,CAAC,KAAK,EAAE,CAACzC,UAAU,CAAC0C,YAAY,CAAC;KACjD,CAAC;EACJ;EACAC,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACjB,QAAQ,CAACkB,KAAK,CAAC;EAChD;;;uBAjCWxB,wBAAwB,EAAAX,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;YAAxB3B,wBAAwB;MAAA4B,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAzC,EAAA,CAAA0C,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC5BnChD,EADF,CAAAC,cAAA,iBAAyB,aACI;UACzBD,EAAA,CAAAkD,gBAAA,IAAAC,uCAAA,kBAAAnD,EAAA,CAAAoD,yBAAA,CAMC;UAMOpD,EAJR,CAAAC,cAAA,aAA0B,aAC6B,aACjC,aACI,SACd;UAAAD,EAAA,CAAAU,MAAA,uBAAgB;UACtBV,EADsB,CAAAG,YAAA,EAAK,EACrB;UAEJH,EADF,CAAAC,cAAA,cAAkB,eACiE;UAA1BD,EAAA,CAAAqD,UAAA,sBAAAC,4DAAA;YAAA,OAAYL,GAAA,CAAAjB,UAAA,EAAY;UAAA,EAAC;UAIxEhC,EAHN,CAAAC,cAAA,cAAiB,eACyC,0BACU,iBACnD;UAAAD,EAAA,CAAAU,MAAA,kBAAU;UAAAV,EAAA,CAAAG,YAAA,EAAY;UACjCH,EAAA,CAAAE,SAAA,iBAAiD;UACjDF,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,YAAI;UAAAV,EAAA,CAAAG,YAAA,EAAW;UACnCH,EAAA,CAAAuD,UAAA,KAAAC,gDAAA,oBAAmD;UAMvDxD,EADE,CAAAG,YAAA,EAAiB,EACb;UAGFH,EAFJ,CAAAC,cAAA,eAAwD,0BACU,iBACnD;UAAAD,EAAA,CAAAU,MAAA,iBAAS;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAChCH,EAAA,CAAAE,SAAA,iBAAuC;UACvCF,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,YAAI;UAG9BV,EAH8B,CAAAG,YAAA,EAAW,EACpB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,cAAiB,eAC2C,0BACQ,iBACnD;UAAAD,EAAA,CAAAU,MAAA,gBAAQ;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAC/BH,EAAA,CAAAE,SAAA,iBAAwF;UACxFF,EAAA,CAAAC,cAAA,oBAA2C;UAAvBD,EAAA,CAAAqD,UAAA,mBAAAI,6DAAA;YAAA,OAAAR,GAAA,CAAAnC,IAAA,IAAAmC,GAAA,CAAAnC,IAAA;UAAA,EAAsB;UACxCd,EAAA,CAAAU,MAAA,IAA0C;UAAAV,EAAA,CAAAG,YAAA,EAAW;UACvDH,EAAA,CAAAuD,UAAA,KAAAG,gDAAA,oBAAsD;UAO5D1D,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,cAAiB,eAC2C,0BACQ,iBACnD;UAAAD,EAAA,CAAAU,MAAA,aAAK;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAC5BH,EAAA,CAAAE,SAAA,iBAAiD;UACjDF,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,aAAK;UAAAV,EAAA,CAAAG,YAAA,EAAW;UACpCH,EAAA,CAAAuD,UAAA,KAAAI,gDAAA,oBAAqF;UAO3F3D,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,cAAiB,eAC2C,0BACQ,iBACnD;UAAAD,EAAA,CAAAU,MAAA,eAAO;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAC9BH,EAAA,CAAAE,SAAA,oBAAwD;UAG9DF,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,cAAiB,eACyC,0BACU,iBACnD;UAAAD,EAAA,CAAAU,MAAA,YAAI;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAC3BH,EAAA,CAAAE,SAAA,iBAAgD;UAChDF,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,qBAAa;UAAAV,EAAA,CAAAG,YAAA,EAAW;UAC5CH,EAAA,CAAAuD,UAAA,KAAAK,gDAAA,oBAAkD;UAMtD5D,EADE,CAAAG,YAAA,EAAiB,EACb;UAGFH,EAFJ,CAAAC,cAAA,eAAwD,0BACU,iBACnD;UAAAD,EAAA,CAAAU,MAAA,aAAK;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAC5BH,EAAA,CAAAE,SAAA,iBAAiD;UACjDF,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,gBAAQ;UAAAV,EAAA,CAAAG,YAAA,EAAW;UACvCH,EAAA,CAAAuD,UAAA,KAAAM,gDAAA,oBAAmD;UAOzD7D,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,cAAiB,eAC2C,0BACQ,iBACnD;UAAAD,EAAA,CAAAU,MAAA,eAAO;UAAAV,EAAA,CAAAG,YAAA,EAAY;UAE5BH,EADF,CAAAC,cAAA,sBAA+C,sBACf;UAC5BD,EAAA,CAAAU,MAAA,eACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAAgC;UAC9BD,EAAA,CAAAU,MAAA,iBACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAA+B;UAC7BD,EAAA,CAAAU,MAAA,gBACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAA+B;UAC7BD,EAAA,CAAAU,MAAA,gBACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAAkC;UAChCD,EAAA,CAAAU,MAAA,mBACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAAiC;UAC/BD,EAAA,CAAAU,MAAA,kBACF;UAAAV,EAAA,CAAAG,YAAA,EAAa;UACbH,EAAA,CAAAC,cAAA,sBAA8B;UAC5BD,EAAA,CAAAU,MAAA,eACF;UACFV,EADE,CAAAG,YAAA,EAAa,EACF;UACbH,EAAA,CAAAC,cAAA,oBAAoB;UAAAD,EAAA,CAAAU,MAAA,YAAI;UAAAV,EAAA,CAAAG,YAAA,EAAW;UACnCH,EAAA,CAAAuD,UAAA,KAAAO,gDAAA,oBAAqD;UAO3D9D,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAGFH,EAFJ,CAAAC,cAAA,cAAiB,eAC2C,wBACa;UAAAD,EAAA,CAAAU,MAAA,sCAGrE;UAEJV,EAFI,CAAAG,YAAA,EAAe,EACX,EACF;UAGFH,EAFJ,CAAAC,cAAA,cAAiB,eAC2C,kBAEzB;UAAAD,EAAA,CAAAU,MAAA,cAAM;UAAAV,EAAA,CAAAG,YAAA,EAAS;UAC9CH,EAAA,CAAAC,cAAA,mBAAqD;UAAAD,EAAA,CAAAU,MAAA,eAAM;UAU7EV,EAV6E,CAAAG,YAAA,EAAS,EAChE,EACF,EACD,EACH,EACF,EACF,EACF,EAEF,EACE;;;;;;;;;UA9JNH,EAAA,CAAAI,SAAA,GAMC;UANDJ,EAAA,CAAA+D,UAAA,CAAAd,GAAA,CAAAjC,WAAA,CAMC;UASuChB,EAAA,CAAAI,SAAA,GAAsB;UAAtBJ,EAAA,CAAAK,UAAA,cAAA4C,GAAA,CAAAhC,QAAA,CAAsB;UAO9CjB,EAAA,CAAAI,SAAA,GAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAC,OAAA,GAAAhB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,4BAAAD,OAAA,CAAAE,QAAA,wBAIC;UAe0CnE,EAAA,CAAAI,SAAA,IAAmC;UAAnCJ,EAAA,CAAAK,UAAA,SAAA4C,GAAA,CAAAnC,IAAA,uBAAmC;UAE5Ed,EAAA,CAAAI,SAAA,GAA0C;UAA1CJ,EAAA,CAAAoE,kBAAA,MAAAnB,GAAA,CAAAnC,IAAA,uCAA0C;UAC5Cd,EAAA,CAAAI,SAAA,EAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAK,OAAA,GAAApB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,+BAAAG,OAAA,CAAAF,QAAA,wBAIC;UAUDnE,EAAA,CAAAI,SAAA,GAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAM,OAAA,GAAArB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,4BAAAI,OAAA,CAAAH,QAAA,mBAAAG,OAAA,GAAArB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,4BAAAI,OAAA,CAAAC,OAAA,YAIC;UAkBDvE,EAAA,CAAAI,SAAA,IAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAQ,OAAA,GAAAvB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,2BAAAM,OAAA,CAAAL,QAAA,wBAIC;UAQDnE,EAAA,CAAAI,SAAA,GAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAS,OAAA,GAAAxB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,4BAAAO,OAAA,CAAAN,QAAA,wBAIC;UASanE,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAAK,UAAA,kBAAiB;UAGjBL,EAAA,CAAAI,SAAA,GAAmB;UAAnBJ,EAAA,CAAAK,UAAA,oBAAmB;UAGnBL,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAAK,UAAA,mBAAkB;UAGlBL,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAAK,UAAA,mBAAkB;UAGlBL,EAAA,CAAAI,SAAA,GAAqB;UAArBJ,EAAA,CAAAK,UAAA,sBAAqB;UAGrBL,EAAA,CAAAI,SAAA,GAAoB;UAApBJ,EAAA,CAAAK,UAAA,qBAAoB;UAGpBL,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAAK,UAAA,kBAAiB;UAK/BL,EAAA,CAAAI,SAAA,GAIC;UAJDJ,EAAA,CAAAgE,aAAA,OAAAU,QAAA,GAAAzB,GAAA,CAAAhC,QAAA,CAAAiD,GAAA,8BAAAQ,QAAA,CAAAP,QAAA,wBAIC;UAeDnE,EAAA,CAAAI,SAAA,GAA4B;UAA5BJ,EAAA,CAAAK,UAAA,cAAA4C,GAAA,CAAAhC,QAAA,CAAA0D,KAAA,CAA4B;;;qBDpI5C5E,mBAAmB,EACnBT,WAAW,EAAA+C,EAAA,CAAAuC,aAAA,EAAAvC,EAAA,CAAAwC,oBAAA,EAAAxC,EAAA,CAAAyC,eAAA,EAAAzC,EAAA,CAAA0C,oBAAA,EAAA1C,EAAA,CAAA2C,iBAAA,EACXzF,mBAAmB,EAAA8C,EAAA,CAAA4C,kBAAA,EAAA5C,EAAA,CAAA6C,eAAA,EACnBpF,kBAAkB,EAAAqF,EAAA,CAAAC,YAAA,EAAAD,EAAA,CAAAE,QAAA,EAAAF,EAAA,CAAAG,QAAA,EAAAH,EAAA,CAAAI,SAAA,EAClB1F,cAAc,EAAA2F,EAAA,CAAAC,QAAA,EACd7F,aAAa,EAAA8F,EAAA,CAAAC,OAAA,EACbhG,eAAe,EAAAiG,EAAA,CAAAC,SAAA,EAAAC,EAAA,CAAAC,SAAA,EACfrG,eAAe,EACfD,iBAAiB,EAAAuG,EAAA,CAAAC,WAAA,EACjBzG,eAAe,EAAA0G,EAAA,CAAAC,SAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}