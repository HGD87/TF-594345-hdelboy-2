{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  canActivate(route, state) {\n    if (this.authService.currentUserValue) {\n      const userRole = this.authService.currentUserValue.role;\n      if (route.data['role'] && route.data['role'].indexOf(userRole) === -1) {\n        this.router.navigate(['/authentication/signin']);\n        return false;\n      }\n      return true;\n    }\n    this.router.navigate(['/authentication/signin']);\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","route","state","currentUserValue","userRole","role","data","indexOf","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/core/guard/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.currentUserValue) {\r\n      const userRole = this.authService.currentUserValue.role;\r\n      if (route.data['role'] && route.data['role'].indexOf(userRole) === -1) {\r\n        this.router.navigate(['/authentication/signin']);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/authentication/signin']);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExE;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACJ,WAAW,CAACK,gBAAgB,EAAE;MACrC,MAAMC,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACK,gBAAgB,CAACE,IAAI;MACvD,IAAIJ,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC,IAAIL,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC,CAACC,OAAO,CAACH,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QACrE,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;QAChD,OAAO,KAAK;;MAEd,OAAO,IAAI;;IAGb,IAAI,CAACT,MAAM,CAACS,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;IAChD,OAAO,KAAK;EACd;;;uBAhBWZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATlB,SAAS;MAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}