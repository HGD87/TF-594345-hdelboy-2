{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Inject, Directive, EventEmitter, HostBinding, Output, Input, HostListener, ContentChildren, Component, ChangeDetectionStrategy, TemplateRef, ContentChild, ViewContainerRef, ViewChild, SkipSelf, ViewEncapsulation, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"cellTemplate\"];\nconst _c2 = a0 => ({\n  cellContext: a0\n});\nfunction DataTableBodyCellComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 5)(1, \"input\", 6);\n    i0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_label_1_Template_input_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onCheckboxChange($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r1.isSelected);\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 12);\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 13);\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 14);\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_ng_container_2_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onTreeAction());\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template, 1, 0, \"i\", 9)(3, DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template, 1, 0, \"i\", 10)(4, DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template, 1, 0, \"i\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.treeStatus === \"disabled\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.treeStatus === \"loading\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.treeStatus === \"collapsed\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.treeStatus === \"expanded\" || ctx_r1.treeStatus === \"disabled\");\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction DataTableBodyCellComponent_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.column.treeToggleTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r1.cellContext));\n  }\n}\nfunction DataTableBodyCellComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DataTableBodyCellComponent_ng_container_2_button_1_Template, 5, 4, \"button\", 7)(2, DataTableBodyCellComponent_ng_container_2_2_Template, 1, 4, null, 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.column.treeToggleTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.column.treeToggleTemplate);\n  }\n}\nfunction DataTableBodyCellComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r1.sanitizedValue)(\"innerHTML\", ctx_r1.value, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DataTableBodyCellComponent_4_ng_template_0_Template(rf, ctx) {}\nfunction DataTableBodyCellComponent_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableBodyCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 15, 0, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.column.cellTemplate)(\"ngTemplateOutletContext\", ctx_r1.cellContext);\n  }\n}\nfunction DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-body-cell\", 3);\n    i0.ɵɵlistener(\"activate\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_activate_0_listener($event) {\n      const ii_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onActivate($event, ii_r2));\n    })(\"treeAction\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_treeAction_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onTreeAction());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"row\", ctx_r2.row)(\"group\", ctx_r2.group)(\"expanded\", ctx_r2.expanded)(\"isSelected\", ctx_r2.isSelected)(\"rowIndex\", ctx_r2.rowIndex)(\"column\", column_r4)(\"rowHeight\", ctx_r2.rowHeight)(\"displayCheck\", ctx_r2.displayCheck)(\"treeStatus\", ctx_r2.treeStatus);\n  }\n}\nfunction DataTableBodyRowComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template, 1, 9, \"datatable-body-cell\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const colGroup_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"datatable-row-\", colGroup_r5.type, \" datatable-row-group\");\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2._groupStyles[colGroup_r5.type]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", colGroup_r5.columns)(\"ngForTrackBy\", ctx_r2.columnTrackingFn);\n  }\n}\nfunction DataTableSummaryRowComponent_datatable_body_row_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"datatable-body-row\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerWidth\", ctx_r0.innerWidth)(\"offsetX\", ctx_r0.offsetX)(\"columns\", ctx_r0._internalColumns)(\"rowHeight\", ctx_r0.rowHeight)(\"row\", ctx_r0.summaryRow)(\"rowIndex\", -1);\n  }\n}\nfunction DataTableRowWrapperComponent_div_0_1_ng_template_0_Template(rf, ctx) {}\nfunction DataTableRowWrapperComponent_div_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.groupHeader.template)(\"ngTemplateOutletContext\", ctx_r0.groupContext);\n  }\n}\nfunction DataTableRowWrapperComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_0_1_Template, 1, 2, null, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.getGroupHeaderStyle());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.groupHeader && ctx_r0.groupHeader.template);\n  }\n}\nfunction DataTableRowWrapperComponent_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\"]);\n  }\n}\nfunction DataTableRowWrapperComponent_div_2_1_ng_template_0_Template(rf, ctx) {}\nfunction DataTableRowWrapperComponent_div_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.rowDetail.template)(\"ngTemplateOutletContext\", ctx_r0.rowContext);\n  }\n}\nfunction DataTableRowWrapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_2_1_Template, 1, 2, null, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r0.detailRowHeight, \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rowDetail && ctx_r0.rowDetail.template);\n  }\n}\nfunction DataTableBodyComponent_datatable_progress_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"datatable-progress\");\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"datatable-summary-row\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"rowHeight\", ctx_r2.summaryHeight)(\"offsetX\", ctx_r2.offsetX)(\"innerWidth\", ctx_r2.innerWidth)(\"rows\", ctx_r2.rows)(\"columns\", ctx_r2.columns);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-body-row\", 13);\n    i0.ɵɵlistener(\"treeAction\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_treeAction_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const group_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onTreeAction(group_r6));\n    })(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const i_r7 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      const selector_r8 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selector_r8.onActivate($event, ctx_r2.indexes.first + i_r7));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    const selector_r8 = i0.ɵɵreference(2);\n    i0.ɵɵproperty(\"isSelected\", selector_r8.getRowSelected(group_r6))(\"innerWidth\", ctx_r2.innerWidth)(\"offsetX\", ctx_r2.offsetX)(\"columns\", ctx_r2.columns)(\"rowHeight\", ctx_r2.getRowHeight(group_r6))(\"row\", group_r6)(\"rowIndex\", ctx_r2.getRowIndex(group_r6))(\"expanded\", ctx_r2.getRowExpanded(group_r6))(\"rowClass\", ctx_r2.rowClass)(\"displayCheck\", ctx_r2.displayCheck)(\"treeStatus\", group_r6 && group_r6.treeStatus);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-body-row\", 15);\n    i0.ɵɵlistener(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template_datatable_body_row_activate_0_listener($event) {\n      const i_r10 = i0.ɵɵrestoreView(_r9).index;\n      i0.ɵɵnextContext(4);\n      const selector_r8 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selector_r8.onActivate($event, i_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r11 = ctx.$implicit;\n    const group_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    const selector_r8 = i0.ɵɵreference(2);\n    i0.ɵɵproperty(\"isSelected\", selector_r8.getRowSelected(row_r11))(\"innerWidth\", ctx_r2.innerWidth)(\"offsetX\", ctx_r2.offsetX)(\"columns\", ctx_r2.columns)(\"rowHeight\", ctx_r2.getRowHeight(row_r11))(\"row\", row_r11)(\"group\", group_r6.value)(\"rowIndex\", ctx_r2.getRowIndex(row_r11))(\"expanded\", ctx_r2.getRowExpanded(row_r11))(\"rowClass\", ctx_r2.rowClass);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template, 1, 10, \"datatable-body-row\", 14);\n  }\n  if (rf & 2) {\n    const group_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", group_r6.value)(\"ngForTrackBy\", ctx_r2.rowTrackingFn);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-row-wrapper\", 11);\n    i0.ɵɵlistener(\"rowContextmenu\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template_datatable_row_wrapper_rowContextmenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.rowContextmenu.emit($event));\n    });\n    i0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template, 1, 11, \"datatable-body-row\", 12)(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template, 1, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const groupedRowsTemplate_r12 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"groupedRows\", ctx_r2.groupedRows)(\"innerWidth\", ctx_r2.innerWidth)(\"ngStyle\", ctx_r2.getRowsStyles(group_r6))(\"rowDetail\", ctx_r2.rowDetail)(\"groupHeader\", ctx_r2.groupHeader)(\"offsetX\", ctx_r2.offsetX)(\"detailRowHeight\", ctx_r2.getDetailRowHeight(group_r6 && group_r6[i_r7], i_r7))(\"row\", group_r6)(\"expanded\", ctx_r2.getRowExpanded(group_r6))(\"rowIndex\", ctx_r2.getRowIndex(group_r6 && group_r6[i_r7]));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.groupedRows)(\"ngIfElse\", groupedRowsTemplate_r12);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"datatable-summary-row\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.getBottomSummaryRowStyles())(\"rowHeight\", ctx_r2.summaryHeight)(\"offsetX\", ctx_r2.offsetX)(\"innerWidth\", ctx_r2.innerWidth)(\"rows\", ctx_r2.rows)(\"columns\", ctx_r2.columns);\n  }\n}\nfunction DataTableBodyComponent_datatable_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-scroller\", 6);\n    i0.ɵɵlistener(\"scroll\", function DataTableBodyComponent_datatable_scroller_3_Template_datatable_scroller_scroll_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onBodyScroll($event));\n    });\n    i0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template, 1, 5, \"datatable-summary-row\", 7)(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template, 4, 12, \"datatable-row-wrapper\", 8)(3, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template, 1, 6, \"datatable-summary-row\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"scrollbarV\", ctx_r2.scrollbarV)(\"scrollbarH\", ctx_r2.scrollbarH)(\"scrollHeight\", ctx_r2.scrollHeight)(\"scrollWidth\", ctx_r2.columnGroupWidths == null ? null : ctx_r2.columnGroupWidths.total);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"top\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.temp)(\"ngForTrackBy\", ctx_r2.rowTrackingFn);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"bottom\");\n  }\n}\nfunction DataTableBodyComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.emptyMessage, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DataTableHeaderCellComponent_1_ng_template_0_Template(rf, ctx) {}\nfunction DataTableHeaderCellComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableHeaderCellComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.targetMarkerTemplate)(\"ngTemplateOutletContext\", ctx_r0.targetMarkerContext);\n  }\n}\nfunction DataTableHeaderCellComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 6)(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function DataTableHeaderCellComponent_label_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.select.emit(!ctx_r0.allRowsSelected));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r0.allRowsSelected);\n  }\n}\nfunction DataTableHeaderCellComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 8)(1, \"span\", 9);\n    i0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_span_3_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSort());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.name, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction DataTableHeaderCellComponent_4_ng_template_0_Template(rf, ctx) {}\nfunction DataTableHeaderCellComponent_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableHeaderCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.column.headerTemplate)(\"ngTemplateOutletContext\", ctx_r0.cellContext);\n  }\n}\nfunction DataTableHeaderComponent_div_1_datatable_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-header-cell\", 4);\n    i0.ɵɵlistener(\"resize\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_resize_0_listener($event) {\n      const column_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onColumnResized($event, column_r2));\n    })(\"longPressStart\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressStart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onLongPressStart($event));\n    })(\"longPressEnd\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressEnd_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onLongPressEnd($event));\n    })(\"sort\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onSort($event));\n    })(\"select\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.select.emit($event));\n    })(\"columnContextmenu\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_columnContextmenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.columnContextmenu.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"resizeEnabled\", column_r2.resizeable)(\"pressModel\", column_r2)(\"pressEnabled\", ctx_r2.reorderable && column_r2.draggable)(\"dragX\", ctx_r2.reorderable && column_r2.draggable && column_r2.dragging)(\"dragY\", false)(\"dragModel\", column_r2)(\"dragEventTarget\", ctx_r2.dragEventTarget)(\"headerHeight\", ctx_r2.headerHeight)(\"isTarget\", column_r2.isTarget)(\"targetMarkerTemplate\", ctx_r2.targetMarkerTemplate)(\"targetMarkerContext\", column_r2.targetMarkerContext)(\"column\", column_r2)(\"sortType\", ctx_r2.sortType)(\"sorts\", ctx_r2.sorts)(\"selectionType\", ctx_r2.selectionType)(\"sortAscendingIcon\", ctx_r2.sortAscendingIcon)(\"sortDescendingIcon\", ctx_r2.sortDescendingIcon)(\"sortUnsetIcon\", ctx_r2.sortUnsetIcon)(\"allRowsSelected\", ctx_r2.allRowsSelected);\n  }\n}\nfunction DataTableHeaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_datatable_header_cell_1_Template, 1, 19, \"datatable-header-cell\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const colGroup_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(\"datatable-row-\" + colGroup_r4.type);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2._styleByGroup[colGroup_r4.type]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", colGroup_r4.columns)(\"ngForTrackBy\", ctx_r2.columnTrackingFn);\n  }\n}\nfunction DataTablePagerComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function DataTablePagerComponent_li_7_Template_a_click_1_listener() {\n      const pg_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectPage(pg_r2.number));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pg_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", pg_r2.number === ctx_r2.page);\n    i0.ɵɵattribute(\"aria-label\", \"page \" + pg_r2.number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", pg_r2.text, \" \");\n  }\n}\nconst _c3 = a0 => ({\n  \"selected-count\": a0\n});\nconst _c4 = (a0, a1, a2, a3, a4) => ({\n  rowCount: a0,\n  pageSize: a1,\n  selectedCount: a2,\n  curPage: a3,\n  offset: a4\n});\nfunction DataTableFooterComponent_1_ng_template_0_Template(rf, ctx) {}\nfunction DataTableFooterComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataTableFooterComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.footerTemplate.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c4, ctx_r0.rowCount, ctx_r0.pageSize, ctx_r0.selectedCount, ctx_r0.curPage, ctx_r0.offset));\n  }\n}\nfunction DataTableFooterComponent_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.selectedCount == null ? null : ctx_r0.selectedCount.toLocaleString(), \" \", ctx_r0.selectedMessage, \" / \");\n  }\n}\nfunction DataTableFooterComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, DataTableFooterComponent_div_2_span_1_Template, 2, 2, \"span\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedMessage);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.rowCount == null ? null : ctx_r0.rowCount.toLocaleString(), \" \", ctx_r0.totalMessage, \" \");\n  }\n}\nfunction DataTableFooterComponent_datatable_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-pager\", 6);\n    i0.ɵɵlistener(\"change\", function DataTableFooterComponent_datatable_pager_3_Template_datatable_pager_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.page.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pagerLeftArrowIcon\", ctx_r0.pagerLeftArrowIcon)(\"pagerRightArrowIcon\", ctx_r0.pagerRightArrowIcon)(\"pagerPreviousIcon\", ctx_r0.pagerPreviousIcon)(\"pagerNextIcon\", ctx_r0.pagerNextIcon)(\"page\", ctx_r0.curPage)(\"size\", ctx_r0.pageSize)(\"count\", ctx_r0.rowCount)(\"hidden\", !ctx_r0.isVisible);\n  }\n}\nfunction DatatableComponent_datatable_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-header\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"sort\", function DatatableComponent_datatable_header_1_Template_datatable_header_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onColumnSort($event));\n    })(\"resize\", function DatatableComponent_datatable_header_1_Template_datatable_header_resize_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onColumnResize($event));\n    })(\"reorder\", function DatatableComponent_datatable_header_1_Template_datatable_header_reorder_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onColumnReorder($event));\n    })(\"select\", function DatatableComponent_datatable_header_1_Template_datatable_header_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onHeaderSelect($event));\n    })(\"columnContextmenu\", function DatatableComponent_datatable_header_1_Template_datatable_header_columnContextmenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onColumnContextmenu($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"sorts\", ctx_r1.sorts)(\"sortType\", ctx_r1.sortType)(\"scrollbarH\", ctx_r1.scrollbarH)(\"innerWidth\", ctx_r1._innerWidth)(\"offsetX\", i0.ɵɵpipeBind1(1, 15, ctx_r1._offsetX))(\"dealsWithGroup\", ctx_r1.groupedRows !== undefined)(\"columns\", ctx_r1._internalColumns)(\"headerHeight\", ctx_r1.headerHeight)(\"reorderable\", ctx_r1.reorderable)(\"targetMarkerTemplate\", ctx_r1.targetMarkerTemplate)(\"sortAscendingIcon\", ctx_r1.cssClasses.sortAscending)(\"sortDescendingIcon\", ctx_r1.cssClasses.sortDescending)(\"sortUnsetIcon\", ctx_r1.cssClasses.sortUnset)(\"allRowsSelected\", ctx_r1.allRowsSelected)(\"selectionType\", ctx_r1.selectionType);\n  }\n}\nfunction DatatableComponent_datatable_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"datatable-footer\", 5);\n    i0.ɵɵlistener(\"page\", function DatatableComponent_datatable_footer_4_Template_datatable_footer_page_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFooterPage($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rowCount\", ctx_r1.rowCount)(\"pageSize\", ctx_r1.pageSize)(\"offset\", ctx_r1.offset)(\"footerHeight\", ctx_r1.footerHeight)(\"footerTemplate\", ctx_r1.footer)(\"totalMessage\", ctx_r1.messages.totalMessage)(\"pagerLeftArrowIcon\", ctx_r1.cssClasses.pagerLeftArrow)(\"pagerRightArrowIcon\", ctx_r1.cssClasses.pagerRightArrow)(\"pagerPreviousIcon\", ctx_r1.cssClasses.pagerPrevious)(\"selectedCount\", ctx_r1.selected.length)(\"selectedMessage\", !!ctx_r1.selectionType && ctx_r1.messages.selectedMessage)(\"pagerNextIcon\", ctx_r1.cssClasses.pagerNext);\n  }\n}\nclass ScrollbarHelper {\n  constructor(document) {\n    this.document = document;\n    this.width = this.getWidth();\n  }\n  getWidth() {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n  }\n}\nScrollbarHelper.ɵfac = function ScrollbarHelper_Factory(t) {\n  return new (t || ScrollbarHelper)(i0.ɵɵinject(DOCUMENT));\n};\nScrollbarHelper.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScrollbarHelper,\n  factory: ScrollbarHelper.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollbarHelper, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass DimensionsHelper {\n  getDimensions(element) {\n    return element.getBoundingClientRect();\n  }\n}\nDimensionsHelper.ɵfac = function DimensionsHelper_Factory(t) {\n  return new (t || DimensionsHelper)();\n};\nDimensionsHelper.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DimensionsHelper,\n  factory: DimensionsHelper.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DimensionsHelper, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\nclass ColumnChangesService {\n  constructor() {\n    this.columnInputChanges = new Subject();\n  }\n  get columnInputChanges$() {\n    return this.columnInputChanges.asObservable();\n  }\n  onInputChange() {\n    this.columnInputChanges.next();\n  }\n}\nColumnChangesService.ɵfac = function ColumnChangesService_Factory(t) {\n  return new (t || ColumnChangesService)();\n};\nColumnChangesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColumnChangesService,\n  factory: ColumnChangesService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChangesService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass DataTableFooterTemplateDirective {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDataTableFooterTemplateDirective.ɵfac = function DataTableFooterTemplateDirective_Factory(t) {\n  return new (t || DataTableFooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDataTableFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataTableFooterTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-footer-template\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-footer-template]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nclass VisibilityDirective {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.isVisible = false;\n    this.visible = new EventEmitter();\n  }\n  ngOnInit() {\n    this.runCheck();\n  }\n  ngOnDestroy() {\n    clearTimeout(this.timeout);\n  }\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n  runCheck() {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n    this.timeout = setTimeout(() => check());\n  }\n}\nVisibilityDirective.ɵfac = function VisibilityDirective_Factory(t) {\n  return new (t || VisibilityDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nVisibilityDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityDirective,\n  selectors: [[\"\", \"visibilityObserver\", \"\"]],\n  hostVars: 2,\n  hostBindings: function VisibilityDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"visible\", ctx.isVisible);\n    }\n  },\n  outputs: {\n    visible: \"visible\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[visibilityObserver]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    isVisible: [{\n      type: HostBinding,\n      args: ['class.visible']\n    }],\n    visible: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nclass DraggableDirective {\n  constructor(element) {\n    this.dragX = true;\n    this.dragY = true;\n    this.dragStart = new EventEmitter();\n    this.dragging = new EventEmitter();\n    this.dragEnd = new EventEmitter();\n    this.isDragging = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n  ngOnDestroy() {\n    this._destroySubscription();\n  }\n  onMouseup(event) {\n    if (!this.isDragging) return;\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n  onMousedown(event) {\n    // we only want to drag the inner header text\n    const isDragElm = event.target.classList.contains('draggable');\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n      const mouseDownPos = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe(ev => this.onMouseup(ev));\n      const mouseMoveSub = fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(ev => this.move(ev, mouseDownPos));\n      this.subscription.add(mouseMoveSub);\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n  move(event, mouseDownPos) {\n    if (!this.isDragging) return;\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n    this.element.classList.add('dragging');\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n  _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) {\n  return new (t || DraggableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDraggableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DraggableDirective,\n  selectors: [[\"\", \"draggable\", \"\"]],\n  inputs: {\n    dragEventTarget: \"dragEventTarget\",\n    dragModel: \"dragModel\",\n    dragX: \"dragX\",\n    dragY: \"dragY\"\n  },\n  outputs: {\n    dragStart: \"dragStart\",\n    dragging: \"dragging\",\n    dragEnd: \"dragEnd\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[draggable]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    dragEventTarget: [{\n      type: Input\n    }],\n    dragModel: [{\n      type: Input\n    }],\n    dragX: [{\n      type: Input\n    }],\n    dragY: [{\n      type: Input\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass ResizeableDirective {\n  constructor(element, renderer) {\n    this.renderer = renderer;\n    this.resizeEnabled = true;\n    this.resize = new EventEmitter();\n    this.resizing = false;\n    this.element = element.nativeElement;\n  }\n  ngAfterViewInit() {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n  ngOnDestroy() {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else if (this.resizeHandle) {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n  onMouseup() {\n    this.resizing = false;\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n  onMousedown(event) {\n    const isHandle = event.target.classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe(ev => this.onMouseup());\n      const mouseMoveSub = fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(e => this.move(e, initialWidth, mouseDownScreenX));\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n  move(event, initialWidth, mouseDownScreenX) {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n  _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\nResizeableDirective.ɵfac = function ResizeableDirective_Factory(t) {\n  return new (t || ResizeableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nResizeableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizeableDirective,\n  selectors: [[\"\", \"resizeable\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ResizeableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function ResizeableDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"resizeable\", ctx.resizeEnabled);\n    }\n  },\n  inputs: {\n    resizeEnabled: \"resizeEnabled\",\n    minWidth: \"minWidth\",\n    maxWidth: \"maxWidth\"\n  },\n  outputs: {\n    resize: \"resize\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[resizeable]',\n      host: {\n        '[class.resizeable]': 'resizeEnabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    resizeEnabled: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }],\n    resize: [{\n      type: Output\n    }],\n    onMousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }]\n  });\n})();\nclass OrderableDirective {\n  constructor(differs, document) {\n    this.document = document;\n    this.reorder = new EventEmitter();\n    this.targetChanged = new EventEmitter();\n    this.differ = differs.find({}).create();\n  }\n  ngAfterContentInit() {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n  ngOnDestroy() {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n  updateSubscriptions() {\n    const diffs = this.differ.diff(this.createMapDiffs());\n    if (diffs) {\n      const subscribe = ({\n        currentValue,\n        previousValue\n      }) => {\n        unsubscribe({\n          previousValue\n        });\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n      const unsubscribe = ({\n        previousValue\n      }) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n  onDragStart() {\n    this.positions = {};\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n  onDragging({\n    element,\n    model,\n    event\n  }) {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n  onDragEnd({\n    element,\n    model,\n    event\n  }) {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n  isTarget(model, event) {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find(el => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n      i++;\n    }\n  }\n  createMapDiffs() {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\nOrderableDirective.ɵfac = function OrderableDirective_Factory(t) {\n  return new (t || OrderableDirective)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(DOCUMENT));\n};\nOrderableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: OrderableDirective,\n  selectors: [[\"\", \"orderable\", \"\"]],\n  contentQueries: function OrderableDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DraggableDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.draggables = _t);\n    }\n  },\n  outputs: {\n    reorder: \"reorder\",\n    targetChanged: \"targetChanged\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrderableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[orderable]'\n    }]\n  }], function () {\n    return [{\n      type: i0.KeyValueDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    reorder: [{\n      type: Output\n    }],\n    targetChanged: [{\n      type: Output\n    }],\n    draggables: [{\n      type: ContentChildren,\n      args: [DraggableDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nclass LongPressDirective {\n  constructor() {\n    this.pressEnabled = true;\n    this.duration = 500;\n    this.longPressStart = new EventEmitter();\n    this.longPressing = new EventEmitter();\n    this.longPressEnd = new EventEmitter();\n    this.mouseX = 0;\n    this.mouseY = 0;\n  }\n  get press() {\n    return this.pressing;\n  }\n  get isLongPress() {\n    return this.isLongPressing;\n  }\n  onMouseDown(event) {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n    // don't start drag if its on resize handle\n    const target = event.target;\n    if (target.classList.contains('resize-handle')) return;\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n    this.pressing = true;\n    this.isLongPressing = false;\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe(ev => this.onMouseup());\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n      this.subscription.add(fromEvent(document, 'mousemove').pipe(takeUntil(mouseup)).subscribe(mouseEvent => this.onMouseMove(mouseEvent)));\n      this.loop(event);\n    }, this.duration);\n    this.loop(event);\n  }\n  onMouseMove(event) {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n  loop(event) {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n  endPress() {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n  onMouseup() {\n    this.endPress();\n  }\n  ngOnDestroy() {\n    this._destroySubscription();\n  }\n  _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\nLongPressDirective.ɵfac = function LongPressDirective_Factory(t) {\n  return new (t || LongPressDirective)();\n};\nLongPressDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LongPressDirective,\n  selectors: [[\"\", \"long-press\", \"\"]],\n  hostVars: 4,\n  hostBindings: function LongPressDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function LongPressDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"press\", ctx.press)(\"longpress\", ctx.isLongPress);\n    }\n  },\n  inputs: {\n    pressEnabled: \"pressEnabled\",\n    pressModel: \"pressModel\",\n    duration: \"duration\"\n  },\n  outputs: {\n    longPressStart: \"longPressStart\",\n    longPressing: \"longPressing\",\n    longPressEnd: \"longPressEnd\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LongPressDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[long-press]'\n    }]\n  }], null, {\n    pressEnabled: [{\n      type: Input\n    }],\n    pressModel: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    longPressStart: [{\n      type: Output\n    }],\n    longPressing: [{\n      type: Output\n    }],\n    longPressEnd: [{\n      type: Output\n    }],\n    press: [{\n      type: HostBinding,\n      args: ['class.press']\n    }],\n    isLongPress: [{\n      type: HostBinding,\n      args: ['class.longpress']\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }]\n  });\n})();\nclass ScrollerComponent {\n  constructor(ngZone, element, renderer) {\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.scrollbarV = false;\n    this.scrollbarH = false;\n    this.scroll = new EventEmitter();\n    this.scrollYPos = 0;\n    this.scrollXPos = 0;\n    this.prevScrollYPos = 0;\n    this.prevScrollXPos = 0;\n    this._scrollEventListener = null;\n    this.element = element.nativeElement;\n  }\n  ngOnInit() {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n  ngOnDestroy() {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n  setOffset(offsetY) {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n  onScrolled(event) {\n    const dom = event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n  updateOffset() {\n    let direction;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\nScrollerComponent.ɵfac = function ScrollerComponent_Factory(t) {\n  return new (t || ScrollerComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nScrollerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScrollerComponent,\n  selectors: [[\"datatable-scroller\"]],\n  hostAttrs: [1, \"datatable-scroll\"],\n  hostVars: 4,\n  hostBindings: function ScrollerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.scrollHeight, \"px\")(\"width\", ctx.scrollWidth, \"px\");\n    }\n  },\n  inputs: {\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    scrollHeight: \"scrollHeight\",\n    scrollWidth: \"scrollWidth\"\n  },\n  outputs: {\n    scroll: \"scroll\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ScrollerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-scroller',\n      template: ` <ng-content></ng-content> `,\n      host: {\n        class: 'datatable-scroll'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }],\n    scrollWidth: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }, {\n      type: Input\n    }],\n    scroll: [{\n      type: Output\n    }]\n  });\n})();\nclass DatatableGroupHeaderTemplateDirective {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDatatableGroupHeaderTemplateDirective.ɵfac = function DatatableGroupHeaderTemplateDirective_Factory(t) {\n  return new (t || DatatableGroupHeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDatatableGroupHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DatatableGroupHeaderTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-group-header-template\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableGroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-group-header-template]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass DatatableGroupHeaderDirective {\n  constructor() {\n    /**\n     * Row height is required when virtual scroll is enabled.\n     */\n    this.rowHeight = 0;\n    /**\n     * Track toggling of group visibility\n     */\n    this.toggle = new EventEmitter();\n  }\n  get template() {\n    return this._templateInput || this._templateQuery;\n  }\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group) {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n  /**\n   * Expand all groups\n   */\n  expandAllGroups() {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups() {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\nDatatableGroupHeaderDirective.ɵfac = function DatatableGroupHeaderDirective_Factory(t) {\n  return new (t || DatatableGroupHeaderDirective)();\n};\nDatatableGroupHeaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DatatableGroupHeaderDirective,\n  selectors: [[\"ngx-datatable-group-header\"]],\n  contentQueries: function DatatableGroupHeaderDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DatatableGroupHeaderTemplateDirective, 7, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    rowHeight: \"rowHeight\",\n    _templateInput: [i0.ɵɵInputFlags.None, \"template\", \"_templateInput\"]\n  },\n  outputs: {\n    toggle: \"toggle\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableGroupHeaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-group-header'\n    }]\n  }], null, {\n    rowHeight: [{\n      type: Input\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DatatableGroupHeaderTemplateDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    toggle: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Always returns the empty string ''\n */\nfunction emptyStringGetter() {\n  return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nfunction getterForProp(prop) {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nfunction numericIndexGetter(row, index) {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nfunction shallowValueGetter(obj, fieldName) {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nfunction deepValueGetter(obj, path) {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n  current = obj;\n  const split = path.split('.');\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n  return current;\n}\nfunction optionalGetterForProp(prop) {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nfunction groupRowsByParents(rows, from, to) {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node = null;\n    nodeById[0] = new TreeNode(); // that's the root node\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n    let resolvedRows = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\nclass TreeNode {\n  constructor(row = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n  flatten(f, recursive) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nfunction camelCase(str) {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n  // Lower case first character and some other stuff\n  str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase();\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n  return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nfunction deCamelCase(str) {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nfunction id() {\n  return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n}\n\n/**\n * Sets the column defaults\n */\nfunction setColumnDefaults(columns) {\n  if (!columns) return;\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound = false;\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\nfunction isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n */\nfunction translateTemplates(templates) {\n  const result = [];\n  for (const temp of templates) {\n    const col = {};\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n    result.push(col);\n  }\n  return result;\n}\nvar ColumnMode;\n(function (ColumnMode) {\n  ColumnMode[\"standard\"] = \"standard\";\n  ColumnMode[\"flex\"] = \"flex\";\n  ColumnMode[\"force\"] = \"force\";\n})(ColumnMode || (ColumnMode = {}));\nvar SelectionType;\n(function (SelectionType) {\n  SelectionType[\"single\"] = \"single\";\n  SelectionType[\"multi\"] = \"multi\";\n  SelectionType[\"multiClick\"] = \"multiClick\";\n  SelectionType[\"cell\"] = \"cell\";\n  SelectionType[\"checkbox\"] = \"checkbox\";\n})(SelectionType || (SelectionType = {}));\nvar SortType;\n(function (SortType) {\n  SortType[\"single\"] = \"single\";\n  SortType[\"multi\"] = \"multi\";\n})(SortType || (SortType = {}));\nvar ContextmenuType;\n(function (ContextmenuType) {\n  ContextmenuType[\"header\"] = \"header\";\n  ContextmenuType[\"body\"] = \"body\";\n})(ContextmenuType || (ContextmenuType = {}));\nclass DataTableColumnHeaderDirective {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDataTableColumnHeaderDirective.ɵfac = function DataTableColumnHeaderDirective_Factory(t) {\n  return new (t || DataTableColumnHeaderDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDataTableColumnHeaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataTableColumnHeaderDirective,\n  selectors: [[\"\", \"ngx-datatable-header-template\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableColumnHeaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-header-template]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass DataTableColumnCellDirective {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDataTableColumnCellDirective.ɵfac = function DataTableColumnCellDirective_Factory(t) {\n  return new (t || DataTableColumnCellDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDataTableColumnCellDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataTableColumnCellDirective,\n  selectors: [[\"\", \"ngx-datatable-cell-template\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableColumnCellDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-cell-template]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass DataTableColumnCellTreeToggle {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDataTableColumnCellTreeToggle.ɵfac = function DataTableColumnCellTreeToggle_Factory(t) {\n  return new (t || DataTableColumnCellTreeToggle)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDataTableColumnCellTreeToggle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataTableColumnCellTreeToggle,\n  selectors: [[\"\", \"ngx-datatable-tree-toggle\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableColumnCellTreeToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-tree-toggle]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass DataTableColumnDirective {\n  constructor(columnChangesService) {\n    this.columnChangesService = columnChangesService;\n    this.isFirstChange = true;\n  }\n  get cellTemplate() {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n  get headerTemplate() {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n  get treeToggleTemplate() {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\nDataTableColumnDirective.ɵfac = function DataTableColumnDirective_Factory(t) {\n  return new (t || DataTableColumnDirective)(i0.ɵɵdirectiveInject(ColumnChangesService));\n};\nDataTableColumnDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataTableColumnDirective,\n  selectors: [[\"ngx-datatable-column\"]],\n  contentQueries: function DataTableColumnDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DataTableColumnCellDirective, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, DataTableColumnHeaderDirective, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, DataTableColumnCellTreeToggle, 7, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._cellTemplateQuery = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerTemplateQuery = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._treeToggleTemplateQuery = _t.first);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    prop: \"prop\",\n    frozenLeft: \"frozenLeft\",\n    frozenRight: \"frozenRight\",\n    flexGrow: \"flexGrow\",\n    resizeable: \"resizeable\",\n    comparator: \"comparator\",\n    pipe: \"pipe\",\n    sortable: \"sortable\",\n    draggable: \"draggable\",\n    canAutoResize: \"canAutoResize\",\n    minWidth: \"minWidth\",\n    width: \"width\",\n    maxWidth: \"maxWidth\",\n    checkboxable: \"checkboxable\",\n    headerCheckboxable: \"headerCheckboxable\",\n    headerClass: \"headerClass\",\n    cellClass: \"cellClass\",\n    isTreeColumn: \"isTreeColumn\",\n    treeLevelIndent: \"treeLevelIndent\",\n    summaryFunc: \"summaryFunc\",\n    summaryTemplate: \"summaryTemplate\",\n    _cellTemplateInput: [i0.ɵɵInputFlags.None, \"cellTemplate\", \"_cellTemplateInput\"],\n    _headerTemplateInput: [i0.ɵɵInputFlags.None, \"headerTemplate\", \"_headerTemplateInput\"],\n    _treeToggleTemplateInput: [i0.ɵɵInputFlags.None, \"treeToggleTemplate\", \"_treeToggleTemplateInput\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-column'\n    }]\n  }], function () {\n    return [{\n      type: ColumnChangesService\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    prop: [{\n      type: Input\n    }],\n    frozenLeft: [{\n      type: Input\n    }],\n    frozenRight: [{\n      type: Input\n    }],\n    flexGrow: [{\n      type: Input\n    }],\n    resizeable: [{\n      type: Input\n    }],\n    comparator: [{\n      type: Input\n    }],\n    pipe: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input\n    }],\n    canAutoResize: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }],\n    checkboxable: [{\n      type: Input\n    }],\n    headerCheckboxable: [{\n      type: Input\n    }],\n    headerClass: [{\n      type: Input\n    }],\n    cellClass: [{\n      type: Input\n    }],\n    isTreeColumn: [{\n      type: Input\n    }],\n    treeLevelIndent: [{\n      type: Input\n    }],\n    summaryFunc: [{\n      type: Input\n    }],\n    summaryTemplate: [{\n      type: Input\n    }],\n    _cellTemplateInput: [{\n      type: Input,\n      args: ['cellTemplate']\n    }],\n    _cellTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnCellDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _headerTemplateInput: [{\n      type: Input,\n      args: ['headerTemplate']\n    }],\n    _headerTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnHeaderDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _treeToggleTemplateInput: [{\n      type: Input,\n      args: ['treeToggleTemplate']\n    }],\n    _treeToggleTemplateQuery: [{\n      type: ContentChild,\n      args: [DataTableColumnCellTreeToggle, {\n        read: TemplateRef,\n        static: true\n      }]\n    }]\n  });\n})();\nclass DatatableRowDetailTemplateDirective {\n  constructor(template) {\n    this.template = template;\n  }\n}\nDatatableRowDetailTemplateDirective.ɵfac = function DatatableRowDetailTemplateDirective_Factory(t) {\n  return new (t || DatatableRowDetailTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nDatatableRowDetailTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DatatableRowDetailTemplateDirective,\n  selectors: [[\"\", \"ngx-datatable-row-detail-template\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableRowDetailTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-datatable-row-detail-template]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass DatatableRowDetailDirective {\n  constructor() {\n    /**\n     * The detail row height is required especially\n     * when virtual scroll is enabled.\n     */\n    this.rowHeight = 0;\n    /**\n     * Row detail row visbility was toggled.\n     */\n    this.toggle = new EventEmitter();\n  }\n  get template() {\n    return this._templateInput || this._templateQuery;\n  }\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row) {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows() {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows() {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\nDatatableRowDetailDirective.ɵfac = function DatatableRowDetailDirective_Factory(t) {\n  return new (t || DatatableRowDetailDirective)();\n};\nDatatableRowDetailDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DatatableRowDetailDirective,\n  selectors: [[\"ngx-datatable-row-detail\"]],\n  contentQueries: function DatatableRowDetailDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DatatableRowDetailTemplateDirective, 7, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    rowHeight: \"rowHeight\",\n    _templateInput: [i0.ɵɵInputFlags.None, \"template\", \"_templateInput\"]\n  },\n  outputs: {\n    toggle: \"toggle\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableRowDetailDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-row-detail'\n    }]\n  }], null, {\n    rowHeight: [{\n      type: Input\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DatatableRowDetailTemplateDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    toggle: [{\n      type: Output\n    }]\n  });\n})();\nclass DatatableFooterDirective {\n  get template() {\n    return this._templateInput || this._templateQuery;\n  }\n}\nDatatableFooterDirective.ɵfac = function DatatableFooterDirective_Factory(t) {\n  return new (t || DatatableFooterDirective)();\n};\nDatatableFooterDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DatatableFooterDirective,\n  selectors: [[\"ngx-datatable-footer\"]],\n  contentQueries: function DatatableFooterDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DataTableFooterTemplateDirective, 5, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    }\n  },\n  inputs: {\n    footerHeight: \"footerHeight\",\n    totalMessage: \"totalMessage\",\n    selectedMessage: \"selectedMessage\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    _templateInput: [i0.ɵɵInputFlags.None, \"template\", \"_templateInput\"]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableFooterDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-datatable-footer'\n    }]\n  }], null, {\n    footerHeight: [{\n      type: Input\n    }],\n    totalMessage: [{\n      type: Input\n    }],\n    selectedMessage: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    _templateInput: [{\n      type: Input,\n      args: ['template']\n    }],\n    _templateQuery: [{\n      type: ContentChild,\n      args: [DataTableFooterTemplateDirective, {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n\n/**\n * Returns the columns by pin.\n */\nfunction columnsByPin(cols) {\n  const ret = {\n    left: [],\n    center: [],\n    right: []\n  };\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n  return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n */\nfunction columnGroupWidths(groups, all) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n/**\n * Calculates the total width of all columns and their groups\n */\nfunction columnTotalWidth(columns, prop) {\n  let totalWidth = 0;\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n  return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n */\nfunction columnsTotalWidth(columns, prop) {\n  let totalWidth = 0;\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n  return totalWidth;\n}\nfunction columnsByPinArr(val) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n  colsByPinArr.push({\n    type: 'left',\n    columns: colsByPin['left']\n  });\n  colsByPinArr.push({\n    type: 'center',\n    columns: colsByPin['center']\n  });\n  colsByPinArr.push({\n    type: 'right',\n    columns: colsByPin['right']\n  });\n  return colsByPinArr;\n}\n\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nclass RowHeightCache {\n  constructor() {\n    /**\n     * Tree Array stores the cumulative information of the row heights to perform efficient\n     * range queries and updates.  Currently the tree is initialized to the base row\n     * height instead of the detail row height.\n     */\n    this.treeArray = [];\n  }\n  /**\n   * Clear the Tree array.\n   */\n  clearCache() {\n    this.treeArray = [];\n  }\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details) {\n    const {\n      rows,\n      rowHeight,\n      detailRowHeight,\n      externalVirtual,\n      rowCount,\n      rowIndexes,\n      rowExpansions\n    } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n      this.update(i, currentRowHeight);\n    }\n  }\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY) {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex, byRowHeight) {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex) {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n    let sum = 0;\n    atIndex |= 0;\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & atIndex + 1) - 1;\n    }\n    return sum;\n  }\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA, atIndexB) {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  calcRowIndex(sum) {\n    if (!this.treeArray.length) return 0;\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n    return pos + 1;\n  }\n}\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = function () {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match = typeof styles !== 'undefined' ? Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n  return dom ? {\n    dom,\n    lowercase: pre,\n    css: `-${pre}-`,\n    js: pre[0].toUpperCase() + pre.substr(1)\n  } : undefined;\n}();\nfunction getVendorPrefixedName(property) {\n  const name = camelCase(property);\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n  return cache[name];\n}\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\nfunction translateXY(styles, x, y) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\nclass ProgressBarComponent {}\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n  return new (t || ProgressBarComponent)();\n};\nProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressBarComponent,\n  selectors: [[\"datatable-progress\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[\"role\", \"progressbar\", 1, \"progress-linear\"], [1, \"container\"], [1, \"bar\"]],\n  template: function ProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-progress',\n      template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nfunction selectRows(selected, row, comparefn) {\n  const selectedIndex = comparefn(row, selected);\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n  return selected;\n}\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n  const reverse = index < prevIndex;\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n    let range = {\n      start: 0,\n      end: 0\n    };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n    if (reverse && lesser || !reverse && greater) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n  return selected;\n}\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"up\"] = 38] = \"up\";\n  Keys[Keys[\"down\"] = 40] = \"down\";\n  Keys[Keys[\"return\"] = 13] = \"return\";\n  Keys[Keys[\"escape\"] = 27] = \"escape\";\n  Keys[Keys[\"left\"] = 37] = \"left\";\n  Keys[Keys[\"right\"] = 39] = \"right\";\n})(Keys || (Keys = {}));\nclass DataTableSelectionComponent {\n  constructor() {\n    this.activate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n  selectRow(event, index, row) {\n    if (!this.selectEnabled) return;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected = [];\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n    this.prevIndex = index;\n    this.select.emit({\n      selected\n    });\n  }\n  onActivate(model, index) {\n    const {\n      type,\n      event,\n      row\n    } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = !chkbox && (type === 'click' || type === 'dblclick') || chkbox && type === 'checkbox';\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if (event.keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n  onKeyboardFocus(model) {\n    const {\n      keyCode\n    } = model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n  focusRow(rowElement, keyCode) {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n  getPrevNextRow(rowElement, keyCode) {\n    const parentElement = rowElement.parentElement;\n    if (parentElement) {\n      let focusElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n  focusCell(cellElement, rowElement, keyCode, cellIndex) {\n    let nextCellElement;\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n    if (nextCellElement) nextCellElement.focus();\n  }\n  getRowSelected(row) {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n  getRowSelectedIdx(row, selected) {\n    if (!selected || !selected.length) return -1;\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\nDataTableSelectionComponent.ɵfac = function DataTableSelectionComponent_Factory(t) {\n  return new (t || DataTableSelectionComponent)();\n};\nDataTableSelectionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableSelectionComponent,\n  selectors: [[\"datatable-selection\"]],\n  inputs: {\n    rows: \"rows\",\n    selected: \"selected\",\n    selectEnabled: \"selectEnabled\",\n    selectionType: \"selectionType\",\n    rowIdentity: \"rowIdentity\",\n    selectCheck: \"selectCheck\"\n  },\n  outputs: {\n    activate: \"activate\",\n    select: \"select\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function DataTableSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-selection',\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    rows: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectEnabled: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nvar SortDirection;\n(function (SortDirection) {\n  SortDirection[\"asc\"] = \"asc\";\n  SortDirection[\"desc\"] = \"desc\";\n})(SortDirection || (SortDirection = {}));\nclass DataTableBodyCellComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.activate = new EventEmitter();\n    this.treeAction = new EventEmitter();\n    this.isFocused = false;\n    this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n    this.activateFn = this.activate.emit.bind(this.activate);\n    this.cellContext = {\n      onCheckboxChangeFn: this.onCheckboxChangeFn,\n      activateFn: this.activateFn,\n      row: this.row,\n      group: this.group,\n      value: this.value,\n      column: this.column,\n      rowHeight: this.rowHeight,\n      isSelected: this.isSelected,\n      rowIndex: this.rowIndex,\n      treeStatus: this.treeStatus,\n      onTreeAction: this.onTreeAction.bind(this)\n    };\n    this._element = element.nativeElement;\n  }\n  set group(group) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get group() {\n    return this._group;\n  }\n  set rowHeight(val) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get rowHeight() {\n    return this._rowHeight;\n  }\n  set isSelected(val) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n  set expanded(val) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n  get expanded() {\n    return this._expanded;\n  }\n  set rowIndex(val) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get rowIndex() {\n    return this._rowIndex;\n  }\n  set column(column) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get column() {\n    return this._column;\n  }\n  set row(row) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get row() {\n    return this._row;\n  }\n  set sorts(val) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n  get sorts() {\n    return this._sorts;\n  }\n  set treeStatus(status) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n  get treeStatus() {\n    return this._treeStatus;\n  }\n  get columnCssClasses() {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n        if (typeof res === 'string') {\n          cls += ' ' + res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n    return cls;\n  }\n  get width() {\n    return this.column.width;\n  }\n  get minWidth() {\n    return this.column.minWidth;\n  }\n  get maxWidth() {\n    return this.column.maxWidth;\n  }\n  get height() {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n  ngDoCheck() {\n    this.checkValueUpdates();\n  }\n  ngOnDestroy() {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n  checkValueUpdates() {\n    let value = '';\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe = this.column.pipe;\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n  onFocus() {\n    this.isFocused = true;\n  }\n  onBlur() {\n    this.isFocused = false;\n  }\n  onClick(event) {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n  onDblClick(event) {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n  onKeyDown(event) {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n    const isAction = keyCode === Keys.return || keyCode === Keys.down || keyCode === Keys.up || keyCode === Keys.left || keyCode === Keys.right;\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n  onCheckboxChange(event) {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n  calcSortDir(sorts) {\n    if (!sorts) {\n      return;\n    }\n    const sort = sorts.find(s => {\n      return s.prop === this.column.prop;\n    });\n    if (sort) {\n      return sort.dir;\n    }\n  }\n  stripHtml(html) {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n  calcLeftMargin(column, row) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\nDataTableBodyCellComponent.ɵfac = function DataTableBodyCellComponent_Factory(t) {\n  return new (t || DataTableBodyCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDataTableBodyCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableBodyCellComponent,\n  selectors: [[\"datatable-body-cell\"]],\n  viewQuery: function DataTableBodyCellComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n    }\n  },\n  hostVars: 10,\n  hostBindings: function DataTableBodyCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function DataTableBodyCellComponent_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function DataTableBodyCellComponent_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"click\", function DataTableBodyCellComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"dblclick\", function DataTableBodyCellComponent_dblclick_HostBindingHandler($event) {\n        return ctx.onDblClick($event);\n      })(\"keydown\", function DataTableBodyCellComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.columnCssClasses);\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    displayCheck: \"displayCheck\",\n    group: \"group\",\n    rowHeight: \"rowHeight\",\n    isSelected: \"isSelected\",\n    expanded: \"expanded\",\n    rowIndex: \"rowIndex\",\n    column: \"column\",\n    row: \"row\",\n    sorts: \"sorts\",\n    treeStatus: \"treeStatus\"\n  },\n  outputs: {\n    activate: \"activate\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 6,\n  consts: [[\"cellTemplate\", \"\"], [1, \"datatable-body-cell-label\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"title\", \"innerHTML\", 4, \"ngIf\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"click\", \"checked\"], [\"class\", \"datatable-tree-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"datatable-tree-button\", 3, \"click\", \"disabled\"], [\"class\", \"icon datatable-icon-collapse\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-up\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-down\", 4, \"ngIf\"], [1, \"icon\", \"datatable-icon-collapse\"], [1, \"icon\", \"datatable-icon-up\"], [1, \"icon\", \"datatable-icon-down\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"title\", \"innerHTML\"]],\n  template: function DataTableBodyCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 1);\n      i0.ɵɵtemplate(1, DataTableBodyCellComponent_label_1_Template, 2, 1, \"label\", 2)(2, DataTableBodyCellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 3)(3, DataTableBodyCellComponent_span_3_Template, 1, 2, \"span\", 4)(4, DataTableBodyCellComponent_4_Template, 2, 2, null, 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"margin-left\", ctx.calcLeftMargin(ctx.column, ctx.row), \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.column.checkboxable && (!ctx.displayCheck || ctx.displayCheck(ctx.row, ctx.column, ctx.value)));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.column.isTreeColumn);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.column.cellTemplate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.column.cellTemplate);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableBodyCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body-cell',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    displayCheck: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    treeStatus: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    cellTemplate: [{\n      type: ViewChild,\n      args: ['cellTemplate', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    columnCssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.minWidth.px']\n    }],\n    maxWidth: [{\n      type: HostBinding,\n      args: ['style.maxWidth.px']\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onDblClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass DataTableBodyRowComponent {\n  constructor(differs, scrollbarHelper, cd, element) {\n    this.differs = differs;\n    this.scrollbarHelper = scrollbarHelper;\n    this.cd = cd;\n    this.treeStatus = 'collapsed';\n    this.activate = new EventEmitter();\n    this.treeAction = new EventEmitter();\n    this._groupStyles = {\n      left: {},\n      center: {},\n      right: {}\n    };\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n  set columns(val) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n  get columns() {\n    return this._columns;\n  }\n  set innerWidth(val) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n  get innerWidth() {\n    return this._innerWidth;\n  }\n  set offsetX(val) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n    return cls;\n  }\n  get columnsTotalWidths() {\n    return this._columnGroupWidths.total;\n  }\n  ngDoCheck() {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n  trackByGroups(index, colGroup) {\n    return colGroup.type;\n  }\n  columnTrackingFn(index, column) {\n    return column.$$id;\n  }\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n  calcStylesByGroup(group) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n    const styles = {\n      width: `${widths[group]}px`\n    };\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n    return styles;\n  }\n  onActivate(event, index) {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n  onKeyDown(event) {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n    const isAction = keyCode === Keys.return || keyCode === Keys.down || keyCode === Keys.up || keyCode === Keys.left || keyCode === Keys.right;\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n  onMouseenter(event) {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n  recalculateColumns(val = this.columns) {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\nDataTableBodyRowComponent.ɵfac = function DataTableBodyRowComponent_Factory(t) {\n  return new (t || DataTableBodyRowComponent)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(ScrollbarHelper, 4), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDataTableBodyRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableBodyRowComponent,\n  selectors: [[\"datatable-body-row\"]],\n  hostVars: 6,\n  hostBindings: function DataTableBodyRowComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function DataTableBodyRowComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"mouseenter\", function DataTableBodyRowComponent_mouseenter_HostBindingHandler($event) {\n        return ctx.onMouseenter($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClass);\n      i0.ɵɵstyleProp(\"height\", ctx.rowHeight, \"px\")(\"width\", ctx.columnsTotalWidths, \"px\");\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    innerWidth: \"innerWidth\",\n    expanded: \"expanded\",\n    rowClass: \"rowClass\",\n    row: \"row\",\n    group: \"group\",\n    isSelected: \"isSelected\",\n    rowIndex: \"rowIndex\",\n    displayCheck: \"displayCheck\",\n    treeStatus: \"treeStatus\",\n    offsetX: \"offsetX\",\n    rowHeight: \"rowHeight\"\n  },\n  outputs: {\n    activate: \"activate\",\n    treeAction: \"treeAction\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"role\", \"cell\", \"tabindex\", \"-1\", 3, \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\", \"activate\", \"treeAction\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"cell\", \"tabindex\", \"-1\", 3, \"activate\", \"treeAction\", \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\"]],\n  template: function DataTableBodyRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DataTableBodyRowComponent_div_0_Template, 2, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    }\n  },\n  dependencies: [DataTableBodyCellComponent, i1.NgForOf, i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableBodyRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body-row',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.KeyValueDiffers\n    }, {\n      type: ScrollbarHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: Input\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    treeStatus: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    rowHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }],\n    columnsTotalWidths: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    activate: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    onMouseenter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }]\n  });\n})();\nfunction defaultSumFunc(cells) {\n  const cellsWithValues = cells.filter(cell => !!cell);\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\nfunction noopSumFunc(cells) {\n  return null;\n}\nclass DataTableSummaryRowComponent {\n  constructor() {\n    this.summaryRow = {};\n  }\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n  updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n  updateValues() {\n    this.summaryRow = {};\n    this.columns.filter(col => !col.summaryTemplate).forEach(col => {\n      const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n      const sumFunc = this.getSummaryFunction(col);\n      this.summaryRow[col.prop] = col.pipe ? col.pipe.transform(sumFunc(cellsFromSingleColumn)) : sumFunc(cellsFromSingleColumn);\n    });\n  }\n  getSummaryFunction(column) {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\nDataTableSummaryRowComponent.ɵfac = function DataTableSummaryRowComponent_Factory(t) {\n  return new (t || DataTableSummaryRowComponent)();\n};\nDataTableSummaryRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableSummaryRowComponent,\n  selectors: [[\"datatable-summary-row\"]],\n  hostAttrs: [1, \"datatable-summary-row\"],\n  inputs: {\n    rows: \"rows\",\n    columns: \"columns\",\n    rowHeight: \"rowHeight\",\n    offsetX: \"offsetX\",\n    innerWidth: \"innerWidth\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\"]],\n  template: function DataTableSummaryRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DataTableSummaryRowComponent_datatable_body_row_0_Template, 1, 6, \"datatable-body-row\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryRow && ctx._internalColumns);\n    }\n  },\n  dependencies: [DataTableBodyRowComponent, i1.NgIf],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableSummaryRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-summary-row',\n      template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n      host: {\n        class: 'datatable-summary-row'\n      }\n    }]\n  }], null, {\n    rows: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }]\n  });\n})();\nclass DataTableRowWrapperComponent {\n  constructor(cd, differs) {\n    this.cd = cd;\n    this.differs = differs;\n    this.rowContextmenu = new EventEmitter(false);\n    this._expanded = false;\n    this.groupContext = {\n      group: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n    this.rowContext = {\n      row: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n    this.rowDiffer = differs.find({}).create();\n  }\n  set rowIndex(val) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n  get rowIndex() {\n    return this._rowIndex;\n  }\n  set expanded(val) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n  get expanded() {\n    return this._expanded;\n  }\n  ngDoCheck() {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n  onContextmenu($event) {\n    this.rowContextmenu.emit({\n      event: $event,\n      row: this.row\n    });\n  }\n  getGroupHeaderStyle() {\n    const styles = {};\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n    return styles;\n  }\n}\nDataTableRowWrapperComponent.ɵfac = function DataTableRowWrapperComponent_Factory(t) {\n  return new (t || DataTableRowWrapperComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers));\n};\nDataTableRowWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableRowWrapperComponent,\n  selectors: [[\"datatable-row-wrapper\"]],\n  hostAttrs: [1, \"datatable-row-wrapper\"],\n  hostBindings: function DataTableRowWrapperComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function DataTableRowWrapperComponent_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextmenu($event);\n      });\n    }\n  },\n  inputs: {\n    innerWidth: \"innerWidth\",\n    rowDetail: \"rowDetail\",\n    groupHeader: \"groupHeader\",\n    offsetX: \"offsetX\",\n    detailRowHeight: \"detailRowHeight\",\n    row: \"row\",\n    groupedRows: \"groupedRows\",\n    rowIndex: \"rowIndex\",\n    expanded: \"expanded\"\n  },\n  outputs: {\n    rowContextmenu: \"rowContextmenu\"\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 3,\n  consts: [[\"class\", \"datatable-group-header\", 3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"datatable-row-detail\", 3, \"height\", 4, \"ngIf\"], [1, \"datatable-group-header\", 3, \"ngStyle\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-row-detail\"]],\n  template: function DataTableRowWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_Template, 2, 2, \"div\", 0)(1, DataTableRowWrapperComponent_ng_content_1_Template, 1, 0, \"ng-content\", 1)(2, DataTableRowWrapperComponent_div_2_Template, 2, 3, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template && ctx.expanded || !ctx.groupHeader || !ctx.groupHeader.template);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.rowDetail && ctx.rowDetail.template && ctx.expanded);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgStyle, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableRowWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-row-wrapper',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n      host: {\n        class: 'datatable-row-wrapper'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.KeyValueDiffers\n    }];\n  }, {\n    innerWidth: [{\n      type: Input\n    }],\n    rowDetail: [{\n      type: Input\n    }],\n    groupHeader: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }],\n    rowContextmenu: [{\n      type: Output\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    onContextmenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\nclass DataTableBodyComponent {\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(cd) {\n    this.cd = cd;\n    this.selected = [];\n    this.scroll = new EventEmitter();\n    this.page = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.select = new EventEmitter();\n    this.detailToggle = new EventEmitter();\n    this.rowContextmenu = new EventEmitter(false);\n    this.treeAction = new EventEmitter();\n    this.rowHeightsCache = new RowHeightCache();\n    this.temp = [];\n    this.offsetY = 0;\n    this.indexes = {};\n    this.rowIndexes = new WeakMap();\n    this.rowExpansions = [];\n    /**\n     * Get the height of the detail row.\n     */\n    this.getDetailRowHeight = (row, index) => {\n      if (!this.rowDetail) {\n        return 0;\n      }\n      const rowHeight = this.rowDetail.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight(row, index) : rowHeight;\n    };\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index, row) => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n  set pageSize(val) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n  get pageSize() {\n    return this._pageSize;\n  }\n  set rows(val) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n  get rows() {\n    return this._rows;\n  }\n  set columns(val) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n  get columns() {\n    return this._columns;\n  }\n  set offset(val) {\n    this._offset = val;\n    if (!this.scrollbarV || this.scrollbarV && !this.virtualization) this.recalcLayout();\n  }\n  get offset() {\n    return this._offset;\n  }\n  set rowCount(val) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n  get rowCount() {\n    return this._rowCount;\n  }\n  get bodyWidth() {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n    this.recalcLayout();\n  }\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled() {\n    return !!this.selectionType;\n  }\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight() {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit() {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({\n        type,\n        value\n      }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({\n        type,\n        value\n      }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy() {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset) {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n    this.scroller.setOffset(offset || 0);\n  }\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event) {\n    const scrollYPos = event.scrollYPos;\n    const scrollXPos = event.scrollXPos;\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction) {\n    let offset = this.indexes.first / this.pageSize;\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({\n        offset\n      });\n    }\n  }\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows() {\n    const {\n      first,\n      last\n    } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp = [];\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g, i) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n        idx++;\n        rowIndex++;\n      }\n    }\n    this.temp = temp;\n  }\n  /**\n   * Get the row height\n   */\n  getRowHeight(row) {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n    return this.rowHeight;\n  }\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group) {\n    let rowHeight = 0;\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n    return rowHeight;\n  }\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row) {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n    return rowHeight;\n  }\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows) {\n    const styles = {};\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n      translateXY(styles, 0, pos);\n    }\n    return styles;\n  }\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles() {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n    const styles = {\n      position: 'absolute'\n    };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n    translateXY(styles, 0, pos);\n    return styles;\n  }\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator() {\n    setTimeout(() => this.loadingIndicator = false, 500);\n  }\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes() {\n    let first = 0;\n    let last = 0;\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n    this.indexes = {\n      first,\n      last\n    };\n  }\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache() {\n    if (!this.scrollbarV || this.scrollbarV && !this.virtualization) {\n      return;\n    }\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex() {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n    return viewPortFirstRowIndex;\n  }\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row) {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded) {\n    // clear prev expansions\n    this.rowExpansions = [];\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n  /**\n   * Recalculates the table\n   */\n  recalcLayout() {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index, column) {\n    return column.$$id;\n  }\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n    const styles = {\n      width: `${widths[group]}px`\n    };\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n    return styles;\n  }\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row) {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n  getRowExpandedIdx(row, expanded) {\n    if (!expanded || !expanded.length) return -1;\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row) {\n    return this.rowIndexes.get(row) || 0;\n  }\n  onTreeAction(row) {\n    this.treeAction.emit({\n      row\n    });\n  }\n}\nDataTableBodyComponent.ɵfac = function DataTableBodyComponent_Factory(t) {\n  return new (t || DataTableBodyComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDataTableBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableBodyComponent,\n  selectors: [[\"datatable-body\"]],\n  viewQuery: function DataTableBodyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(ScrollerComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    }\n  },\n  hostAttrs: [1, \"datatable-body\"],\n  hostVars: 4,\n  hostBindings: function DataTableBodyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.bodyWidth)(\"height\", ctx.bodyHeight);\n    }\n  },\n  inputs: {\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    loadingIndicator: \"loadingIndicator\",\n    externalPaging: \"externalPaging\",\n    rowHeight: \"rowHeight\",\n    offsetX: \"offsetX\",\n    emptyMessage: \"emptyMessage\",\n    selectionType: \"selectionType\",\n    selected: \"selected\",\n    rowIdentity: \"rowIdentity\",\n    rowDetail: \"rowDetail\",\n    groupHeader: \"groupHeader\",\n    selectCheck: \"selectCheck\",\n    displayCheck: \"displayCheck\",\n    trackByProp: \"trackByProp\",\n    rowClass: \"rowClass\",\n    groupedRows: \"groupedRows\",\n    groupExpansionDefault: \"groupExpansionDefault\",\n    innerWidth: \"innerWidth\",\n    groupRowsBy: \"groupRowsBy\",\n    virtualization: \"virtualization\",\n    summaryRow: \"summaryRow\",\n    summaryPosition: \"summaryPosition\",\n    summaryHeight: \"summaryHeight\",\n    pageSize: \"pageSize\",\n    rows: \"rows\",\n    columns: \"columns\",\n    offset: \"offset\",\n    rowCount: \"rowCount\",\n    bodyHeight: \"bodyHeight\"\n  },\n  outputs: {\n    scroll: \"scroll\",\n    page: \"page\",\n    activate: \"activate\",\n    select: \"select\",\n    detailToggle: \"detailToggle\",\n    rowContextmenu: \"rowContextmenu\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 9,\n  consts: [[\"selector\", \"\"], [\"groupedRowsTemplate\", \"\"], [4, \"ngIf\"], [3, \"select\", \"activate\", \"selected\", \"rows\", \"selectCheck\", \"selectEnabled\", \"selectionType\", \"rowIdentity\"], [3, \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\", \"scroll\", 4, \"ngIf\"], [\"class\", \"empty-row\", 3, \"innerHTML\", 4, \"ngIf\"], [3, \"scroll\", \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\", \"rowContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"row\", 3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [3, \"rowContextmenu\", \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\"], [\"role\", \"row\", \"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\", \"treeAction\", \"activate\", 4, \"ngIf\", \"ngIfElse\"], [\"role\", \"row\", \"tabindex\", \"-1\", 3, \"treeAction\", \"activate\", \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\"], [\"role\", \"row\", \"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\", \"activate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"row\", \"tabindex\", \"-1\", 3, \"activate\", \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\"], [\"role\", \"row\", 3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [1, \"empty-row\", 3, \"innerHTML\"]],\n  template: function DataTableBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, DataTableBodyComponent_datatable_progress_0_Template, 1, 0, \"datatable-progress\", 2);\n      i0.ɵɵelementStart(1, \"datatable-selection\", 3, 0);\n      i0.ɵɵlistener(\"select\", function DataTableBodyComponent_Template_datatable_selection_select_1_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.select.emit($event));\n      })(\"activate\", function DataTableBodyComponent_Template_datatable_selection_activate_1_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.activate.emit($event));\n      });\n      i0.ɵɵtemplate(3, DataTableBodyComponent_datatable_scroller_3_Template, 4, 8, \"datatable-scroller\", 4)(4, DataTableBodyComponent_div_4_Template, 1, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loadingIndicator);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"selected\", ctx.selected)(\"rows\", ctx.rows)(\"selectCheck\", ctx.selectCheck)(\"selectEnabled\", ctx.selectEnabled)(\"selectionType\", ctx.selectionType)(\"rowIdentity\", ctx.rowIdentity);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.rows == null ? null : ctx.rows.length);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !(ctx.rows == null ? null : ctx.rows.length) && !ctx.loadingIndicator);\n    }\n  },\n  dependencies: [ProgressBarComponent, DataTableSelectionComponent, ScrollerComponent, DataTableSummaryRowComponent, DataTableRowWrapperComponent, DataTableBodyRowComponent, i1.NgIf, i1.NgForOf, i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-body',\n      template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'datatable-body'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    loadingIndicator: [{\n      type: Input\n    }],\n    externalPaging: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    rowDetail: [{\n      type: Input\n    }],\n    groupHeader: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    trackByProp: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }],\n    groupExpansionDefault: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: Input\n    }],\n    summaryRow: [{\n      type: Input\n    }],\n    summaryPosition: [{\n      type: Input\n    }],\n    summaryHeight: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    rowCount: [{\n      type: Input\n    }],\n    bodyWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    bodyHeight: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    scroll: [{\n      type: Output\n    }],\n    page: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    detailToggle: [{\n      type: Output\n    }],\n    rowContextmenu: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: [ScrollerComponent]\n    }]\n  });\n})();\n\n/**\n * Gets the next sort direction\n */\nfunction nextSortDir(sortType, current) {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nfunction orderByComparator(a, b) {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n  // equal each other\n  return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nfunction sortRows(rows, columns, dirs) {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n  return temp.sort(function (rowA, rowB) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const {\n        prop,\n        valueGetter\n      } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison = cachedDir.dir !== SortDirection.desc ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir) : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\nclass DataTableHeaderCellComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.sort = new EventEmitter();\n    this.select = new EventEmitter();\n    this.columnContextmenu = new EventEmitter(false);\n    this.sortFn = this.onSort.bind(this);\n    this.selectFn = this.select.emit.bind(this.select);\n    this.cellContext = {\n      column: this.column,\n      sortDir: this.sortDir,\n      sortFn: this.sortFn,\n      allRowsSelected: this.allRowsSelected,\n      selectFn: this.selectFn\n    };\n  }\n  set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n  set column(column) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n  get column() {\n    return this._column;\n  }\n  set sorts(val) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n  get sorts() {\n    return this._sorts;\n  }\n  get columnCssClasses() {\n    let cls = 'datatable-header-cell';\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n    return cls;\n  }\n  get name() {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n  get minWidth() {\n    return this.column.minWidth;\n  }\n  get maxWidth() {\n    return this.column.maxWidth;\n  }\n  get width() {\n    return this.column.width;\n  }\n  get isCheckboxable() {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n  onContextmenu($event) {\n    this.columnContextmenu.emit({\n      event: $event,\n      column: this.column\n    });\n  }\n  ngOnInit() {\n    this.sortClass = this.calcSortClass(this.sortDir);\n  }\n  calcSortDir(sorts) {\n    if (sorts && this.column) {\n      const sort = sorts.find(s => {\n        return s.prop === this.column.prop;\n      });\n      if (sort) return sort.dir;\n    }\n  }\n  onSort() {\n    if (!this.column.sortable) return;\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n  calcSortClass(sortDir) {\n    if (!this.cellContext.column.sortable) return;\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn ${this.sortUnsetIcon}`;\n    }\n  }\n}\nDataTableHeaderCellComponent.ɵfac = function DataTableHeaderCellComponent_Factory(t) {\n  return new (t || DataTableHeaderCellComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDataTableHeaderCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableHeaderCellComponent,\n  selectors: [[\"datatable-header-cell\"]],\n  hostAttrs: [1, \"datatable-header-cell\"],\n  hostVars: 11,\n  hostBindings: function DataTableHeaderCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function DataTableHeaderCellComponent_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextmenu($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.name);\n      i0.ɵɵclassMap(ctx.columnCssClasses);\n      i0.ɵɵstyleProp(\"height\", ctx.headerHeight, \"px\")(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"width\", ctx.width, \"px\");\n    }\n  },\n  inputs: {\n    sortType: \"sortType\",\n    sortAscendingIcon: \"sortAscendingIcon\",\n    sortDescendingIcon: \"sortDescendingIcon\",\n    sortUnsetIcon: \"sortUnsetIcon\",\n    isTarget: \"isTarget\",\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    targetMarkerContext: \"targetMarkerContext\",\n    allRowsSelected: \"allRowsSelected\",\n    selectionType: \"selectionType\",\n    column: \"column\",\n    headerHeight: \"headerHeight\",\n    sorts: \"sorts\"\n  },\n  outputs: {\n    sort: \"sort\",\n    select: \"select\",\n    columnContextmenu: \"columnContextmenu\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[1, \"datatable-header-cell-template-wrap\"], [4, \"ngIf\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [\"class\", \"datatable-header-cell-wrapper\", 4, \"ngIf\"], [3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"change\", \"checked\"], [1, \"datatable-header-cell-wrapper\"], [1, \"datatable-header-cell-label\", \"draggable\", 3, \"click\", \"innerHTML\"]],\n  template: function DataTableHeaderCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, DataTableHeaderCellComponent_1_Template, 1, 2, null, 1)(2, DataTableHeaderCellComponent_label_2_Template, 2, 1, \"label\", 2)(3, DataTableHeaderCellComponent_span_3_Template, 2, 1, \"span\", 3)(4, DataTableHeaderCellComponent_4_Template, 1, 2, null, 1);\n      i0.ɵɵelementStart(5, \"span\", 4);\n      i0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_Template_span_click_5_listener() {\n        return ctx.onSort();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isTarget);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isCheckboxable);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.column.headerTemplate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.column.headerTemplate);\n      i0.ɵɵadvance();\n      i0.ɵɵclassMap(ctx.sortClass);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableHeaderCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-header-cell',\n      template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n      host: {\n        class: 'datatable-header-cell'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    sortType: [{\n      type: Input\n    }],\n    sortAscendingIcon: [{\n      type: Input\n    }],\n    sortDescendingIcon: [{\n      type: Input\n    }],\n    sortUnsetIcon: [{\n      type: Input\n    }],\n    isTarget: [{\n      type: Input\n    }],\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    targetMarkerContext: [{\n      type: Input\n    }],\n    allRowsSelected: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    columnContextmenu: [{\n      type: Output\n    }],\n    columnCssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    name: [{\n      type: HostBinding,\n      args: ['attr.title']\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.minWidth.px']\n    }],\n    maxWidth: [{\n      type: HostBinding,\n      args: ['style.maxWidth.px']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    onContextmenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\nclass DataTableHeaderComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.sort = new EventEmitter();\n    this.reorder = new EventEmitter();\n    this.resize = new EventEmitter();\n    this.select = new EventEmitter();\n    this.columnContextmenu = new EventEmitter(false);\n    this._columnGroupWidths = {\n      total: 100\n    };\n    this._styleByGroup = {\n      left: {},\n      center: {},\n      right: {}\n    };\n    this.destroyed = false;\n  }\n  set innerWidth(val) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n  get innerWidth() {\n    return this._innerWidth;\n  }\n  set headerHeight(val) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n  get headerHeight() {\n    return this._headerHeight;\n  }\n  set columns(val) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n  get columns() {\n    return this._columns;\n  }\n  set offsetX(val) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n  onLongPressStart({\n    event,\n    model\n  }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n  onLongPressEnd({\n    event,\n    model\n  }) {\n    this.dragEventTarget = event;\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n  get headerWidth() {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n    return '100%';\n  }\n  trackByGroups(index, colGroup) {\n    return colGroup.type;\n  }\n  columnTrackingFn(index, column) {\n    return column.$$id;\n  }\n  onColumnResized(width, column) {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n  onColumnReordered({\n    prevIndex,\n    newIndex,\n    model\n  }) {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n  onTargetChanged({\n    prevIndex,\n    newIndex,\n    initialIndex\n  }) {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n  getColumn(index) {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n  onSort({\n    column,\n    prevValue,\n    newValue\n  }) {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n  calcNewSorts(column, prevValue, newValue) {\n    let idx = 0;\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n    const sorts = this.sorts.map((s, i) => {\n      s = {\n        ...s\n      };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n      sorts.push({\n        dir: newValue,\n        prop: column.prop\n      });\n    }\n    return sorts;\n  }\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n  calcStylesByGroup(group) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n    const styles = {\n      width: `${widths[group]}px`\n    };\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n    return styles;\n  }\n}\nDataTableHeaderComponent.ɵfac = function DataTableHeaderComponent_Factory(t) {\n  return new (t || DataTableHeaderComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDataTableHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableHeaderComponent,\n  selectors: [[\"datatable-header\"]],\n  hostAttrs: [1, \"datatable-header\"],\n  hostVars: 4,\n  hostBindings: function DataTableHeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.headerHeight)(\"width\", ctx.headerWidth);\n    }\n  },\n  inputs: {\n    sortAscendingIcon: \"sortAscendingIcon\",\n    sortDescendingIcon: \"sortDescendingIcon\",\n    sortUnsetIcon: \"sortUnsetIcon\",\n    scrollbarH: \"scrollbarH\",\n    dealsWithGroup: \"dealsWithGroup\",\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    innerWidth: \"innerWidth\",\n    sorts: \"sorts\",\n    sortType: \"sortType\",\n    allRowsSelected: \"allRowsSelected\",\n    selectionType: \"selectionType\",\n    reorderable: \"reorderable\",\n    headerHeight: \"headerHeight\",\n    columns: \"columns\",\n    offsetX: \"offsetX\"\n  },\n  outputs: {\n    sort: \"sort\",\n    reorder: \"reorder\",\n    resize: \"resize\",\n    select: \"select\",\n    columnContextmenu: \"columnContextmenu\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[\"role\", \"row\", \"orderable\", \"\", 1, \"datatable-header-inner\", 3, \"reorder\", \"targetChanged\"], [3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"role\", \"columnheader\", \"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"columnheader\", \"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\", \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\"]],\n  template: function DataTableHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"reorder\", function DataTableHeaderComponent_Template_div_reorder_0_listener($event) {\n        return ctx.onColumnReordered($event);\n      })(\"targetChanged\", function DataTableHeaderComponent_Template_div_targetChanged_0_listener($event) {\n        return ctx.onTargetChanged($event);\n      });\n      i0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_Template, 2, 5, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx._columnGroupWidths.total, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    }\n  },\n  dependencies: [DataTableHeaderCellComponent, OrderableDirective, i1.NgForOf, i1.NgStyle, ResizeableDirective, LongPressDirective, DraggableDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-header',\n      template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n      host: {\n        class: 'datatable-header'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    sortAscendingIcon: [{\n      type: Input\n    }],\n    sortDescendingIcon: [{\n      type: Input\n    }],\n    sortUnsetIcon: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    dealsWithGroup: [{\n      type: Input\n    }],\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    innerWidth: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    sortType: [{\n      type: Input\n    }],\n    allRowsSelected: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: HostBinding,\n      args: ['style.height']\n    }, {\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    offsetX: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    reorder: [{\n      type: Output\n    }],\n    resize: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    columnContextmenu: [{\n      type: Output\n    }],\n    headerWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }]\n  });\n})();\n\n/**\n * Throttle a function\n */\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\n\n/**\n * Calculates the Total Flex Grow\n */\nfunction getTotalFlexGrow(columns) {\n  let totalFlexGrow = 0;\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n  return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth = 300) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed = [];\n  const remainingWidthLimit = 1; // when to stop\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n      column.width = Math.max(0, column.width);\n    }\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns, defaultColWidth = 300) {\n  let contentWidth = 0;\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n  return contentWidth;\n}\nclass DataTablePagerComponent {\n  constructor() {\n    this.change = new EventEmitter();\n    this._count = 0;\n    this._page = 1;\n    this._size = 0;\n  }\n  set size(val) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n  get size() {\n    return this._size;\n  }\n  set count(val) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n  get count() {\n    return this._count;\n  }\n  set page(val) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n  get page() {\n    return this._page;\n  }\n  get totalPages() {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n  canPrevious() {\n    return this.page > 1;\n  }\n  canNext() {\n    return this.page < this.totalPages;\n  }\n  prevPage() {\n    this.selectPage(this.page - 1);\n  }\n  nextPage() {\n    this.selectPage(this.page + 1);\n  }\n  selectPage(page) {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n      this.change.emit({\n        page\n      });\n    }\n  }\n  calcPages(page) {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n    page = page || this.page;\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: num\n      });\n    }\n    return pages;\n  }\n}\nDataTablePagerComponent.ɵfac = function DataTablePagerComponent_Factory(t) {\n  return new (t || DataTablePagerComponent)();\n};\nDataTablePagerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTablePagerComponent,\n  selectors: [[\"datatable-pager\"]],\n  hostAttrs: [1, \"datatable-pager\"],\n  inputs: {\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    size: \"size\",\n    count: \"count\",\n    page: \"page\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  decls: 14,\n  vars: 21,\n  consts: [[1, \"pager\"], [\"role\", \"button\", \"aria-label\", \"go to first page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to previous page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"class\", \"pages\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"aria-label\", \"go to next page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to last page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", 1, \"pages\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n  template: function DataTablePagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\")(2, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_2_listener() {\n        return ctx.selectPage(1);\n      });\n      i0.ɵɵelement(3, \"i\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"li\")(5, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_5_listener() {\n        return ctx.prevPage();\n      });\n      i0.ɵɵelement(6, \"i\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, DataTablePagerComponent_li_7_Template, 3, 4, \"li\", 3);\n      i0.ɵɵelementStart(8, \"li\")(9, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_9_listener() {\n        return ctx.nextPage();\n      });\n      i0.ɵɵelement(10, \"i\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\")(12, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_12_listener() {\n        return ctx.selectPage(ctx.totalPages);\n      });\n      i0.ɵɵelement(13, \"i\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.pagerPreviousIcon);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.pagerLeftArrowIcon);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.pagerRightArrowIcon);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.pagerNextIcon);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTablePagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-pager',\n      template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n      host: {\n        class: 'datatable-pager'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }]\n  });\n})();\nclass DataTableFooterComponent {\n  constructor() {\n    this.selectedCount = 0;\n    this.page = new EventEmitter();\n  }\n  get isVisible() {\n    return this.rowCount / this.pageSize > 1;\n  }\n  get curPage() {\n    return this.offset + 1;\n  }\n}\nDataTableFooterComponent.ɵfac = function DataTableFooterComponent_Factory(t) {\n  return new (t || DataTableFooterComponent)();\n};\nDataTableFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DataTableFooterComponent,\n  selectors: [[\"datatable-footer\"]],\n  hostAttrs: [1, \"datatable-footer\"],\n  inputs: {\n    footerHeight: \"footerHeight\",\n    rowCount: \"rowCount\",\n    pageSize: \"pageSize\",\n    offset: \"offset\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    totalMessage: \"totalMessage\",\n    footerTemplate: \"footerTemplate\",\n    selectedCount: \"selectedCount\",\n    selectedMessage: \"selectedMessage\"\n  },\n  outputs: {\n    page: \"page\"\n  },\n  decls: 4,\n  vars: 8,\n  consts: [[1, \"datatable-footer-inner\", 3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"page-count\", 4, \"ngIf\"], [3, \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\", \"change\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"page-count\"], [3, \"change\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\"]],\n  template: function DataTableFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, DataTableFooterComponent_1_Template, 1, 8, null, 1)(2, DataTableFooterComponent_div_2_Template, 3, 3, \"div\", 2)(3, DataTableFooterComponent_datatable_pager_3_Template, 1, 8, \"datatable-pager\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.footerHeight, \"px\");\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, ctx.selectedMessage));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n    }\n  },\n  dependencies: [DataTablePagerComponent, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'datatable-footer',\n      template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n      host: {\n        class: 'datatable-footer'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    footerHeight: [{\n      type: Input\n    }],\n    rowCount: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    totalMessage: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    selectedCount: [{\n      type: Input\n    }],\n    selectedMessage: [{\n      type: Input\n    }],\n    page: [{\n      type: Output\n    }]\n  });\n})();\nclass DatatableComponent {\n  constructor(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n    this.scrollbarHelper = scrollbarHelper;\n    this.dimensionsHelper = dimensionsHelper;\n    this.cd = cd;\n    this.columnChangesService = columnChangesService;\n    this.configuration = configuration;\n    /**\n     * List of row objects that should be\n     * represented as selected in the grid.\n     * Default value: `[]`\n     */\n    this.selected = [];\n    /**\n     * Enable vertical scrollbars\n     */\n    this.scrollbarV = false;\n    /**\n     * Enable horz scrollbars\n     */\n    this.scrollbarH = false;\n    /**\n     * The row height; which is necessary\n     * to calculate the height for the lazy rendering.\n     */\n    this.rowHeight = 30;\n    /**\n     * Type of column width distribution formula.\n     * Example: flex, force, standard\n     */\n    this.columnMode = ColumnMode.standard;\n    /**\n     * The minimum header height in pixels.\n     * Pass a falsey for no header\n     */\n    this.headerHeight = 30;\n    /**\n     * The minimum footer height in pixels.\n     * Pass falsey for no footer\n     */\n    this.footerHeight = 0;\n    /**\n     * If the table should use external paging\n     * otherwise its assumed that all data is preloaded.\n     */\n    this.externalPaging = false;\n    /**\n     * If the table should use external sorting or\n     * the built-in basic sorting.\n     */\n    this.externalSorting = false;\n    /**\n     * Show the linear loading bar.\n     * Default value: `false`\n     */\n    this.loadingIndicator = false;\n    /**\n     * Enable/Disable ability to re-order columns\n     * by dragging them.\n     */\n    this.reorderable = true;\n    /**\n     * Swap columns on re-order columns or\n     * move them.\n     */\n    this.swapColumns = true;\n    /**\n     * The type of sorting\n     */\n    this.sortType = SortType.single;\n    /**\n     * Array of sorted columns by property and type.\n     * Default value: `[]`\n     */\n    this.sorts = [];\n    /**\n     * Css class overrides\n     */\n    this.cssClasses = {\n      sortAscending: 'datatable-icon-up',\n      sortDescending: 'datatable-icon-down',\n      sortUnset: 'datatable-icon-sort-unset',\n      pagerLeftArrow: 'datatable-icon-left',\n      pagerRightArrow: 'datatable-icon-right',\n      pagerPrevious: 'datatable-icon-prev',\n      pagerNext: 'datatable-icon-skip'\n    };\n    /**\n     * Message overrides for localization\n     *\n     * emptyMessage     [default] = 'No data to display'\n     * totalMessage     [default] = 'total'\n     * selectedMessage  [default] = 'selected'\n     */\n    this.messages = {\n      // Message to show when array is presented\n      // but contains no values\n      emptyMessage: 'No data to display',\n      // Footer total message\n      totalMessage: 'total',\n      // Footer selected message\n      selectedMessage: 'selected'\n    };\n    /**\n     * A boolean you can use to set the detault behaviour of rows and groups\n     * whether they will start expanded or not. If ommited the default is NOT expanded.\n     *\n     */\n    this.groupExpansionDefault = false;\n    /**\n     * Property to which you can use for determining select all\n     * rows on current page or not.\n     *\n     * @memberOf DatatableComponent\n     */\n    this.selectAllRowsOnPage = false;\n    /**\n     * A flag for row virtualization on / off\n     */\n    this.virtualization = true;\n    /**\n     * A flag for switching summary row on / off\n     */\n    this.summaryRow = false;\n    /**\n     * A height of summary row\n     */\n    this.summaryHeight = 30;\n    /**\n     * A property holds a summary row position: top/bottom\n     */\n    this.summaryPosition = 'top';\n    /**\n     * Body was scrolled typically in a `scrollbarV:true` scenario.\n     */\n    this.scroll = new EventEmitter();\n    /**\n     * A cell or row was focused via keyboard or mouse click.\n     */\n    this.activate = new EventEmitter();\n    /**\n     * A cell or row was selected.\n     */\n    this.select = new EventEmitter();\n    /**\n     * Column sort was invoked.\n     */\n    this.sort = new EventEmitter();\n    /**\n     * The table was paged either triggered by the pager or the body scroll.\n     */\n    this.page = new EventEmitter();\n    /**\n     * Columns were re-ordered.\n     */\n    this.reorder = new EventEmitter();\n    /**\n     * Column was resized.\n     */\n    this.resize = new EventEmitter();\n    /**\n     * The context menu was invoked on the table.\n     * type indicates whether the header or the body was clicked.\n     * content contains either the column or the row that was clicked.\n     */\n    this.tableContextmenu = new EventEmitter(false);\n    /**\n     * A row was expanded ot collapsed for tree\n     */\n    this.treeAction = new EventEmitter();\n    this.rowCount = 0;\n    this._offsetX = new BehaviorSubject(0);\n    this._count = 0;\n    this._offset = 0;\n    this._subscriptions = [];\n    /**\n     * This will be used when displaying or selecting rows.\n     * when tracking/comparing them, we'll use the value of this fn,\n     *\n     * (`fn(x) === fn(y)` instead of `x === y`)\n     */\n    this.rowIdentity = x => {\n      if (this._groupRowsBy) {\n        // each group in groupedRows are stored as {key, value: [rows]},\n        // where key is the groupRowsBy index\n        return x.key;\n      } else {\n        return x;\n      }\n    };\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = {\n        ...this.configuration.messages\n      };\n    }\n  }\n  /**\n   * Rows that are displayed in the table.\n   */\n  set rows(val) {\n    this._rows = val;\n    if (val) {\n      this._internalRows = [...val];\n    }\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n    // recalculate sizes/etc\n    this.recalculate();\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n    this.cd.markForCheck();\n  }\n  /**\n   * Gets the rows.\n   */\n  get rows() {\n    return this._rows;\n  }\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  set groupRowsBy(val) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n  /**\n   * Columns to be displayed.\n   */\n  set columns(val) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n    this._columns = val;\n  }\n  /**\n   * Get the columns.\n   */\n  get columns() {\n    return this._columns;\n  }\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  set limit(val) {\n    this._limit = val;\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n  /**\n   * Gets the limit.\n   */\n  get limit() {\n    return this._limit;\n  }\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  set count(val) {\n    this._count = val;\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n  /**\n   * Gets the count.\n   */\n  get count() {\n    return this._count;\n  }\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  set offset(val) {\n    this._offset = val;\n  }\n  get offset() {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  get isFixedHeader() {\n    const headerHeight = this.headerHeight;\n    return typeof headerHeight === 'string' ? headerHeight !== 'auto' : true;\n  }\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  get isFixedRow() {\n    return this.rowHeight !== 'auto';\n  }\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  get isVertScroll() {\n    return this.scrollbarV;\n  }\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  get isVirtualized() {\n    return this.virtualization;\n  }\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  get isHorScroll() {\n    return this.scrollbarH;\n  }\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  get isSelectable() {\n    return this.selectionType !== undefined;\n  }\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  get isCheckboxSelection() {\n    return this.selectionType === SelectionType.checkbox;\n  }\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  get isCellSelection() {\n    return this.selectionType === SelectionType.cell;\n  }\n  /**\n   * CSS class applied to root if single select.\n   */\n  get isSingleSelection() {\n    return this.selectionType === SelectionType.single;\n  }\n  /**\n   * CSS class added to root element if mulit select\n   */\n  get isMultiSelection() {\n    return this.selectionType === SelectionType.multi;\n  }\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  get isMultiClickSelection() {\n    return this.selectionType === SelectionType.multiClick;\n  }\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  set columnTemplates(val) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates() {\n    return this._columnTemplates;\n  }\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected() {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit() {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit() {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n    requestAnimationFrame(() => {\n      this.recalculate();\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray, groupBy) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i = 0;\n    originalArray.forEach(item => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n    const addGroup = (key, value) => {\n      return {\n        key,\n        value\n      };\n    };\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck() {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate() {\n    this.recalculateDims();\n    this.recalculateColumns();\n    this.cd.markForCheck();\n  }\n  /**\n   * Window resize handler to update sizes.\n   */\n  onWindowResize() {\n    this.recalculate();\n  }\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(columns = this._internalColumns, forceIdx = -1, allowBleed = this.scrollbarH) {\n    if (!columns) return undefined;\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n    return columns;\n  }\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims() {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n    this.recalculatePages();\n  }\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages() {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({\n    offset\n  }) {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n    this.offset = offset;\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event) {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val = this.rows) {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / this.rowHeight);\n      return Math.max(size, 0);\n    }\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n    // other empty :(\n    return 0;\n  }\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val = this.rows) {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n    return this.count;\n  }\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({\n    event,\n    column\n  }) {\n    this.tableContextmenu.emit({\n      event,\n      type: ContextmenuType.header,\n      content: column\n    });\n  }\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({\n    event,\n    row\n  }) {\n    this.tableContextmenu.emit({\n      event,\n      type: ContextmenuType.body,\n      content: row\n    });\n  }\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({\n    column,\n    newValue\n  }) {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n    let idx;\n    const cols = this._internalColumns.map((c, i) => {\n      c = {\n        ...c\n      };\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n      return c;\n    });\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({\n    column,\n    newValue,\n    prevValue\n  }) {\n    const cols = this._internalColumns.map(c => {\n      return {\n        ...c\n      };\n    });\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n    this._internalColumns = cols;\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event) {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n    this.sorts = event.sorts;\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event) {\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event) {\n    this.select.emit(event);\n  }\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({\n      row,\n      rowIndex\n    });\n  }\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  listenForColumnInputChanges() {\n    this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe(() => {\n      if (this.columnTemplates) {\n        this.columnTemplates.notifyOnChanges();\n      }\n    }));\n  }\n  sortInternalRows() {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\nDatatableComponent.ɵfac = function DatatableComponent_Factory(t) {\n  return new (t || DatatableComponent)(i0.ɵɵdirectiveInject(ScrollbarHelper, 4), i0.ɵɵdirectiveInject(DimensionsHelper, 4), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(ColumnChangesService), i0.ɵɵdirectiveInject('configuration', 8));\n};\nDatatableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DatatableComponent,\n  selectors: [[\"ngx-datatable\"]],\n  contentQueries: function DatatableComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DatatableRowDetailDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, DatatableGroupHeaderDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, DatatableFooterDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, DataTableColumnDirective, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rowDetail = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeader = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnTemplates = _t);\n    }\n  },\n  viewQuery: function DatatableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DataTableBodyComponent, 5);\n      i0.ɵɵviewQuery(DataTableHeaderComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bodyComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerComponent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ngx-datatable\"],\n  hostVars: 22,\n  hostBindings: function DatatableComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function DatatableComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"fixed-header\", ctx.isFixedHeader)(\"fixed-row\", ctx.isFixedRow)(\"scroll-vertical\", ctx.isVertScroll)(\"virtualized\", ctx.isVirtualized)(\"scroll-horz\", ctx.isHorScroll)(\"selectable\", ctx.isSelectable)(\"checkbox-selection\", ctx.isCheckboxSelection)(\"cell-selection\", ctx.isCellSelection)(\"single-selection\", ctx.isSingleSelection)(\"multi-selection\", ctx.isMultiSelection)(\"multi-click-selection\", ctx.isMultiClickSelection);\n    }\n  },\n  inputs: {\n    targetMarkerTemplate: \"targetMarkerTemplate\",\n    rows: \"rows\",\n    groupRowsBy: \"groupRowsBy\",\n    groupedRows: \"groupedRows\",\n    columns: \"columns\",\n    selected: \"selected\",\n    scrollbarV: \"scrollbarV\",\n    scrollbarH: \"scrollbarH\",\n    rowHeight: \"rowHeight\",\n    columnMode: \"columnMode\",\n    headerHeight: \"headerHeight\",\n    footerHeight: \"footerHeight\",\n    externalPaging: \"externalPaging\",\n    externalSorting: \"externalSorting\",\n    limit: \"limit\",\n    count: \"count\",\n    offset: \"offset\",\n    loadingIndicator: \"loadingIndicator\",\n    selectionType: \"selectionType\",\n    reorderable: \"reorderable\",\n    swapColumns: \"swapColumns\",\n    sortType: \"sortType\",\n    sorts: \"sorts\",\n    cssClasses: \"cssClasses\",\n    messages: \"messages\",\n    rowClass: \"rowClass\",\n    selectCheck: \"selectCheck\",\n    displayCheck: \"displayCheck\",\n    groupExpansionDefault: \"groupExpansionDefault\",\n    trackByProp: \"trackByProp\",\n    selectAllRowsOnPage: \"selectAllRowsOnPage\",\n    virtualization: \"virtualization\",\n    treeFromRelation: \"treeFromRelation\",\n    treeToRelation: \"treeToRelation\",\n    summaryRow: \"summaryRow\",\n    summaryHeight: \"summaryHeight\",\n    summaryPosition: \"summaryPosition\",\n    rowIdentity: \"rowIdentity\"\n  },\n  outputs: {\n    scroll: \"scroll\",\n    activate: \"activate\",\n    select: \"select\",\n    sort: \"sort\",\n    page: \"page\",\n    reorder: \"reorder\",\n    resize: \"resize\",\n    tableContextmenu: \"tableContextmenu\",\n    treeAction: \"treeAction\"\n  },\n  decls: 5,\n  vars: 34,\n  consts: [[\"role\", \"table\", \"visibilityObserver\", \"\", 3, \"visible\"], [\"role\", \"rowgroup\", 3, \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"selectionType\", \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\", 4, \"ngIf\"], [\"role\", \"rowgroup\", 3, \"page\", \"activate\", \"rowContextmenu\", \"select\", \"scroll\", \"treeAction\", \"groupRowsBy\", \"groupedRows\", \"rows\", \"groupExpansionDefault\", \"scrollbarV\", \"scrollbarH\", \"virtualization\", \"loadingIndicator\", \"externalPaging\", \"rowHeight\", \"rowCount\", \"offset\", \"trackByProp\", \"columns\", \"pageSize\", \"offsetX\", \"rowDetail\", \"groupHeader\", \"selected\", \"innerWidth\", \"bodyHeight\", \"selectionType\", \"emptyMessage\", \"rowIdentity\", \"rowClass\", \"selectCheck\", \"displayCheck\", \"summaryRow\", \"summaryHeight\", \"summaryPosition\"], [3, \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\", \"page\", 4, \"ngIf\"], [\"role\", \"rowgroup\", 3, \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\", \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"allRowsSelected\", \"selectionType\"], [3, \"page\", \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\"]],\n  template: function DatatableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"visible\", function DatatableComponent_Template_div_visible_0_listener() {\n        return ctx.recalculate();\n      });\n      i0.ɵɵtemplate(1, DatatableComponent_datatable_header_1_Template, 2, 17, \"datatable-header\", 1);\n      i0.ɵɵelementStart(2, \"datatable-body\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵlistener(\"page\", function DatatableComponent_Template_datatable_body_page_2_listener($event) {\n        return ctx.onBodyPage($event);\n      })(\"activate\", function DatatableComponent_Template_datatable_body_activate_2_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"rowContextmenu\", function DatatableComponent_Template_datatable_body_rowContextmenu_2_listener($event) {\n        return ctx.onRowContextmenu($event);\n      })(\"select\", function DatatableComponent_Template_datatable_body_select_2_listener($event) {\n        return ctx.onBodySelect($event);\n      })(\"scroll\", function DatatableComponent_Template_datatable_body_scroll_2_listener($event) {\n        return ctx.onBodyScroll($event);\n      })(\"treeAction\", function DatatableComponent_Template_datatable_body_treeAction_2_listener($event) {\n        return ctx.onTreeAction($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, DatatableComponent_datatable_footer_4_Template, 1, 12, \"datatable-footer\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.headerHeight);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"groupRowsBy\", ctx.groupRowsBy)(\"groupedRows\", ctx.groupedRows)(\"rows\", ctx._internalRows)(\"groupExpansionDefault\", ctx.groupExpansionDefault)(\"scrollbarV\", ctx.scrollbarV)(\"scrollbarH\", ctx.scrollbarH)(\"virtualization\", ctx.virtualization)(\"loadingIndicator\", ctx.loadingIndicator)(\"externalPaging\", ctx.externalPaging)(\"rowHeight\", ctx.rowHeight)(\"rowCount\", ctx.rowCount)(\"offset\", ctx.offset)(\"trackByProp\", ctx.trackByProp)(\"columns\", ctx._internalColumns)(\"pageSize\", ctx.pageSize)(\"offsetX\", i0.ɵɵpipeBind1(3, 32, ctx._offsetX))(\"rowDetail\", ctx.rowDetail)(\"groupHeader\", ctx.groupHeader)(\"selected\", ctx.selected)(\"innerWidth\", ctx._innerWidth)(\"bodyHeight\", ctx.bodyHeight)(\"selectionType\", ctx.selectionType)(\"emptyMessage\", ctx.messages.emptyMessage)(\"rowIdentity\", ctx.rowIdentity)(\"rowClass\", ctx.rowClass)(\"selectCheck\", ctx.selectCheck)(\"displayCheck\", ctx.displayCheck)(\"summaryRow\", ctx.summaryRow)(\"summaryHeight\", ctx.summaryHeight)(\"summaryPosition\", ctx.summaryPosition);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.footerHeight);\n    }\n  },\n  dependencies: [DataTableHeaderComponent, DataTableBodyComponent, DataTableFooterComponent, VisibilityDirective, i1.NgIf, i1.AsyncPipe],\n  styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate(0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable *:before,.ngx-datatable *:after{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-header-inner{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:none}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:none}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:none}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([throttleable(5)], DatatableComponent.prototype, \"onWindowResize\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatatableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-datatable',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ngx-datatable'\n      },\n      template: \"<div role=\\\"table\\\" visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    role=\\\"rowgroup\\\"\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [sortUnsetIcon]=\\\"cssClasses.sortUnset\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    role=\\\"rowgroup\\\"\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\",\n      styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate(0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable *:before,.ngx-datatable *:after{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-header-inner{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:none}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:none}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:none}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ScrollbarHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: DimensionsHelper,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: ColumnChangesService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: ['configuration']\n      }]\n    }];\n  }, {\n    targetMarkerTemplate: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    groupedRows: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    scrollbarV: [{\n      type: Input\n    }],\n    scrollbarH: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    columnMode: [{\n      type: Input\n    }],\n    headerHeight: [{\n      type: Input\n    }],\n    footerHeight: [{\n      type: Input\n    }],\n    externalPaging: [{\n      type: Input\n    }],\n    externalSorting: [{\n      type: Input\n    }],\n    limit: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    loadingIndicator: [{\n      type: Input\n    }],\n    selectionType: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    swapColumns: [{\n      type: Input\n    }],\n    sortType: [{\n      type: Input\n    }],\n    sorts: [{\n      type: Input\n    }],\n    cssClasses: [{\n      type: Input\n    }],\n    messages: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    selectCheck: [{\n      type: Input\n    }],\n    displayCheck: [{\n      type: Input\n    }],\n    groupExpansionDefault: [{\n      type: Input\n    }],\n    trackByProp: [{\n      type: Input\n    }],\n    selectAllRowsOnPage: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: Input\n    }],\n    treeFromRelation: [{\n      type: Input\n    }],\n    treeToRelation: [{\n      type: Input\n    }],\n    summaryRow: [{\n      type: Input\n    }],\n    summaryHeight: [{\n      type: Input\n    }],\n    summaryPosition: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    sort: [{\n      type: Output\n    }],\n    page: [{\n      type: Output\n    }],\n    reorder: [{\n      type: Output\n    }],\n    resize: [{\n      type: Output\n    }],\n    tableContextmenu: [{\n      type: Output\n    }],\n    treeAction: [{\n      type: Output\n    }],\n    isFixedHeader: [{\n      type: HostBinding,\n      args: ['class.fixed-header']\n    }],\n    isFixedRow: [{\n      type: HostBinding,\n      args: ['class.fixed-row']\n    }],\n    isVertScroll: [{\n      type: HostBinding,\n      args: ['class.scroll-vertical']\n    }],\n    isVirtualized: [{\n      type: HostBinding,\n      args: ['class.virtualized']\n    }],\n    isHorScroll: [{\n      type: HostBinding,\n      args: ['class.scroll-horz']\n    }],\n    isSelectable: [{\n      type: HostBinding,\n      args: ['class.selectable']\n    }],\n    isCheckboxSelection: [{\n      type: HostBinding,\n      args: ['class.checkbox-selection']\n    }],\n    isCellSelection: [{\n      type: HostBinding,\n      args: ['class.cell-selection']\n    }],\n    isSingleSelection: [{\n      type: HostBinding,\n      args: ['class.single-selection']\n    }],\n    isMultiSelection: [{\n      type: HostBinding,\n      args: ['class.multi-selection']\n    }],\n    isMultiClickSelection: [{\n      type: HostBinding,\n      args: ['class.multi-click-selection']\n    }],\n    columnTemplates: [{\n      type: ContentChildren,\n      args: [DataTableColumnDirective]\n    }],\n    rowDetail: [{\n      type: ContentChild,\n      args: [DatatableRowDetailDirective]\n    }],\n    groupHeader: [{\n      type: ContentChild,\n      args: [DatatableGroupHeaderDirective]\n    }],\n    footer: [{\n      type: ContentChild,\n      args: [DatatableFooterDirective]\n    }],\n    bodyComponent: [{\n      type: ViewChild,\n      args: [DataTableBodyComponent]\n    }],\n    headerComponent: [{\n      type: ViewChild,\n      args: [DataTableHeaderComponent]\n    }],\n    rowIdentity: [{\n      type: Input\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nclass NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration) {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{\n        provide: 'configuration',\n        useValue: configuration\n      }]\n    };\n  }\n}\nNgxDatatableModule.ɵfac = function NgxDatatableModule_Factory(t) {\n  return new (t || NgxDatatableModule)();\n};\nNgxDatatableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxDatatableModule\n});\nNgxDatatableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxDatatableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n      declarations: [DataTableFooterTemplateDirective, VisibilityDirective, DraggableDirective, ResizeableDirective, OrderableDirective, LongPressDirective, ScrollerComponent, DatatableComponent, DataTableColumnDirective, DataTableHeaderComponent, DataTableHeaderCellComponent, DataTableBodyComponent, DataTableFooterComponent, DataTablePagerComponent, ProgressBarComponent, DataTableBodyRowComponent, DataTableRowWrapperComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableBodyCellComponent, DataTableSelectionComponent, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DatatableFooterDirective, DatatableGroupHeaderTemplateDirective, DataTableSummaryRowComponent],\n      exports: [DatatableComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableFooterTemplateDirective, DatatableFooterDirective, DataTablePagerComponent, DatatableGroupHeaderTemplateDirective]\n    }]\n  }], null, null);\n})();\nvar ClickType;\n(function (ClickType) {\n  ClickType[\"single\"] = \"single\";\n  ClickType[\"double\"] = \"double\";\n})(ClickType || (ClickType = {}));\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nfunction elementsFromPoint(x, y) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n  //if (document === undefined) return elements;\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; d = previousPointerEvents[--i];) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n\n/*\n * Public API Surface of ngx-datatable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY };","map":{"version":3,"names":["i0","Injectable","Inject","Directive","EventEmitter","HostBinding","Output","Input","HostListener","ContentChildren","Component","ChangeDetectionStrategy","TemplateRef","ContentChild","ViewContainerRef","ViewChild","SkipSelf","ViewEncapsulation","Optional","NgModule","i1","DOCUMENT","CommonModule","Subject","fromEvent","BehaviorSubject","takeUntil","__decorate","_c0","_c1","_c2","a0","cellContext","DataTableBodyCellComponent_label_1_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","DataTableBodyCellComponent_label_1_Template_input_click_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","onCheckboxChange","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","isSelected","DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template","ɵɵelement","DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template","DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template","DataTableBodyCellComponent_ng_container_2_button_1_Template","_r3","DataTableBodyCellComponent_ng_container_2_button_1_Template_button_click_0_listener","onTreeAction","ɵɵtemplate","treeStatus","DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template","DataTableBodyCellComponent_ng_container_2_2_Template","column","treeToggleTemplate","ɵɵpureFunction1","DataTableBodyCellComponent_ng_container_2_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","DataTableBodyCellComponent_span_3_Template","sanitizedValue","value","ɵɵsanitizeHtml","DataTableBodyCellComponent_4_ng_template_0_Template","DataTableBodyCellComponent_4_Template","ɵɵtemplateRefExtractor","cellTemplate","DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template","DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_activate_0_listener","ii_r2","index","ctx_r2","onActivate","DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_treeAction_0_listener","column_r4","$implicit","row","group","expanded","rowIndex","rowHeight","displayCheck","DataTableBodyRowComponent_div_0_Template","colGroup_r5","ɵɵclassMapInterpolate1","type","_groupStyles","columns","columnTrackingFn","DataTableSummaryRowComponent_datatable_body_row_0_Template","ctx_r0","innerWidth","offsetX","_internalColumns","summaryRow","DataTableRowWrapperComponent_div_0_1_ng_template_0_Template","DataTableRowWrapperComponent_div_0_1_Template","groupHeader","template","groupContext","DataTableRowWrapperComponent_div_0_Template","getGroupHeaderStyle","DataTableRowWrapperComponent_ng_content_1_Template","ɵɵprojection","DataTableRowWrapperComponent_div_2_1_ng_template_0_Template","DataTableRowWrapperComponent_div_2_1_Template","rowDetail","rowContext","DataTableRowWrapperComponent_div_2_Template","ɵɵstyleProp","detailRowHeight","DataTableBodyComponent_datatable_progress_0_Template","DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template","summaryHeight","rows","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template","_r5","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_treeAction_0_listener","group_r6","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_activate_0_listener","i_r7","selector_r8","ɵɵreference","indexes","first","getRowSelected","getRowHeight","getRowIndex","getRowExpanded","rowClass","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template","_r9","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template_datatable_body_row_activate_0_listener","i_r10","row_r11","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template","rowTrackingFn","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template","_r4","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template_datatable_row_wrapper_rowContextmenu_0_listener","rowContextmenu","emit","groupedRowsTemplate_r12","groupedRows","getRowsStyles","getDetailRowHeight","DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template","getBottomSummaryRowStyles","DataTableBodyComponent_datatable_scroller_3_Template","_r2","DataTableBodyComponent_datatable_scroller_3_Template_datatable_scroller_scroll_0_listener","onBodyScroll","scrollbarV","scrollbarH","scrollHeight","columnGroupWidths","total","summaryPosition","temp","DataTableBodyComponent_div_4_Template","emptyMessage","DataTableHeaderCellComponent_1_ng_template_0_Template","DataTableHeaderCellComponent_1_Template","targetMarkerTemplate","targetMarkerContext","DataTableHeaderCellComponent_label_2_Template","DataTableHeaderCellComponent_label_2_Template_input_change_1_listener","select","allRowsSelected","DataTableHeaderCellComponent_span_3_Template","DataTableHeaderCellComponent_span_3_Template_span_click_1_listener","onSort","name","DataTableHeaderCellComponent_4_ng_template_0_Template","DataTableHeaderCellComponent_4_Template","headerTemplate","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_resize_0_listener","column_r2","onColumnResized","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressStart_0_listener","onLongPressStart","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressEnd_0_listener","onLongPressEnd","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_sort_0_listener","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_select_0_listener","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_columnContextmenu_0_listener","columnContextmenu","resizeable","reorderable","draggable","dragging","dragEventTarget","headerHeight","isTarget","sortType","sorts","selectionType","sortAscendingIcon","sortDescendingIcon","sortUnsetIcon","DataTableHeaderComponent_div_1_Template","colGroup_r4","ɵɵclassMap","_styleByGroup","DataTablePagerComponent_li_7_Template","DataTablePagerComponent_li_7_Template_a_click_1_listener","pg_r2","selectPage","number","ɵɵtext","ɵɵclassProp","page","ɵɵattribute","ɵɵtextInterpolate1","text","_c3","_c4","a1","a2","a3","a4","rowCount","pageSize","selectedCount","curPage","offset","DataTableFooterComponent_1_ng_template_0_Template","DataTableFooterComponent_1_Template","footerTemplate","ɵɵpureFunction5","DataTableFooterComponent_div_2_span_1_Template","ɵɵtextInterpolate2","toLocaleString","selectedMessage","DataTableFooterComponent_div_2_Template","totalMessage","DataTableFooterComponent_datatable_pager_3_Template","DataTableFooterComponent_datatable_pager_3_Template_datatable_pager_change_0_listener","pagerLeftArrowIcon","pagerRightArrowIcon","pagerPreviousIcon","pagerNextIcon","isVisible","DatatableComponent_datatable_header_1_Template","ɵɵpipe","DatatableComponent_datatable_header_1_Template_datatable_header_sort_0_listener","onColumnSort","DatatableComponent_datatable_header_1_Template_datatable_header_resize_0_listener","onColumnResize","DatatableComponent_datatable_header_1_Template_datatable_header_reorder_0_listener","onColumnReorder","DatatableComponent_datatable_header_1_Template_datatable_header_select_0_listener","onHeaderSelect","DatatableComponent_datatable_header_1_Template_datatable_header_columnContextmenu_0_listener","onColumnContextmenu","_innerWidth","ɵɵpipeBind1","_offsetX","undefined","cssClasses","sortAscending","sortDescending","sortUnset","DatatableComponent_datatable_footer_4_Template","DatatableComponent_datatable_footer_4_Template_datatable_footer_page_0_listener","onFooterPage","footerHeight","footer","messages","pagerLeftArrow","pagerRightArrow","pagerPrevious","selected","length","pagerNext","ScrollbarHelper","constructor","document","width","getWidth","outer","createElement","style","visibility","msOverflowStyle","body","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","parentNode","removeChild","ɵfac","ScrollbarHelper_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","decorators","args","DimensionsHelper","getDimensions","element","getBoundingClientRect","DimensionsHelper_Factory","ColumnChangesService","columnInputChanges","columnInputChanges$","asObservable","onInputChange","next","ColumnChangesService_Factory","DataTableFooterTemplateDirective","DataTableFooterTemplateDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","selector","VisibilityDirective","zone","visible","ngOnInit","runCheck","ngOnDestroy","clearTimeout","timeout","onVisibilityChange","run","check","offsetHeight","nativeElement","runOutsideAngular","setTimeout","VisibilityDirective_Factory","ElementRef","NgZone","hostVars","hostBindings","VisibilityDirective_HostBindings","outputs","DraggableDirective","dragX","dragY","dragStart","dragEnd","isDragging","ngOnChanges","changes","currentValue","dragModel","onMousedown","_destroySubscription","onMouseup","event","classList","remove","subscription","model","isDragElm","target","contains","preventDefault","mouseDownPos","x","clientX","y","clientY","mouseup","subscribe","ev","mouseMoveSub","pipe","move","add","left","top","unsubscribe","DraggableDirective_Factory","inputs","features","ɵɵNgOnChangesFeature","ResizeableDirective","renderer","resizeEnabled","resize","resizing","ngAfterViewInit","renderer2","resizeHandle","addClass","destroyNode","closed","clientWidth","isHandle","initialWidth","mouseDownScreenX","screenX","stopPropagation","e","movementX","newWidth","overMinWidth","minWidth","underMaxWidth","maxWidth","ResizeableDirective_Factory","Renderer2","ResizeableDirective_HostBindings","ResizeableDirective_mousedown_HostBindingHandler","host","OrderableDirective","differs","reorder","targetChanged","differ","find","create","ngAfterContentInit","updateSubscriptions","draggables","bind","forEach","d","diffs","diff","createMapDiffs","previousValue","onDragStart","onDragging","onDragEnd","forEachAddedItem","forEachRemovedItem","positions","i","dragger","toArray","elm","parseInt","offsetLeft","toString","prop","right","prevPos","lastDraggingIndex","prevIndex","newIndex","initialIndex","targets","elementsFromPoint","pos","el","reduce","acc","curr","$$id","OrderableDirective_Factory","KeyValueDiffers","contentQueries","OrderableDirective_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","descendants","LongPressDirective","pressEnabled","duration","longPressStart","longPressing","longPressEnd","mouseX","mouseY","press","pressing","isLongPress","isLongPressing","onMouseDown","which","pressModel","mouseEvent","onMouseMove","loop","xThres","Math","abs","yThres","endPress","LongPressDirective_Factory","LongPressDirective_HostBindings","LongPressDirective_mousedown_HostBindingHandler","ScrollerComponent","ngZone","scroll","scrollYPos","scrollXPos","prevScrollYPos","prevScrollXPos","_scrollEventListener","parentElement","onScrolled","addEventListener","removeEventListener","setOffset","offsetY","scrollTop","dom","currentTarget","requestAnimationFrame","scrollLeft","updateOffset","direction","ScrollerComponent_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","ScrollerComponent_HostBindings","scrollWidth","ngContentSelectors","decls","vars","ScrollerComponent_Template","ɵɵprojectionDef","encapsulation","changeDetection","class","OnPush","DatatableGroupHeaderTemplateDirective","DatatableGroupHeaderTemplateDirective_Factory","DatatableGroupHeaderDirective","toggle","_templateInput","_templateQuery","toggleExpandGroup","expandAllGroups","collapseAllGroups","DatatableGroupHeaderDirective_Factory","DatatableGroupHeaderDirective_ContentQueries","ɵɵInputFlags","None","read","static","emptyStringGetter","getterForProp","numericIndexGetter","indexOf","deepValueGetter","shallowValueGetter","obj","fieldName","path","current","split","optionalGetterForProp","groupRowsByParents","from","to","nodeById","l","node","TreeNode","uniqIDs","arr","item","toValue","push","parent","fromValue","children","resolvedRows","flatten","level","f","recursive","child","apply","Array","prototype","slice","call","arguments","camelCase","str","replace","trim","toLowerCase","a","b","c","toUpperCase","deCamelCase","match","id","random","pow","setColumnDefaults","treeColumnFound","isNullOrUndefined","$$valueGetter","String","hasOwnProperty","sortable","canAutoResize","isTreeColumn","translateTemplates","templates","result","col","props","Object","getOwnPropertyNames","summaryFunc","summaryTemplate","ColumnMode","SelectionType","SortType","ContextmenuType","DataTableColumnHeaderDirective","DataTableColumnHeaderDirective_Factory","DataTableColumnCellDirective","DataTableColumnCellDirective_Factory","DataTableColumnCellTreeToggle","DataTableColumnCellTreeToggle_Factory","DataTableColumnDirective","columnChangesService","isFirstChange","_cellTemplateInput","_cellTemplateQuery","_headerTemplateInput","_headerTemplateQuery","_treeToggleTemplateInput","_treeToggleTemplateQuery","DataTableColumnDirective_Factory","DataTableColumnDirective_ContentQueries","frozenLeft","frozenRight","flexGrow","comparator","checkboxable","headerCheckboxable","headerClass","cellClass","treeLevelIndent","DatatableRowDetailTemplateDirective","DatatableRowDetailTemplateDirective_Factory","DatatableRowDetailDirective","toggleExpandRow","expandAllRows","collapseAllRows","DatatableRowDetailDirective_Factory","DatatableRowDetailDirective_ContentQueries","DatatableFooterDirective","DatatableFooterDirective_Factory","DatatableFooterDirective_ContentQueries","columnsByPin","cols","ret","center","groups","all","columnTotalWidth","floor","totalWidth","has","parseFloat","columnsTotalWidth","columnsByPinArr","val","colsByPinArr","colsByPin","RowHeightCache","treeArray","clearCache","initCache","details","externalVirtual","rowIndexes","rowExpansions","isFn","isDetailFn","isNaN","Error","n","currentRowHeight","get","update","scrollY","calcRowIndex","atRowIndex","byRowHeight","query","atIndex","sum","queryBetween","atIndexA","atIndexB","dataLength","highestBit","blockSize","nextPos","cache","testStyle","prefix","styles","window","getComputedStyle","documentElement","join","pre","RegExp","lowercase","css","js","substr","getVendorPrefixedName","property","transform","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","translateXY","ProgressBarComponent","ProgressBarComponent_Factory","consts","ProgressBarComponent_Template","selectRows","comparefn","selectedIndex","splice","selectRowsBetween","reverse","greater","lesser","range","start","end","Keys","DataTableSelectionComponent","activate","selectRow","selectEnabled","chkbox","checkbox","multi","multiClick","shiftKey","getRowSelectedIdx","ctrlKey","metaKey","selectCheck","filter","keyCode","return","onKeyboardFocus","shouldFocus","up","down","isCellSelection","cell","cellElement","focusRow","rowElement","focusCell","cellIndex","nextRowElement","getPrevNextRow","focus","focusElement","previousElementSibling","nextElementSibling","nextCellElement","getElementsByClassName","rowId","rowIdentity","findIndex","r","DataTableSelectionComponent_Factory","DataTableSelectionComponent_Template","SortDirection","DataTableBodyCellComponent","cd","treeAction","isFocused","onCheckboxChangeFn","activateFn","_element","_group","checkValueUpdates","markForCheck","_rowHeight","_isSelected","_expanded","_rowIndex","_column","_row","_sorts","calcSortDir","status","_treeStatus","columnCssClasses","cls","res","keys","k","sortDir","asc","desc","height","ngDoCheck","clear","userPipe","stripHtml","onFocus","onBlur","onClick","onDblClick","onKeyDown","isTargetCell","isAction","sort","s","dir","html","calcLeftMargin","levelIndent","DataTableBodyCellComponent_Factory","ChangeDetectorRef","viewQuery","DataTableBodyCellComponent_Query","ɵɵviewQuery","DataTableBodyCellComponent_HostBindings","DataTableBodyCellComponent_focus_HostBindingHandler","DataTableBodyCellComponent_blur_HostBindingHandler","DataTableBodyCellComponent_click_HostBindingHandler","DataTableBodyCellComponent_dblclick_HostBindingHandler","DataTableBodyCellComponent_keydown_HostBindingHandler","DataTableBodyCellComponent_Template","dependencies","NgIf","NgTemplateOutlet","DataTableBodyRowComponent","scrollbarHelper","_rowDiffer","_columns","recalculateColumns","buildStylesByGroup","colByPin","_columnGroupWidths","cssClass","columnsTotalWidths","trackByGroups","colGroup","calcStylesByGroup","widths","bodyWidth","totalDiff","offsetDiff","isTargetRow","onMouseenter","_columnsByPin","DataTableBodyRowComponent_Factory","DataTableBodyRowComponent_HostBindings","DataTableBodyRowComponent_keydown_HostBindingHandler","DataTableBodyRowComponent_mouseenter_HostBindingHandler","DataTableBodyRowComponent_Template","NgForOf","NgStyle","defaultSumFunc","cells","cellsWithValues","some","noopSumFunc","DataTableSummaryRowComponent","updateInternalColumns","updateValues","map","cellsFromSingleColumn","sumFunc","getSummaryFunction","DataTableSummaryRowComponent_Factory","DataTableSummaryRowComponent_Template","DataTableRowWrapperComponent","rowDiffer","onContextmenu","DataTableRowWrapperComponent_Factory","DataTableRowWrapperComponent_HostBindings","DataTableRowWrapperComponent_contextmenu_HostBindingHandler","DataTableRowWrapperComponent_Template","DataTableBodyComponent","detailToggle","rowHeightsCache","WeakMap","idx","trackByProp","_pageSize","recalcLayout","_rows","_offset","virtualization","_rowCount","bodyHeight","_bodyHeight","listener","toggleRowExpansion","toggleAllRows","updateIndexes","updateRows","updateOffsetY","scroller","updatePage","ceil","last","maxRowsPerGroup","set","g","_idx","getGroupHeight","getRowAndDetailHeight","position","hideIndicator","loadingIndicator","externalPaging","max","min","refreshRowHeightCache","Set","getAdjustedViewPortIndex","viewPortFirstRowIndex","offsetScroll","rowExpandedIdx","getRowExpandedIdx","currentIndex","stylesByGroup","groupExpansionDefault","DataTableBodyComponent_Factory","DataTableBodyComponent_Query","DataTableBodyComponent_HostBindings","groupRowsBy","DataTableBodyComponent_Template","DataTableBodyComponent_Template_datatable_selection_select_1_listener","DataTableBodyComponent_Template_datatable_selection_activate_1_listener","nextSortDir","single","orderByComparator","Date","isFinite","sortRows","dirs","rowToIndexMap","Map","cachedDirs","valueGetter","compareFn","rowA","rowB","cachedDir","propA","propB","comparison","DataTableHeaderCellComponent","sortFn","selectFn","_allRowsSelected","sortClass","calcSortClass","isCheckboxable","newValue","prevValue","DataTableHeaderCellComponent_Factory","DataTableHeaderCellComponent_HostBindings","DataTableHeaderCellComponent_contextmenu_HostBindingHandler","DataTableHeaderCellComponent_Template","DataTableHeaderCellComponent_Template_span_click_5_listener","DataTableHeaderComponent","destroyed","setStylesByGroup","_headerHeight","headerWidth","onColumnReordered","getColumn","onTargetChanged","oldColumn","newColumn","concat","leftColumnCount","centerColumnCount","calcNewSorts","detectChanges","DataTableHeaderComponent_Factory","DataTableHeaderComponent_HostBindings","dealsWithGroup","DataTableHeaderComponent_Template","DataTableHeaderComponent_Template_div_reorder_0_listener","DataTableHeaderComponent_Template_div_targetChanged_0_listener","throttle","func","wait","options","context","previous","later","leading","now","remaining","trailing","throttleable","innerDecorator","key","descriptor","configurable","enumerable","getter","defineProperty","getTotalFlexGrow","totalFlexGrow","adjustColumnWidths","allColumns","expectedWidth","columnsWidth","colsByGroup","scaleColumns","attr","hasMinWidth","remainingWidth","widthPerFlexPoint","forceFillColumnWidths","startIdx","allowBleed","defaultColWidth","columnsToResize","$$oldWidth","additionWidthPerColumn","exceedsWindow","contentWidth","getContentWidth","columnsProcessed","remainingWidthLimit","newSize","removeProcessedColumns","DataTablePagerComponent","change","_count","_page","_size","size","pages","calcPages","count","totalPages","canPrevious","canNext","prevPage","nextPage","startPage","endPage","maxSize","isMaxSized","num","DataTablePagerComponent_Factory","DataTablePagerComponent_Template","DataTablePagerComponent_Template_a_click_2_listener","DataTablePagerComponent_Template_a_click_5_listener","DataTablePagerComponent_Template_a_click_9_listener","DataTablePagerComponent_Template_a_click_12_listener","DataTableFooterComponent","DataTableFooterComponent_Factory","DataTableFooterComponent_Template","NgClass","DatatableComponent","dimensionsHelper","configuration","columnMode","standard","externalSorting","swapColumns","selectAllRowsOnPage","tableContextmenu","_subscriptions","_groupRowsBy","_internalRows","sortInternalRows","treeFromRelation","treeToRelation","recalculate","groupArrayBy","limit","_limit","isFixedHeader","isFixedRow","isVertScroll","isVirtualized","isHorScroll","isSelectable","isCheckboxSelection","isSingleSelection","isMultiSelection","isMultiClickSelection","columnTemplates","_columnTemplates","translateColumns","bodyComponent","rowsOnPage","v","listenForColumnInputChanges","originalArray","groupBy","addGroup","recalculatePages","recalculateDims","onWindowResize","forceIdx","force","flex","dims","calcPageSize","calcRowCount","onBodyPage","header","content","onRowContextmenu","prevCol","movedCol","allSelected","onBodySelect","notifyOnChanges","DatatableComponent_Factory","DatatableComponent_ContentQueries","DatatableComponent_Query","headerComponent","DatatableComponent_HostBindings","DatatableComponent_resize_HostBindingHandler","ɵɵresolveWindow","DatatableComponent_Template","DatatableComponent_Template_div_visible_0_listener","DatatableComponent_Template_datatable_body_page_2_listener","DatatableComponent_Template_datatable_body_activate_2_listener","DatatableComponent_Template_datatable_body_rowContextmenu_2_listener","DatatableComponent_Template_datatable_body_select_2_listener","DatatableComponent_Template_datatable_body_scroll_2_listener","DatatableComponent_Template_datatable_body_treeAction_2_listener","AsyncPipe","NgxDatatableModule","forRoot","ngModule","providers","provide","useValue","NgxDatatableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ClickType","elements","previousPointerEvents","elementFromPoint","getPropertyValue","priority","getPropertyPriority","setProperty"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/node_modules/@swimlane/ngx-datatable/fesm2020/swimlane-ngx-datatable.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, Directive, EventEmitter, HostBinding, Output, Input, HostListener, ContentChildren, Component, ChangeDetectionStrategy, TemplateRef, ContentChild, ViewContainerRef, ViewChild, SkipSelf, ViewEncapsulation, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass ScrollbarHelper {\n    constructor(document) {\n        this.document = document;\n        this.width = this.getWidth();\n    }\n    getWidth() {\n        const outer = this.document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.width = '100px';\n        outer.style.msOverflowStyle = 'scrollbar';\n        this.document.body.appendChild(outer);\n        const widthNoScroll = outer.offsetWidth;\n        outer.style.overflow = 'scroll';\n        const inner = this.document.createElement('div');\n        inner.style.width = '100%';\n        outer.appendChild(inner);\n        const widthWithScroll = inner.offsetWidth;\n        outer.parentNode.removeChild(outer);\n        return widthNoScroll - widthWithScroll;\n    }\n}\nScrollbarHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ScrollbarHelper, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollbarHelper.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ScrollbarHelper });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ScrollbarHelper, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass DimensionsHelper {\n    getDimensions(element) {\n        return element.getBoundingClientRect();\n    }\n}\nDimensionsHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DimensionsHelper, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDimensionsHelper.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DimensionsHelper });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DimensionsHelper, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\nclass ColumnChangesService {\n    constructor() {\n        this.columnInputChanges = new Subject();\n    }\n    get columnInputChanges$() {\n        return this.columnInputChanges.asObservable();\n    }\n    onInputChange() {\n        this.columnInputChanges.next();\n    }\n}\nColumnChangesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ColumnChangesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nColumnChangesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ColumnChangesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ColumnChangesService, decorators: [{\n            type: Injectable\n        }] });\n\nclass DataTableFooterTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableFooterTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataTableFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableFooterTemplateDirective, selector: \"[ngx-datatable-footer-template]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableFooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-datatable-footer-template]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nclass VisibilityDirective {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new EventEmitter();\n    }\n    ngOnInit() {\n        this.runCheck();\n    }\n    ngOnDestroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 50);\n                });\n            }\n        };\n        this.timeout = setTimeout(() => check());\n    }\n}\nVisibilityDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: VisibilityDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: VisibilityDirective, selector: \"[visibilityObserver]\", outputs: { visible: \"visible\" }, host: { properties: { \"class.visible\": \"this.isVisible\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: VisibilityDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[visibilityObserver]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { isVisible: [{\n                type: HostBinding,\n                args: ['class.visible']\n            }], visible: [{\n                type: Output\n            }] } });\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nclass DraggableDirective {\n    constructor(element) {\n        this.dragX = true;\n        this.dragY = true;\n        this.dragStart = new EventEmitter();\n        this.dragging = new EventEmitter();\n        this.dragEnd = new EventEmitter();\n        this.isDragging = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n            this.onMousedown(changes['dragEventTarget'].currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    onMouseup(event) {\n        if (!this.isDragging)\n            return;\n        this.isDragging = false;\n        this.element.classList.remove('dragging');\n        if (this.subscription) {\n            this._destroySubscription();\n            this.dragEnd.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    onMousedown(event) {\n        // we only want to drag the inner header text\n        const isDragElm = event.target.classList.contains('draggable');\n        if (isDragElm && (this.dragX || this.dragY)) {\n            event.preventDefault();\n            this.isDragging = true;\n            const mouseDownPos = { x: event.clientX, y: event.clientY };\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((ev) => this.onMouseup(ev));\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((ev) => this.move(ev, mouseDownPos));\n            this.subscription.add(mouseMoveSub);\n            this.dragStart.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    move(event, mouseDownPos) {\n        if (!this.isDragging)\n            return;\n        const x = event.clientX - mouseDownPos.x;\n        const y = event.clientY - mouseDownPos.y;\n        if (this.dragX)\n            this.element.style.left = `${x}px`;\n        if (this.dragY)\n            this.element.style.top = `${y}px`;\n        this.element.classList.add('dragging');\n        this.dragging.emit({\n            event,\n            element: this.element,\n            model: this.dragModel\n        });\n    }\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nDraggableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DraggableDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDraggableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DraggableDirective, selector: \"[draggable]\", inputs: { dragEventTarget: \"dragEventTarget\", dragModel: \"dragModel\", dragX: \"dragX\", dragY: \"dragY\" }, outputs: { dragStart: \"dragStart\", dragging: \"dragging\", dragEnd: \"dragEnd\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DraggableDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[draggable]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { dragEventTarget: [{\n                type: Input\n            }], dragModel: [{\n                type: Input\n            }], dragX: [{\n                type: Input\n            }], dragY: [{\n                type: Input\n            }], dragStart: [{\n                type: Output\n            }], dragging: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\n\nclass ResizeableDirective {\n    constructor(element, renderer) {\n        this.renderer = renderer;\n        this.resizeEnabled = true;\n        this.resize = new EventEmitter();\n        this.resizing = false;\n        this.element = element.nativeElement;\n    }\n    ngAfterViewInit() {\n        const renderer2 = this.renderer;\n        this.resizeHandle = renderer2.createElement('span');\n        if (this.resizeEnabled) {\n            renderer2.addClass(this.resizeHandle, 'resize-handle');\n        }\n        else {\n            renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n        }\n        renderer2.appendChild(this.element, this.resizeHandle);\n    }\n    ngOnDestroy() {\n        this._destroySubscription();\n        if (this.renderer.destroyNode) {\n            this.renderer.destroyNode(this.resizeHandle);\n        }\n        else if (this.resizeHandle) {\n            this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n        }\n    }\n    onMouseup() {\n        this.resizing = false;\n        if (this.subscription && !this.subscription.closed) {\n            this._destroySubscription();\n            this.resize.emit(this.element.clientWidth);\n        }\n    }\n    onMousedown(event) {\n        const isHandle = event.target.classList.contains('resize-handle');\n        const initialWidth = this.element.clientWidth;\n        const mouseDownScreenX = event.screenX;\n        if (isHandle) {\n            event.stopPropagation();\n            this.resizing = true;\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((ev) => this.onMouseup());\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((e) => this.move(e, initialWidth, mouseDownScreenX));\n            this.subscription.add(mouseMoveSub);\n        }\n    }\n    move(event, initialWidth, mouseDownScreenX) {\n        const movementX = event.screenX - mouseDownScreenX;\n        const newWidth = initialWidth + movementX;\n        const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n        const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n        if (overMinWidth && underMaxWidth) {\n            this.element.style.width = `${newWidth}px`;\n        }\n    }\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nResizeableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ResizeableDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nResizeableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ResizeableDirective, selector: \"[resizeable]\", inputs: { resizeEnabled: \"resizeEnabled\", minWidth: \"minWidth\", maxWidth: \"maxWidth\" }, outputs: { resize: \"resize\" }, host: { listeners: { \"mousedown\": \"onMousedown($event)\" }, properties: { \"class.resizeable\": \"resizeEnabled\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ResizeableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[resizeable]',\n                    host: {\n                        '[class.resizeable]': 'resizeEnabled'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { resizeEnabled: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], maxWidth: [{\n                type: Input\n            }], resize: [{\n                type: Output\n            }], onMousedown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }] } });\n\nclass OrderableDirective {\n    constructor(differs, document) {\n        this.document = document;\n        this.reorder = new EventEmitter();\n        this.targetChanged = new EventEmitter();\n        this.differ = differs.find({}).create();\n    }\n    ngAfterContentInit() {\n        // HACK: Investigate Better Way\n        this.updateSubscriptions();\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    }\n    ngOnDestroy() {\n        this.draggables.forEach(d => {\n            d.dragStart.unsubscribe();\n            d.dragging.unsubscribe();\n            d.dragEnd.unsubscribe();\n        });\n    }\n    updateSubscriptions() {\n        const diffs = this.differ.diff(this.createMapDiffs());\n        if (diffs) {\n            const subscribe = ({ currentValue, previousValue }) => {\n                unsubscribe({ previousValue });\n                if (currentValue) {\n                    currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n                    currentValue.dragging.subscribe(this.onDragging.bind(this));\n                    currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n                }\n            };\n            const unsubscribe = ({ previousValue }) => {\n                if (previousValue) {\n                    previousValue.dragStart.unsubscribe();\n                    previousValue.dragging.unsubscribe();\n                    previousValue.dragEnd.unsubscribe();\n                }\n            };\n            diffs.forEachAddedItem(subscribe);\n            // diffs.forEachChangedItem(subscribe.bind(this));\n            diffs.forEachRemovedItem(unsubscribe);\n        }\n    }\n    onDragStart() {\n        this.positions = {};\n        let i = 0;\n        for (const dragger of this.draggables.toArray()) {\n            const elm = dragger.element;\n            const left = parseInt(elm.offsetLeft.toString(), 0);\n            this.positions[dragger.dragModel.prop] = {\n                left,\n                right: left + parseInt(elm.offsetWidth.toString(), 0),\n                index: i++,\n                element: elm\n            };\n        }\n    }\n    onDragging({ element, model, event }) {\n        const prevPos = this.positions[model.prop];\n        const target = this.isTarget(model, event);\n        if (target) {\n            if (this.lastDraggingIndex !== target.i) {\n                this.targetChanged.emit({\n                    prevIndex: this.lastDraggingIndex,\n                    newIndex: target.i,\n                    initialIndex: prevPos.index\n                });\n                this.lastDraggingIndex = target.i;\n            }\n        }\n        else if (this.lastDraggingIndex !== prevPos.index) {\n            this.targetChanged.emit({\n                prevIndex: this.lastDraggingIndex,\n                initialIndex: prevPos.index\n            });\n            this.lastDraggingIndex = prevPos.index;\n        }\n    }\n    onDragEnd({ element, model, event }) {\n        const prevPos = this.positions[model.prop];\n        const target = this.isTarget(model, event);\n        if (target) {\n            this.reorder.emit({\n                prevIndex: prevPos.index,\n                newIndex: target.i,\n                model\n            });\n        }\n        this.lastDraggingIndex = undefined;\n        element.style.left = 'auto';\n    }\n    isTarget(model, event) {\n        let i = 0;\n        const x = event.x || event.clientX;\n        const y = event.y || event.clientY;\n        const targets = this.document.elementsFromPoint(x, y);\n        for (const prop in this.positions) {\n            // current column position which throws event.\n            const pos = this.positions[prop];\n            // since we drag the inner span, we need to find it in the elements at the cursor\n            if (model.prop !== prop && targets.find((el) => el === pos.element)) {\n                return {\n                    pos,\n                    i\n                };\n            }\n            i++;\n        }\n    }\n    createMapDiffs() {\n        return this.draggables.toArray().reduce((acc, curr) => {\n            acc[curr.dragModel.$$id] = curr;\n            return acc;\n        }, {});\n    }\n}\nOrderableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: OrderableDirective, deps: [{ token: i0.KeyValueDiffers }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nOrderableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: OrderableDirective, selector: \"[orderable]\", outputs: { reorder: \"reorder\", targetChanged: \"targetChanged\" }, queries: [{ propertyName: \"draggables\", predicate: DraggableDirective, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: OrderableDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[orderable]' }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { reorder: [{\n                type: Output\n            }], targetChanged: [{\n                type: Output\n            }], draggables: [{\n                type: ContentChildren,\n                args: [DraggableDirective, { descendants: true }]\n            }] } });\n\nclass LongPressDirective {\n    constructor() {\n        this.pressEnabled = true;\n        this.duration = 500;\n        this.longPressStart = new EventEmitter();\n        this.longPressing = new EventEmitter();\n        this.longPressEnd = new EventEmitter();\n        this.mouseX = 0;\n        this.mouseY = 0;\n    }\n    get press() {\n        return this.pressing;\n    }\n    get isLongPress() {\n        return this.isLongPressing;\n    }\n    onMouseDown(event) {\n        // don't do right/middle clicks\n        if (event.which !== 1 || !this.pressEnabled)\n            return;\n        // don't start drag if its on resize handle\n        const target = event.target;\n        if (target.classList.contains('resize-handle'))\n            return;\n        this.mouseX = event.clientX;\n        this.mouseY = event.clientY;\n        this.pressing = true;\n        this.isLongPressing = false;\n        const mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe((ev) => this.onMouseup());\n        this.timeout = setTimeout(() => {\n            this.isLongPressing = true;\n            this.longPressStart.emit({\n                event,\n                model: this.pressModel\n            });\n            this.subscription.add(fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((mouseEvent) => this.onMouseMove(mouseEvent)));\n            this.loop(event);\n        }, this.duration);\n        this.loop(event);\n    }\n    onMouseMove(event) {\n        if (this.pressing && !this.isLongPressing) {\n            const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n            const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n            if (xThres || yThres) {\n                this.endPress();\n            }\n        }\n    }\n    loop(event) {\n        if (this.isLongPressing) {\n            this.timeout = setTimeout(() => {\n                this.longPressing.emit({\n                    event,\n                    model: this.pressModel\n                });\n                this.loop(event);\n            }, 50);\n        }\n    }\n    endPress() {\n        clearTimeout(this.timeout);\n        this.isLongPressing = false;\n        this.pressing = false;\n        this._destroySubscription();\n        this.longPressEnd.emit({\n            model: this.pressModel\n        });\n    }\n    onMouseup() {\n        this.endPress();\n    }\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nLongPressDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LongPressDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nLongPressDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: LongPressDirective, selector: \"[long-press]\", inputs: { pressEnabled: \"pressEnabled\", pressModel: \"pressModel\", duration: \"duration\" }, outputs: { longPressStart: \"longPressStart\", longPressing: \"longPressing\", longPressEnd: \"longPressEnd\" }, host: { listeners: { \"mousedown\": \"onMouseDown($event)\" }, properties: { \"class.press\": \"this.press\", \"class.longpress\": \"this.isLongPress\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LongPressDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[long-press]' }]\n        }], propDecorators: { pressEnabled: [{\n                type: Input\n            }], pressModel: [{\n                type: Input\n            }], duration: [{\n                type: Input\n            }], longPressStart: [{\n                type: Output\n            }], longPressing: [{\n                type: Output\n            }], longPressEnd: [{\n                type: Output\n            }], press: [{\n                type: HostBinding,\n                args: ['class.press']\n            }], isLongPress: [{\n                type: HostBinding,\n                args: ['class.longpress']\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }] } });\n\nclass ScrollerComponent {\n    constructor(ngZone, element, renderer) {\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollbarV = false;\n        this.scrollbarH = false;\n        this.scroll = new EventEmitter();\n        this.scrollYPos = 0;\n        this.scrollXPos = 0;\n        this.prevScrollYPos = 0;\n        this.prevScrollXPos = 0;\n        this._scrollEventListener = null;\n        this.element = element.nativeElement;\n    }\n    ngOnInit() {\n        // manual bind so we don't always listen\n        if (this.scrollbarV || this.scrollbarH) {\n            const renderer = this.renderer;\n            this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n            this._scrollEventListener = this.onScrolled.bind(this);\n            this.parentElement.addEventListener('scroll', this._scrollEventListener);\n        }\n    }\n    ngOnDestroy() {\n        if (this._scrollEventListener) {\n            this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n            this._scrollEventListener = null;\n        }\n    }\n    setOffset(offsetY) {\n        if (this.parentElement) {\n            this.parentElement.scrollTop = offsetY;\n        }\n    }\n    onScrolled(event) {\n        const dom = event.currentTarget;\n        requestAnimationFrame(() => {\n            this.scrollYPos = dom.scrollTop;\n            this.scrollXPos = dom.scrollLeft;\n            this.updateOffset();\n        });\n    }\n    updateOffset() {\n        let direction;\n        if (this.scrollYPos < this.prevScrollYPos) {\n            direction = 'down';\n        }\n        else if (this.scrollYPos > this.prevScrollYPos) {\n            direction = 'up';\n        }\n        this.scroll.emit({\n            direction,\n            scrollYPos: this.scrollYPos,\n            scrollXPos: this.scrollXPos\n        });\n        this.prevScrollYPos = this.scrollYPos;\n        this.prevScrollXPos = this.scrollXPos;\n    }\n}\nScrollerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ScrollerComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nScrollerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ScrollerComponent, selector: \"datatable-scroller\", inputs: { scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", scrollHeight: \"scrollHeight\", scrollWidth: \"scrollWidth\" }, outputs: { scroll: \"scroll\" }, host: { properties: { \"style.height.px\": \"this.scrollHeight\", \"style.width.px\": \"this.scrollWidth\" }, classAttribute: \"datatable-scroll\" }, ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ScrollerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-scroller',\n                    template: ` <ng-content></ng-content> `,\n                    host: {\n                        class: 'datatable-scroll'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { scrollbarV: [{\n                type: Input\n            }], scrollbarH: [{\n                type: Input\n            }], scrollHeight: [{\n                type: HostBinding,\n                args: ['style.height.px']\n            }, {\n                type: Input\n            }], scrollWidth: [{\n                type: HostBinding,\n                args: ['style.width.px']\n            }, {\n                type: Input\n            }], scroll: [{\n                type: Output\n            }] } });\n\nclass DatatableGroupHeaderTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableGroupHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableGroupHeaderTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDatatableGroupHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableGroupHeaderTemplateDirective, selector: \"[ngx-datatable-group-header-template]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableGroupHeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngx-datatable-group-header-template]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass DatatableGroupHeaderDirective {\n    constructor() {\n        /**\n         * Row height is required when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Track toggling of group visibility\n         */\n        this.toggle = new EventEmitter();\n    }\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of a group\n     */\n    toggleExpandGroup(group) {\n        this.toggle.emit({\n            type: 'group',\n            value: group\n        });\n    }\n    /**\n     * Expand all groups\n     */\n    expandAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * Collapse all groups\n     */\n    collapseAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableGroupHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableGroupHeaderDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDatatableGroupHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableGroupHeaderDirective, selector: \"ngx-datatable-group-header\", inputs: { rowHeight: \"rowHeight\", _templateInput: [\"template\", \"_templateInput\"] }, outputs: { toggle: \"toggle\" }, queries: [{ propertyName: \"_templateQuery\", first: true, predicate: DatatableGroupHeaderTemplateDirective, descendants: true, read: TemplateRef, static: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableGroupHeaderDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngx-datatable-group-header' }]\n        }], propDecorators: { rowHeight: [{\n                type: Input\n            }], _templateInput: [{\n                type: Input,\n                args: ['template']\n            }], _templateQuery: [{\n                type: ContentChild,\n                args: [DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true }]\n            }], toggle: [{\n                type: Output\n            }] } });\n\n/**\n * Always returns the empty string ''\n */\nfunction emptyStringGetter() {\n    return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nfunction getterForProp(prop) {\n    if (prop == null) {\n        return emptyStringGetter;\n    }\n    if (typeof prop === 'number') {\n        return numericIndexGetter;\n    }\n    else {\n        // deep or simple\n        if (prop.indexOf('.') !== -1) {\n            return deepValueGetter;\n        }\n        else {\n            return shallowValueGetter;\n        }\n    }\n}\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nfunction numericIndexGetter(row, index) {\n    if (row == null) {\n        return '';\n    }\n    // mimic behavior of deepValueGetter\n    if (!row || index == null) {\n        return row;\n    }\n    const value = row[index];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nfunction shallowValueGetter(obj, fieldName) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !fieldName) {\n        return obj;\n    }\n    const value = obj[fieldName];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nfunction deepValueGetter(obj, path) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !path) {\n        return obj;\n    }\n    // check if path matches a root-level field\n    // { \"a.b.c\": 123 }\n    let current = obj[path];\n    if (current !== undefined) {\n        return current;\n    }\n    current = obj;\n    const split = path.split('.');\n    if (split.length) {\n        for (let i = 0; i < split.length; i++) {\n            current = current[split[i]];\n            // if found undefined, return empty string\n            if (current === undefined || current === null) {\n                return '';\n            }\n        }\n    }\n    return current;\n}\n\nfunction optionalGetterForProp(prop) {\n    return prop && (row => getterForProp(prop)(row, prop));\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nfunction groupRowsByParents(rows, from, to) {\n    if (from && to) {\n        const nodeById = {};\n        const l = rows.length;\n        let node = null;\n        nodeById[0] = new TreeNode(); // that's the root node\n        const uniqIDs = rows.reduce((arr, item) => {\n            const toValue = to(item);\n            if (arr.indexOf(toValue) === -1) {\n                arr.push(toValue);\n            }\n            return arr;\n        }, []);\n        for (let i = 0; i < l; i++) {\n            // make TreeNode objects for each item\n            nodeById[to(rows[i])] = new TreeNode(rows[i]);\n        }\n        for (let i = 0; i < l; i++) {\n            // link all TreeNode objects\n            node = nodeById[to(rows[i])];\n            let parent = 0;\n            const fromValue = from(node.row);\n            if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n                parent = fromValue;\n            }\n            node.parent = nodeById[parent];\n            node.row['level'] = node.parent.row['level'] + 1;\n            node.parent.children.push(node);\n        }\n        let resolvedRows = [];\n        nodeById[0].flatten(function () {\n            resolvedRows = [...resolvedRows, this.row];\n        }, true);\n        return resolvedRows;\n    }\n    else {\n        return rows;\n    }\n}\nclass TreeNode {\n    constructor(row = null) {\n        if (!row) {\n            row = {\n                level: -1,\n                treeStatus: 'expanded'\n            };\n        }\n        this.row = row;\n        this.parent = null;\n        this.children = [];\n    }\n    flatten(f, recursive) {\n        if (this.row['treeStatus'] === 'expanded') {\n            for (let i = 0, l = this.children.length; i < l; i++) {\n                const child = this.children[i];\n                f.apply(child, Array.prototype.slice.call(arguments, 2));\n                if (recursive)\n                    child.flatten.apply(child, arguments);\n            }\n        }\n    }\n}\n\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nfunction camelCase(str) {\n    // Replace special characters with a space\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n    // put a space before an uppercase letter\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n    // Lower case first character and some other stuff\n    str = str\n        .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n        .trim()\n        .toLowerCase();\n    // uppercase characters preceded by a space or number\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n        return b.trim() + c.toUpperCase();\n    });\n    return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nfunction deCamelCase(str) {\n    return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nfunction id() {\n    return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n\n/**\n * Sets the column defaults\n */\nfunction setColumnDefaults(columns) {\n    if (!columns)\n        return;\n    // Only one column should hold the tree view\n    // Thus if multiple columns are provided with\n    // isTreeColumn as true we take only the first one\n    let treeColumnFound = false;\n    for (const column of columns) {\n        if (!column.$$id) {\n            column.$$id = id();\n        }\n        // prop can be numeric; zero is valid not a missing prop\n        // translate name => prop\n        if (isNullOrUndefined(column.prop) && column.name) {\n            column.prop = camelCase(column.name);\n        }\n        if (!column.$$valueGetter) {\n            column.$$valueGetter = getterForProp(column.prop);\n        }\n        // format props if no name passed\n        if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = deCamelCase(String(column.prop));\n        }\n        if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = ''; // Fixes IE and Edge displaying `null`\n        }\n        if (!column.hasOwnProperty('resizeable')) {\n            column.resizeable = true;\n        }\n        if (!column.hasOwnProperty('sortable')) {\n            column.sortable = true;\n        }\n        if (!column.hasOwnProperty('draggable')) {\n            column.draggable = true;\n        }\n        if (!column.hasOwnProperty('canAutoResize')) {\n            column.canAutoResize = true;\n        }\n        if (!column.hasOwnProperty('width')) {\n            column.width = 150;\n        }\n        if (!column.hasOwnProperty('isTreeColumn')) {\n            column.isTreeColumn = false;\n        }\n        else {\n            if (column.isTreeColumn && !treeColumnFound) {\n                // If the first column with isTreeColumn is true found\n                // we mark that treeCoulmn is found\n                treeColumnFound = true;\n            }\n            else {\n                // After that isTreeColumn property for any other column\n                // will be set as false\n                column.isTreeColumn = false;\n            }\n        }\n    }\n}\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n */\nfunction translateTemplates(templates) {\n    const result = [];\n    for (const temp of templates) {\n        const col = {};\n        const props = Object.getOwnPropertyNames(temp);\n        for (const prop of props) {\n            col[prop] = temp[prop];\n        }\n        if (temp.headerTemplate) {\n            col.headerTemplate = temp.headerTemplate;\n        }\n        if (temp.cellTemplate) {\n            col.cellTemplate = temp.cellTemplate;\n        }\n        if (temp.summaryFunc) {\n            col.summaryFunc = temp.summaryFunc;\n        }\n        if (temp.summaryTemplate) {\n            col.summaryTemplate = temp.summaryTemplate;\n        }\n        result.push(col);\n    }\n    return result;\n}\n\nvar ColumnMode;\n(function (ColumnMode) {\n    ColumnMode[\"standard\"] = \"standard\";\n    ColumnMode[\"flex\"] = \"flex\";\n    ColumnMode[\"force\"] = \"force\";\n})(ColumnMode || (ColumnMode = {}));\n\nvar SelectionType;\n(function (SelectionType) {\n    SelectionType[\"single\"] = \"single\";\n    SelectionType[\"multi\"] = \"multi\";\n    SelectionType[\"multiClick\"] = \"multiClick\";\n    SelectionType[\"cell\"] = \"cell\";\n    SelectionType[\"checkbox\"] = \"checkbox\";\n})(SelectionType || (SelectionType = {}));\n\nvar SortType;\n(function (SortType) {\n    SortType[\"single\"] = \"single\";\n    SortType[\"multi\"] = \"multi\";\n})(SortType || (SortType = {}));\n\nvar ContextmenuType;\n(function (ContextmenuType) {\n    ContextmenuType[\"header\"] = \"header\";\n    ContextmenuType[\"body\"] = \"body\";\n})(ContextmenuType || (ContextmenuType = {}));\n\nclass DataTableColumnHeaderDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataTableColumnHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableColumnHeaderDirective, selector: \"[ngx-datatable-header-template]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnHeaderDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-datatable-header-template]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass DataTableColumnCellDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnCellDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataTableColumnCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableColumnCellDirective, selector: \"[ngx-datatable-cell-template]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnCellDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-datatable-cell-template]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass DataTableColumnCellTreeToggle {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellTreeToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnCellTreeToggle, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataTableColumnCellTreeToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableColumnCellTreeToggle, selector: \"[ngx-datatable-tree-toggle]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnCellTreeToggle, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-datatable-tree-toggle]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass DataTableColumnDirective {\n    constructor(columnChangesService) {\n        this.columnChangesService = columnChangesService;\n        this.isFirstChange = true;\n    }\n    get cellTemplate() {\n        return this._cellTemplateInput || this._cellTemplateQuery;\n    }\n    get headerTemplate() {\n        return this._headerTemplateInput || this._headerTemplateQuery;\n    }\n    get treeToggleTemplate() {\n        return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n    }\n    ngOnChanges() {\n        if (this.isFirstChange) {\n            this.isFirstChange = false;\n        }\n        else {\n            this.columnChangesService.onInputChange();\n        }\n    }\n}\nDataTableColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnDirective, deps: [{ token: ColumnChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nDataTableColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableColumnDirective, selector: \"ngx-datatable-column\", inputs: { name: \"name\", prop: \"prop\", frozenLeft: \"frozenLeft\", frozenRight: \"frozenRight\", flexGrow: \"flexGrow\", resizeable: \"resizeable\", comparator: \"comparator\", pipe: \"pipe\", sortable: \"sortable\", draggable: \"draggable\", canAutoResize: \"canAutoResize\", minWidth: \"minWidth\", width: \"width\", maxWidth: \"maxWidth\", checkboxable: \"checkboxable\", headerCheckboxable: \"headerCheckboxable\", headerClass: \"headerClass\", cellClass: \"cellClass\", isTreeColumn: \"isTreeColumn\", treeLevelIndent: \"treeLevelIndent\", summaryFunc: \"summaryFunc\", summaryTemplate: \"summaryTemplate\", _cellTemplateInput: [\"cellTemplate\", \"_cellTemplateInput\"], _headerTemplateInput: [\"headerTemplate\", \"_headerTemplateInput\"], _treeToggleTemplateInput: [\"treeToggleTemplate\", \"_treeToggleTemplateInput\"] }, queries: [{ propertyName: \"_cellTemplateQuery\", first: true, predicate: DataTableColumnCellDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: \"_headerTemplateQuery\", first: true, predicate: DataTableColumnHeaderDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: \"_treeToggleTemplateQuery\", first: true, predicate: DataTableColumnCellTreeToggle, descendants: true, read: TemplateRef, static: true }], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableColumnDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngx-datatable-column' }]\n        }], ctorParameters: function () { return [{ type: ColumnChangesService }]; }, propDecorators: { name: [{\n                type: Input\n            }], prop: [{\n                type: Input\n            }], frozenLeft: [{\n                type: Input\n            }], frozenRight: [{\n                type: Input\n            }], flexGrow: [{\n                type: Input\n            }], resizeable: [{\n                type: Input\n            }], comparator: [{\n                type: Input\n            }], pipe: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], draggable: [{\n                type: Input\n            }], canAutoResize: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], maxWidth: [{\n                type: Input\n            }], checkboxable: [{\n                type: Input\n            }], headerCheckboxable: [{\n                type: Input\n            }], headerClass: [{\n                type: Input\n            }], cellClass: [{\n                type: Input\n            }], isTreeColumn: [{\n                type: Input\n            }], treeLevelIndent: [{\n                type: Input\n            }], summaryFunc: [{\n                type: Input\n            }], summaryTemplate: [{\n                type: Input\n            }], _cellTemplateInput: [{\n                type: Input,\n                args: ['cellTemplate']\n            }], _cellTemplateQuery: [{\n                type: ContentChild,\n                args: [DataTableColumnCellDirective, { read: TemplateRef, static: true }]\n            }], _headerTemplateInput: [{\n                type: Input,\n                args: ['headerTemplate']\n            }], _headerTemplateQuery: [{\n                type: ContentChild,\n                args: [DataTableColumnHeaderDirective, { read: TemplateRef, static: true }]\n            }], _treeToggleTemplateInput: [{\n                type: Input,\n                args: ['treeToggleTemplate']\n            }], _treeToggleTemplateQuery: [{\n                type: ContentChild,\n                args: [DataTableColumnCellTreeToggle, { read: TemplateRef, static: true }]\n            }] } });\n\nclass DatatableRowDetailTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableRowDetailTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableRowDetailTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDatatableRowDetailTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableRowDetailTemplateDirective, selector: \"[ngx-datatable-row-detail-template]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableRowDetailTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngx-datatable-row-detail-template]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass DatatableRowDetailDirective {\n    constructor() {\n        /**\n         * The detail row height is required especially\n         * when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Row detail row visbility was toggled.\n         */\n        this.toggle = new EventEmitter();\n    }\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of the row\n     */\n    toggleExpandRow(row) {\n        this.toggle.emit({\n            type: 'row',\n            value: row\n        });\n    }\n    /**\n     * API method to expand all the rows.\n     */\n    expandAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * API method to collapse all the rows.\n     */\n    collapseAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableRowDetailDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableRowDetailDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDatatableRowDetailDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableRowDetailDirective, selector: \"ngx-datatable-row-detail\", inputs: { rowHeight: \"rowHeight\", _templateInput: [\"template\", \"_templateInput\"] }, outputs: { toggle: \"toggle\" }, queries: [{ propertyName: \"_templateQuery\", first: true, predicate: DatatableRowDetailTemplateDirective, descendants: true, read: TemplateRef, static: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableRowDetailDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngx-datatable-row-detail' }]\n        }], propDecorators: { rowHeight: [{\n                type: Input\n            }], _templateInput: [{\n                type: Input,\n                args: ['template']\n            }], _templateQuery: [{\n                type: ContentChild,\n                args: [DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true }]\n            }], toggle: [{\n                type: Output\n            }] } });\n\nclass DatatableFooterDirective {\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n}\nDatatableFooterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableFooterDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDatatableFooterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableFooterDirective, selector: \"ngx-datatable-footer\", inputs: { footerHeight: \"footerHeight\", totalMessage: \"totalMessage\", selectedMessage: \"selectedMessage\", pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\", _templateInput: [\"template\", \"_templateInput\"] }, queries: [{ propertyName: \"_templateQuery\", first: true, predicate: DataTableFooterTemplateDirective, descendants: true, read: TemplateRef }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableFooterDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngx-datatable-footer' }]\n        }], propDecorators: { footerHeight: [{\n                type: Input\n            }], totalMessage: [{\n                type: Input\n            }], selectedMessage: [{\n                type: Input\n            }], pagerLeftArrowIcon: [{\n                type: Input\n            }], pagerRightArrowIcon: [{\n                type: Input\n            }], pagerPreviousIcon: [{\n                type: Input\n            }], pagerNextIcon: [{\n                type: Input\n            }], _templateInput: [{\n                type: Input,\n                args: ['template']\n            }], _templateQuery: [{\n                type: ContentChild,\n                args: [DataTableFooterTemplateDirective, { read: TemplateRef }]\n            }] } });\n\n/**\n * Returns the columns by pin.\n */\nfunction columnsByPin(cols) {\n    const ret = {\n        left: [],\n        center: [],\n        right: []\n    };\n    if (cols) {\n        for (const col of cols) {\n            if (col.frozenLeft) {\n                ret.left.push(col);\n            }\n            else if (col.frozenRight) {\n                ret.right.push(col);\n            }\n            else {\n                ret.center.push(col);\n            }\n        }\n    }\n    return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n */\nfunction columnGroupWidths(groups, all) {\n    return {\n        left: columnTotalWidth(groups.left),\n        center: columnTotalWidth(groups.center),\n        right: columnTotalWidth(groups.right),\n        total: Math.floor(columnTotalWidth(all))\n    };\n}\n/**\n * Calculates the total width of all columns and their groups\n */\nfunction columnTotalWidth(columns, prop) {\n    let totalWidth = 0;\n    if (columns) {\n        for (const c of columns) {\n            const has = prop && c[prop];\n            const width = has ? c[prop] : c.width;\n            totalWidth = totalWidth + parseFloat(width);\n        }\n    }\n    return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n */\nfunction columnsTotalWidth(columns, prop) {\n    let totalWidth = 0;\n    for (const column of columns) {\n        const has = prop && column[prop];\n        totalWidth = totalWidth + (has ? column[prop] : column.width);\n    }\n    return totalWidth;\n}\nfunction columnsByPinArr(val) {\n    const colsByPinArr = [];\n    const colsByPin = columnsByPin(val);\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n    return colsByPinArr;\n}\n\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nclass RowHeightCache {\n    constructor() {\n        /**\n         * Tree Array stores the cumulative information of the row heights to perform efficient\n         * range queries and updates.  Currently the tree is initialized to the base row\n         * height instead of the detail row height.\n         */\n        this.treeArray = [];\n    }\n    /**\n     * Clear the Tree array.\n     */\n    clearCache() {\n        this.treeArray = [];\n    }\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param rows The array of rows which contain the expanded status.\n     * @param rowHeight The row height.\n     * @param detailRowHeight The detail row height.\n     */\n    initCache(details) {\n        const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n        const isFn = typeof rowHeight === 'function';\n        const isDetailFn = typeof detailRowHeight === 'function';\n        if (!isFn && isNaN(rowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n        if (!isDetailFn && isNaN(detailRowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        const n = externalVirtual ? rowCount : rows.length;\n        this.treeArray = new Array(n);\n        for (let i = 0; i < n; ++i) {\n            this.treeArray[i] = 0;\n        }\n        for (let i = 0; i < n; ++i) {\n            const row = rows[i];\n            let currentRowHeight = rowHeight;\n            if (isFn) {\n                currentRowHeight = rowHeight(row);\n            }\n            // Add the detail row height to the already expanded rows.\n            // This is useful for the table that goes through a filter or sort.\n            const expanded = rowExpansions.has(row);\n            if (row && expanded) {\n                if (isDetailFn) {\n                    const index = rowIndexes.get(row);\n                    currentRowHeight += detailRowHeight(row, index);\n                }\n                else {\n                    currentRowHeight += detailRowHeight;\n                }\n            }\n            this.update(i, currentRowHeight);\n        }\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     */\n    getRowIndex(scrollY) {\n        if (scrollY === 0)\n            return 0;\n        return this.calcRowIndex(scrollY);\n    }\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     */\n    update(atRowIndex, byRowHeight) {\n        if (!this.treeArray.length) {\n            throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n        }\n        const n = this.treeArray.length;\n        atRowIndex |= 0;\n        while (atRowIndex < n) {\n            this.treeArray[atRowIndex] += byRowHeight;\n            atRowIndex |= atRowIndex + 1;\n        }\n    }\n    /**\n     * Range Sum query from 1 to the rowIndex\n     */\n    query(atIndex) {\n        if (!this.treeArray.length) {\n            throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n        }\n        let sum = 0;\n        atIndex |= 0;\n        while (atIndex >= 0) {\n            sum += this.treeArray[atIndex];\n            atIndex = (atIndex & (atIndex + 1)) - 1;\n        }\n        return sum;\n    }\n    /**\n     * Find the total height between 2 row indexes\n     */\n    queryBetween(atIndexA, atIndexB) {\n        return this.query(atIndexB) - this.query(atIndexA - 1);\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     */\n    calcRowIndex(sum) {\n        if (!this.treeArray.length)\n            return 0;\n        let pos = -1;\n        const dataLength = this.treeArray.length;\n        // Get the highest bit for the block size.\n        const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n        for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n            const nextPos = pos + blockSize;\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n                sum -= this.treeArray[nextPos];\n                pos = nextPos;\n            }\n        }\n        return pos + 1;\n    }\n}\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n    const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n    const match = typeof styles !== 'undefined'\n        ? Array.prototype.slice\n            .call(styles)\n            .join('')\n            .match(/-(moz|webkit|ms)-/)\n        : null;\n    const pre = match !== null ? match[1] : undefined;\n    // tslint:disable-next-line: tsr-detect-non-literal-regexp\n    const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n    return dom\n        ? {\n            dom,\n            lowercase: pre,\n            css: `-${pre}-`,\n            js: pre[0].toUpperCase() + pre.substr(1)\n        }\n        : undefined;\n})();\nfunction getVendorPrefixedName(property) {\n    const name = camelCase(property);\n    if (!cache[name]) {\n        if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n            cache[name] = prefix.css + property;\n        }\n        else if (testStyle[property] !== undefined) {\n            cache[name] = property;\n        }\n    }\n    return cache[name];\n}\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\nfunction translateXY(styles, x, y) {\n    if (typeof transform !== 'undefined' && hasCSSTransforms) {\n        if (!isSafari && hasCSS3DTransforms) {\n            styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n            styles[backfaceVisibility] = 'hidden';\n        }\n        else {\n            styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n        }\n    }\n    else {\n        styles.top = `${y}px`;\n        styles.left = `${x}px`;\n    }\n}\n\nclass ProgressBarComponent {\n}\nProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ProgressBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ProgressBarComponent, selector: \"datatable-progress\", ngImport: i0, template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ProgressBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-progress',\n                    template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }] });\n\nfunction selectRows(selected, row, comparefn) {\n    const selectedIndex = comparefn(row, selected);\n    if (selectedIndex > -1) {\n        selected.splice(selectedIndex, 1);\n    }\n    else {\n        selected.push(row);\n    }\n    return selected;\n}\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n    const reverse = index < prevIndex;\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        const greater = i >= prevIndex && i <= index;\n        const lesser = i <= prevIndex && i >= index;\n        let range = { start: 0, end: 0 };\n        if (reverse) {\n            range = {\n                start: index,\n                end: prevIndex\n            };\n        }\n        else {\n            range = {\n                start: prevIndex,\n                end: index + 1\n            };\n        }\n        if ((reverse && lesser) || (!reverse && greater)) {\n            // if in the positive range to be added to `selected`, and\n            // not already in the selected array, add it\n            if (i >= range.start && i <= range.end) {\n                selected.push(row);\n            }\n        }\n    }\n    return selected;\n}\n\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"up\"] = 38] = \"up\";\n    Keys[Keys[\"down\"] = 40] = \"down\";\n    Keys[Keys[\"return\"] = 13] = \"return\";\n    Keys[Keys[\"escape\"] = 27] = \"escape\";\n    Keys[Keys[\"left\"] = 37] = \"left\";\n    Keys[Keys[\"right\"] = 39] = \"right\";\n})(Keys || (Keys = {}));\n\nclass DataTableSelectionComponent {\n    constructor() {\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    selectRow(event, index, row) {\n        if (!this.selectEnabled)\n            return;\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        const multi = this.selectionType === SelectionType.multi;\n        const multiClick = this.selectionType === SelectionType.multiClick;\n        let selected = [];\n        if (multi || chkbox || multiClick) {\n            if (event.shiftKey) {\n                selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n            }\n            else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n                selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n            }\n            else {\n                selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n            }\n        }\n        else {\n            selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n        }\n        if (typeof this.selectCheck === 'function') {\n            selected = selected.filter(this.selectCheck.bind(this));\n        }\n        this.selected.splice(0, this.selected.length);\n        this.selected.push(...selected);\n        this.prevIndex = index;\n        this.select.emit({\n            selected\n        });\n    }\n    onActivate(model, index) {\n        const { type, event, row } = model;\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n        if (select) {\n            this.selectRow(event, index, row);\n        }\n        else if (type === 'keydown') {\n            if (event.keyCode === Keys.return) {\n                this.selectRow(event, index, row);\n            }\n            else {\n                this.onKeyboardFocus(model);\n            }\n        }\n        this.activate.emit(model);\n    }\n    onKeyboardFocus(model) {\n        const { keyCode } = model.event;\n        const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n        if (shouldFocus) {\n            const isCellSelection = this.selectionType === SelectionType.cell;\n            if (!model.cellElement || !isCellSelection) {\n                this.focusRow(model.rowElement, keyCode);\n            }\n            else if (isCellSelection) {\n                this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n            }\n        }\n    }\n    focusRow(rowElement, keyCode) {\n        const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n        if (nextRowElement)\n            nextRowElement.focus();\n    }\n    getPrevNextRow(rowElement, keyCode) {\n        const parentElement = rowElement.parentElement;\n        if (parentElement) {\n            let focusElement;\n            if (keyCode === Keys.up) {\n                focusElement = parentElement.previousElementSibling;\n            }\n            else if (keyCode === Keys.down) {\n                focusElement = parentElement.nextElementSibling;\n            }\n            if (focusElement && focusElement.children.length) {\n                return focusElement.children[0];\n            }\n        }\n    }\n    focusCell(cellElement, rowElement, keyCode, cellIndex) {\n        let nextCellElement;\n        if (keyCode === Keys.left) {\n            nextCellElement = cellElement.previousElementSibling;\n        }\n        else if (keyCode === Keys.right) {\n            nextCellElement = cellElement.nextElementSibling;\n        }\n        else if (keyCode === Keys.up || keyCode === Keys.down) {\n            const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n            if (nextRowElement) {\n                const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n                if (children.length)\n                    nextCellElement = children[cellIndex];\n            }\n        }\n        if (nextCellElement)\n            nextCellElement.focus();\n    }\n    getRowSelected(row) {\n        return this.getRowSelectedIdx(row, this.selected) > -1;\n    }\n    getRowSelectedIdx(row, selected) {\n        if (!selected || !selected.length)\n            return -1;\n        const rowId = this.rowIdentity(row);\n        return selected.findIndex(r => {\n            const id = this.rowIdentity(r);\n            return id === rowId;\n        });\n    }\n}\nDataTableSelectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableSelectionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDataTableSelectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableSelectionComponent, selector: \"datatable-selection\", inputs: { rows: \"rows\", selected: \"selected\", selectEnabled: \"selectEnabled\", selectionType: \"selectionType\", rowIdentity: \"rowIdentity\", selectCheck: \"selectCheck\" }, outputs: { activate: \"activate\", select: \"select\" }, ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableSelectionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-selection',\n                    template: ` <ng-content></ng-content> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { rows: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectEnabled: [{\n                type: Input\n            }], selectionType: [{\n                type: Input\n            }], rowIdentity: [{\n                type: Input\n            }], selectCheck: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }] } });\n\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[\"asc\"] = \"asc\";\n    SortDirection[\"desc\"] = \"desc\";\n})(SortDirection || (SortDirection = {}));\n\nclass DataTableBodyCellComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.cellContext = {\n            onCheckboxChangeFn: this.onCheckboxChangeFn,\n            activateFn: this.activateFn,\n            row: this.row,\n            group: this.group,\n            value: this.value,\n            column: this.column,\n            rowHeight: this.rowHeight,\n            isSelected: this.isSelected,\n            rowIndex: this.rowIndex,\n            treeStatus: this.treeStatus,\n            onTreeAction: this.onTreeAction.bind(this)\n        };\n        this._element = element.nativeElement;\n    }\n    set group(group) {\n        this._group = group;\n        this.cellContext.group = group;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get group() {\n        return this._group;\n    }\n    set rowHeight(val) {\n        this._rowHeight = val;\n        this.cellContext.rowHeight = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    set isSelected(val) {\n        this._isSelected = val;\n        this.cellContext.isSelected = val;\n        this.cd.markForCheck();\n    }\n    get isSelected() {\n        return this._isSelected;\n    }\n    set expanded(val) {\n        this._expanded = val;\n        this.cellContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    get expanded() {\n        return this._expanded;\n    }\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.cellContext.rowIndex = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get column() {\n        return this._column;\n    }\n    set row(row) {\n        this._row = row;\n        this.cellContext.row = row;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get row() {\n        return this._row;\n    }\n    set sorts(val) {\n        this._sorts = val;\n        this.calcSortDir = this.calcSortDir(val);\n    }\n    get sorts() {\n        return this._sorts;\n    }\n    set treeStatus(status) {\n        if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n            this._treeStatus = 'collapsed';\n        }\n        else {\n            this._treeStatus = status;\n        }\n        this.cellContext.treeStatus = this._treeStatus;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    get treeStatus() {\n        return this._treeStatus;\n    }\n    get columnCssClasses() {\n        let cls = 'datatable-body-cell';\n        if (this.column.cellClass) {\n            if (typeof this.column.cellClass === 'string') {\n                cls += ' ' + this.column.cellClass;\n            }\n            else if (typeof this.column.cellClass === 'function') {\n                const res = this.column.cellClass({\n                    row: this.row,\n                    group: this.group,\n                    column: this.column,\n                    value: this.value,\n                    rowHeight: this.rowHeight\n                });\n                if (typeof res === 'string') {\n                    cls += ' ' + res;\n                }\n                else if (typeof res === 'object') {\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true) {\n                            cls += ` ${k}`;\n                        }\n                    }\n                }\n            }\n        }\n        if (!this.sortDir) {\n            cls += ' sort-active';\n        }\n        if (this.isFocused) {\n            cls += ' active';\n        }\n        if (this.sortDir === SortDirection.asc) {\n            cls += ' sort-asc';\n        }\n        if (this.sortDir === SortDirection.desc) {\n            cls += ' sort-desc';\n        }\n        return cls;\n    }\n    get width() {\n        return this.column.width;\n    }\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    get height() {\n        const height = this.rowHeight;\n        if (isNaN(height)) {\n            return height;\n        }\n        return height + 'px';\n    }\n    ngDoCheck() {\n        this.checkValueUpdates();\n    }\n    ngOnDestroy() {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    }\n    checkValueUpdates() {\n        let value = '';\n        if (!this.row || !this.column) {\n            value = '';\n        }\n        else {\n            const val = this.column.$$valueGetter(this.row, this.column.prop);\n            const userPipe = this.column.pipe;\n            if (userPipe) {\n                value = userPipe.transform(val);\n            }\n            else if (value !== undefined) {\n                value = val;\n            }\n        }\n        if (this.value !== value) {\n            this.value = value;\n            this.cellContext.value = value;\n            this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n            this.cd.markForCheck();\n        }\n    }\n    onFocus() {\n        this.isFocused = true;\n    }\n    onBlur() {\n        this.isFocused = false;\n    }\n    onClick(event) {\n        this.activate.emit({\n            type: 'click',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    onDblClick(event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    onKeyDown(event) {\n        const keyCode = event.keyCode;\n        const isTargetCell = event.target === this._element;\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                group: this.group,\n                rowHeight: this.rowHeight,\n                column: this.column,\n                value: this.value,\n                cellElement: this._element\n            });\n        }\n    }\n    onCheckboxChange(event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element,\n            treeStatus: 'collapsed'\n        });\n    }\n    calcSortDir(sorts) {\n        if (!sorts) {\n            return;\n        }\n        const sort = sorts.find((s) => {\n            return s.prop === this.column.prop;\n        });\n        if (sort) {\n            return sort.dir;\n        }\n    }\n    stripHtml(html) {\n        if (!html.replace) {\n            return html;\n        }\n        return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    }\n    onTreeAction() {\n        this.treeAction.emit(this.row);\n    }\n    calcLeftMargin(column, row) {\n        const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n        return column.isTreeColumn ? row.level * levelIndent : 0;\n    }\n}\nDataTableBodyCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyCellComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nDataTableBodyCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableBodyCellComponent, selector: \"datatable-body-cell\", inputs: { displayCheck: \"displayCheck\", group: \"group\", rowHeight: \"rowHeight\", isSelected: \"isSelected\", expanded: \"expanded\", rowIndex: \"rowIndex\", column: \"column\", row: \"row\", sorts: \"sorts\", treeStatus: \"treeStatus\" }, outputs: { activate: \"activate\", treeAction: \"treeAction\" }, host: { listeners: { \"focus\": \"onFocus()\", \"blur\": \"onBlur()\", \"click\": \"onClick($event)\", \"dblclick\": \"onDblClick($event)\", \"keydown\": \"onKeyDown($event)\" }, properties: { \"class\": \"this.columnCssClasses\", \"style.width.px\": \"this.width\", \"style.minWidth.px\": \"this.minWidth\", \"style.maxWidth.px\": \"this.maxWidth\", \"style.height\": \"this.height\" } }, viewQueries: [{ propertyName: \"cellTemplate\", first: true, predicate: [\"cellTemplate\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-body-cell',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { displayCheck: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], isSelected: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], rowIndex: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], sorts: [{\n                type: Input\n            }], treeStatus: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], treeAction: [{\n                type: Output\n            }], cellTemplate: [{\n                type: ViewChild,\n                args: ['cellTemplate', { read: ViewContainerRef, static: true }]\n            }], columnCssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], width: [{\n                type: HostBinding,\n                args: ['style.width.px']\n            }], minWidth: [{\n                type: HostBinding,\n                args: ['style.minWidth.px']\n            }], maxWidth: [{\n                type: HostBinding,\n                args: ['style.maxWidth.px']\n            }], height: [{\n                type: HostBinding,\n                args: ['style.height']\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focus']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onDblClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nclass DataTableBodyRowComponent {\n    constructor(differs, scrollbarHelper, cd, element) {\n        this.differs = differs;\n        this.scrollbarHelper = scrollbarHelper;\n        this.cd = cd;\n        this.treeStatus = 'collapsed';\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this._groupStyles = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this._element = element.nativeElement;\n        this._rowDiffer = differs.find({}).create();\n    }\n    set columns(val) {\n        this._columns = val;\n        this.recalculateColumns(val);\n        this.buildStylesByGroup();\n    }\n    get columns() {\n        return this._columns;\n    }\n    set innerWidth(val) {\n        if (this._columns) {\n            const colByPin = columnsByPin(this._columns);\n            this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        }\n        this._innerWidth = val;\n        this.recalculateColumns();\n        this.buildStylesByGroup();\n    }\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    set offsetX(val) {\n        this._offsetX = val;\n        this.buildStylesByGroup();\n    }\n    get offsetX() {\n        return this._offsetX;\n    }\n    get cssClass() {\n        let cls = 'datatable-body-row';\n        if (this.isSelected) {\n            cls += ' active';\n        }\n        if (this.rowIndex % 2 !== 0) {\n            cls += ' datatable-row-odd';\n        }\n        if (this.rowIndex % 2 === 0) {\n            cls += ' datatable-row-even';\n        }\n        if (this.rowClass) {\n            const res = this.rowClass(this.row);\n            if (typeof res === 'string') {\n                cls += ` ${res}`;\n            }\n            else if (typeof res === 'object') {\n                const keys = Object.keys(res);\n                for (const k of keys) {\n                    if (res[k] === true) {\n                        cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        return cls;\n    }\n    get columnsTotalWidths() {\n        return this._columnGroupWidths.total;\n    }\n    ngDoCheck() {\n        if (this._rowDiffer.diff(this.row)) {\n            this.cd.markForCheck();\n        }\n    }\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    buildStylesByGroup() {\n        this._groupStyles.left = this.calcStylesByGroup('left');\n        this._groupStyles.center = this.calcStylesByGroup('center');\n        this._groupStyles.right = this.calcStylesByGroup('right');\n        this.cd.markForCheck();\n    }\n    calcStylesByGroup(group) {\n        const widths = this._columnGroupWidths;\n        const offsetX = this.offsetX;\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            const totalDiff = widths.total - bodyWidth;\n            const offsetDiff = totalDiff - offsetX;\n            const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    onActivate(event, index) {\n        event.cellIndex = index;\n        event.rowElement = this._element;\n        this.activate.emit(event);\n    }\n    onKeyDown(event) {\n        const keyCode = event.keyCode;\n        const isTargetRow = event.target === this._element;\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetRow) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                rowElement: this._element\n            });\n        }\n    }\n    onMouseenter(event) {\n        this.activate.emit({\n            type: 'mouseenter',\n            event,\n            row: this.row,\n            rowElement: this._element\n        });\n    }\n    recalculateColumns(val = this.columns) {\n        this._columns = val;\n        const colsByPin = columnsByPin(this._columns);\n        this._columnsByPin = columnsByPinArr(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n    }\n    onTreeAction() {\n        this.treeAction.emit();\n    }\n}\nDataTableBodyRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyRowComponent, deps: [{ token: i0.KeyValueDiffers }, { token: ScrollbarHelper, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nDataTableBodyRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableBodyRowComponent, selector: \"datatable-body-row\", inputs: { columns: \"columns\", innerWidth: \"innerWidth\", expanded: \"expanded\", rowClass: \"rowClass\", row: \"row\", group: \"group\", isSelected: \"isSelected\", rowIndex: \"rowIndex\", displayCheck: \"displayCheck\", treeStatus: \"treeStatus\", offsetX: \"offsetX\", rowHeight: \"rowHeight\" }, outputs: { activate: \"activate\", treeAction: \"treeAction\" }, host: { listeners: { \"keydown\": \"onKeyDown($event)\", \"mouseenter\": \"onMouseenter($event)\" }, properties: { \"class\": \"this.cssClass\", \"style.height.px\": \"this.rowHeight\", \"style.width.px\": \"this.columnsTotalWidths\" } }, ngImport: i0, template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `, isInline: true, components: [{ type: DataTableBodyCellComponent, selector: \"datatable-body-cell\", inputs: [\"displayCheck\", \"group\", \"rowHeight\", \"isSelected\", \"expanded\", \"rowIndex\", \"column\", \"row\", \"sorts\", \"treeStatus\"], outputs: [\"activate\", \"treeAction\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-body-row',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: ScrollbarHelper, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { columns: [{\n                type: Input\n            }], innerWidth: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], isSelected: [{\n                type: Input\n            }], rowIndex: [{\n                type: Input\n            }], displayCheck: [{\n                type: Input\n            }], treeStatus: [{\n                type: Input\n            }], offsetX: [{\n                type: Input\n            }], cssClass: [{\n                type: HostBinding,\n                args: ['class']\n            }], rowHeight: [{\n                type: HostBinding,\n                args: ['style.height.px']\n            }, {\n                type: Input\n            }], columnsTotalWidths: [{\n                type: HostBinding,\n                args: ['style.width.px']\n            }], activate: [{\n                type: Output\n            }], treeAction: [{\n                type: Output\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], onMouseenter: [{\n                type: HostListener,\n                args: ['mouseenter', ['$event']]\n            }] } });\n\nfunction defaultSumFunc(cells) {\n    const cellsWithValues = cells.filter(cell => !!cell);\n    if (!cellsWithValues.length) {\n        return null;\n    }\n    if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n        return null;\n    }\n    return cellsWithValues.reduce((res, cell) => res + cell);\n}\nfunction noopSumFunc(cells) {\n    return null;\n}\nclass DataTableSummaryRowComponent {\n    constructor() {\n        this.summaryRow = {};\n    }\n    ngOnChanges() {\n        if (!this.columns || !this.rows) {\n            return;\n        }\n        this.updateInternalColumns();\n        this.updateValues();\n    }\n    updateInternalColumns() {\n        this._internalColumns = this.columns.map(col => ({\n            ...col,\n            cellTemplate: col.summaryTemplate\n        }));\n    }\n    updateValues() {\n        this.summaryRow = {};\n        this.columns\n            .filter(col => !col.summaryTemplate)\n            .forEach(col => {\n            const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n            const sumFunc = this.getSummaryFunction(col);\n            this.summaryRow[col.prop] = col.pipe\n                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n                : sumFunc(cellsFromSingleColumn);\n        });\n    }\n    getSummaryFunction(column) {\n        if (column.summaryFunc === undefined) {\n            return defaultSumFunc;\n        }\n        else if (column.summaryFunc === null) {\n            return noopSumFunc;\n        }\n        else {\n            return column.summaryFunc;\n        }\n    }\n}\nDataTableSummaryRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableSummaryRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDataTableSummaryRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableSummaryRowComponent, selector: \"datatable-summary-row\", inputs: { rows: \"rows\", columns: \"columns\", rowHeight: \"rowHeight\", offsetX: \"offsetX\", innerWidth: \"innerWidth\" }, host: { classAttribute: \"datatable-summary-row\" }, usesOnChanges: true, ngImport: i0, template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `, isInline: true, components: [{ type: DataTableBodyRowComponent, selector: \"datatable-body-row\", inputs: [\"columns\", \"innerWidth\", \"expanded\", \"rowClass\", \"row\", \"group\", \"isSelected\", \"rowIndex\", \"displayCheck\", \"treeStatus\", \"offsetX\", \"rowHeight\"], outputs: [\"activate\", \"treeAction\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableSummaryRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-summary-row',\n                    template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n                    host: {\n                        class: 'datatable-summary-row'\n                    }\n                }]\n        }], propDecorators: { rows: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], offsetX: [{\n                type: Input\n            }], innerWidth: [{\n                type: Input\n            }] } });\n\nclass DataTableRowWrapperComponent {\n    constructor(cd, differs) {\n        this.cd = cd;\n        this.differs = differs;\n        this.rowContextmenu = new EventEmitter(false);\n        this._expanded = false;\n        this.groupContext = {\n            group: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this.rowContext = {\n            row: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this.rowDiffer = differs.find({}).create();\n    }\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.rowContext.rowIndex = val;\n        this.groupContext.rowIndex = val;\n        this.cd.markForCheck();\n    }\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    set expanded(val) {\n        this._expanded = val;\n        this.groupContext.expanded = val;\n        this.rowContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    get expanded() {\n        return this._expanded;\n    }\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.row)) {\n            this.rowContext.row = this.row;\n            this.groupContext.group = this.row;\n            this.cd.markForCheck();\n        }\n    }\n    onContextmenu($event) {\n        this.rowContextmenu.emit({ event: $event, row: this.row });\n    }\n    getGroupHeaderStyle() {\n        const styles = {};\n        styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n        styles['backface-visibility'] = 'hidden';\n        styles['width'] = this.innerWidth;\n        return styles;\n    }\n}\nDataTableRowWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableRowWrapperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.KeyValueDiffers }], target: i0.ɵɵFactoryTarget.Component });\nDataTableRowWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableRowWrapperComponent, selector: \"datatable-row-wrapper\", inputs: { innerWidth: \"innerWidth\", rowDetail: \"rowDetail\", groupHeader: \"groupHeader\", offsetX: \"offsetX\", detailRowHeight: \"detailRowHeight\", row: \"row\", groupedRows: \"groupedRows\", rowIndex: \"rowIndex\", expanded: \"expanded\" }, outputs: { rowContextmenu: \"rowContextmenu\" }, host: { listeners: { \"contextmenu\": \"onContextmenu($event)\" }, classAttribute: \"datatable-row-wrapper\" }, ngImport: i0, template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableRowWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-row-wrapper',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n                    host: {\n                        class: 'datatable-row-wrapper'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.KeyValueDiffers }]; }, propDecorators: { innerWidth: [{\n                type: Input\n            }], rowDetail: [{\n                type: Input\n            }], groupHeader: [{\n                type: Input\n            }], offsetX: [{\n                type: Input\n            }], detailRowHeight: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], groupedRows: [{\n                type: Input\n            }], rowContextmenu: [{\n                type: Output\n            }], rowIndex: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], onContextmenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\n\nclass DataTableBodyComponent {\n    /**\n     * Creates an instance of DataTableBodyComponent.\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.selected = [];\n        this.scroll = new EventEmitter();\n        this.page = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n        this.detailToggle = new EventEmitter();\n        this.rowContextmenu = new EventEmitter(false);\n        this.treeAction = new EventEmitter();\n        this.rowHeightsCache = new RowHeightCache();\n        this.temp = [];\n        this.offsetY = 0;\n        this.indexes = {};\n        this.rowIndexes = new WeakMap();\n        this.rowExpansions = [];\n        /**\n         * Get the height of the detail row.\n         */\n        this.getDetailRowHeight = (row, index) => {\n            if (!this.rowDetail) {\n                return 0;\n            }\n            const rowHeight = this.rowDetail.rowHeight;\n            return typeof rowHeight === 'function' ? rowHeight(row, index) : rowHeight;\n        };\n        // declare fn here so we can get access to the `this` property\n        this.rowTrackingFn = (index, row) => {\n            const idx = this.getRowIndex(row);\n            if (this.trackByProp) {\n                return row[this.trackByProp];\n            }\n            else {\n                return idx;\n            }\n        };\n    }\n    set pageSize(val) {\n        this._pageSize = val;\n        this.recalcLayout();\n    }\n    get pageSize() {\n        return this._pageSize;\n    }\n    set rows(val) {\n        this._rows = val;\n        this.recalcLayout();\n    }\n    get rows() {\n        return this._rows;\n    }\n    set columns(val) {\n        this._columns = val;\n        const colsByPin = columnsByPin(val);\n        this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n    }\n    get columns() {\n        return this._columns;\n    }\n    set offset(val) {\n        this._offset = val;\n        if (!this.scrollbarV || (this.scrollbarV && !this.virtualization))\n            this.recalcLayout();\n    }\n    get offset() {\n        return this._offset;\n    }\n    set rowCount(val) {\n        this._rowCount = val;\n        this.recalcLayout();\n    }\n    get rowCount() {\n        return this._rowCount;\n    }\n    get bodyWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        else {\n            return '100%';\n        }\n    }\n    set bodyHeight(val) {\n        if (this.scrollbarV) {\n            this._bodyHeight = val + 'px';\n        }\n        else {\n            this._bodyHeight = 'auto';\n        }\n        this.recalcLayout();\n    }\n    get bodyHeight() {\n        return this._bodyHeight;\n    }\n    /**\n     * Returns if selection is enabled.\n     */\n    get selectEnabled() {\n        return !!this.selectionType;\n    }\n    /**\n     * Property that would calculate the height of scroll bar\n     * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n     * calculate scroll height automatically (as height will be undefined).\n     */\n    get scrollHeight() {\n        if (this.scrollbarV && this.virtualization && this.rowCount) {\n            return this.rowHeightsCache.query(this.rowCount - 1);\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n    /**\n     * Called after the constructor, initializing input properties\n     */\n    ngOnInit() {\n        if (this.rowDetail) {\n            this.listener = this.rowDetail.toggle.subscribe(({ type, value }) => {\n                if (type === 'row') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            });\n        }\n        if (this.groupHeader) {\n            this.listener = this.groupHeader.toggle.subscribe(({ type, value }) => {\n                if (type === 'group') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            });\n        }\n    }\n    /**\n     * Called once, before the instance is destroyed.\n     */\n    ngOnDestroy() {\n        if (this.rowDetail || this.groupHeader) {\n            this.listener.unsubscribe();\n        }\n    }\n    /**\n     * Updates the Y offset given a new offset.\n     */\n    updateOffsetY(offset) {\n        // scroller is missing on empty table\n        if (!this.scroller) {\n            return;\n        }\n        if (this.scrollbarV && this.virtualization && offset) {\n            // First get the row Index that we need to move to.\n            const rowIndex = this.pageSize * offset;\n            offset = this.rowHeightsCache.query(rowIndex - 1);\n        }\n        else if (this.scrollbarV && !this.virtualization) {\n            offset = 0;\n        }\n        this.scroller.setOffset(offset || 0);\n    }\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     */\n    onBodyScroll(event) {\n        const scrollYPos = event.scrollYPos;\n        const scrollXPos = event.scrollXPos;\n        // if scroll change, trigger update\n        // this is mainly used for header cell positions\n        if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n            this.scroll.emit({\n                offsetY: scrollYPos,\n                offsetX: scrollXPos\n            });\n        }\n        this.offsetY = scrollYPos;\n        this.offsetX = scrollXPos;\n        this.updateIndexes();\n        this.updatePage(event.direction);\n        this.updateRows();\n    }\n    /**\n     * Updates the page given a direction.\n     */\n    updatePage(direction) {\n        let offset = this.indexes.first / this.pageSize;\n        if (direction === 'up') {\n            offset = Math.ceil(offset);\n        }\n        else if (direction === 'down') {\n            offset = Math.floor(offset);\n        }\n        if (direction !== undefined && !isNaN(offset)) {\n            this.page.emit({ offset });\n        }\n    }\n    /**\n     * Updates the rows in the view port\n     */\n    updateRows() {\n        const { first, last } = this.indexes;\n        let rowIndex = first;\n        let idx = 0;\n        const temp = [];\n        // if grouprowsby has been specified treat row paging\n        // parameters as group paging parameters ie if limit 10 has been\n        // specified treat it as 10 groups rather than 10 rows\n        if (this.groupedRows) {\n            let maxRowsPerGroup = 3;\n            // if there is only one group set the maximum number of\n            // rows per group the same as the total number of rows\n            if (this.groupedRows.length === 1) {\n                maxRowsPerGroup = this.groupedRows[0].value.length;\n            }\n            while (rowIndex < last && rowIndex < this.groupedRows.length) {\n                // Add the groups into this page\n                const group = this.groupedRows[rowIndex];\n                this.rowIndexes.set(group, rowIndex);\n                if (group.value) {\n                    // add indexes for each group item\n                    group.value.forEach((g, i) => {\n                        const _idx = `${rowIndex}-${i}`;\n                        this.rowIndexes.set(g, _idx);\n                    });\n                }\n                temp[idx] = group;\n                idx++;\n                // Group index in this context\n                rowIndex++;\n            }\n        }\n        else {\n            while (rowIndex < last && rowIndex < this.rowCount) {\n                const row = this.rows[rowIndex];\n                if (row) {\n                    // add indexes for each row\n                    this.rowIndexes.set(row, rowIndex);\n                    temp[idx] = row;\n                }\n                idx++;\n                rowIndex++;\n            }\n        }\n        this.temp = temp;\n    }\n    /**\n     * Get the row height\n     */\n    getRowHeight(row) {\n        // if its a function return it\n        if (typeof this.rowHeight === 'function') {\n            return this.rowHeight(row);\n        }\n        return this.rowHeight;\n    }\n    /**\n     * @param group the group with all rows\n     */\n    getGroupHeight(group) {\n        let rowHeight = 0;\n        if (group.value) {\n            for (let index = 0; index < group.value.length; index++) {\n                rowHeight += this.getRowAndDetailHeight(group.value[index]);\n            }\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculate row height based on the expanded state of the row.\n     */\n    getRowAndDetailHeight(row) {\n        let rowHeight = this.getRowHeight(row);\n        const expanded = this.getRowExpanded(row);\n        // Adding detail row height if its expanded.\n        if (expanded) {\n            rowHeight += this.getDetailRowHeight(row);\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * @param rows the row that needs to be placed in the 2D space.\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n    getRowsStyles(rows) {\n        const styles = {};\n        // only add styles for the group if there is a group\n        if (this.groupedRows) {\n            styles.width = this.columnGroupWidths.total;\n        }\n        if (this.scrollbarV && this.virtualization) {\n            let idx = 0;\n            if (this.groupedRows) {\n                // Get the latest row rowindex in a group\n                const row = rows[rows.length - 1];\n                idx = row ? this.getRowIndex(row) : 0;\n            }\n            else {\n                idx = this.getRowIndex(rows);\n            }\n            // const pos = idx * rowHeight;\n            // The position of this row would be the sum of all row heights\n            // until the previous row position.\n            const pos = this.rowHeightsCache.query(idx - 1);\n            translateXY(styles, 0, pos);\n        }\n        return styles;\n    }\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n    getBottomSummaryRowStyles() {\n        if (!this.scrollbarV || !this.rows || !this.rows.length) {\n            return null;\n        }\n        const styles = { position: 'absolute' };\n        const pos = this.rowHeightsCache.query(this.rows.length - 1);\n        translateXY(styles, 0, pos);\n        return styles;\n    }\n    /**\n     * Hides the loading indicator\n     */\n    hideIndicator() {\n        setTimeout(() => (this.loadingIndicator = false), 500);\n    }\n    /**\n     * Updates the index of the rows in the viewport\n     */\n    updateIndexes() {\n        let first = 0;\n        let last = 0;\n        if (this.scrollbarV) {\n            if (this.virtualization) {\n                // Calculation of the first and last indexes will be based on where the\n                // scrollY position would be at.  The last index would be the one\n                // that shows up inside the view port the last.\n                const height = parseInt(this.bodyHeight, 0);\n                first = this.rowHeightsCache.getRowIndex(this.offsetY);\n                last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n            }\n            else {\n                // If virtual rows are not needed\n                // We render all in one go\n                first = 0;\n                last = this.rowCount;\n            }\n        }\n        else {\n            // The server is handling paging and will pass an array that begins with the\n            // element at a specified offset.  first should always be 0 with external paging.\n            if (!this.externalPaging) {\n                first = Math.max(this.offset * this.pageSize, 0);\n            }\n            last = Math.min(first + this.pageSize, this.rowCount);\n        }\n        this.indexes = { first, last };\n    }\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     */\n    refreshRowHeightCache() {\n        if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n            return;\n        }\n        // clear the previous row height cache if already present.\n        // this is useful during sorts, filters where the state of the\n        // rows array is changed.\n        this.rowHeightsCache.clearCache();\n        // Initialize the tree only if there are rows inside the tree.\n        if (this.rows && this.rows.length) {\n            const rowExpansions = new Set();\n            for (const row of this.rows) {\n                if (this.getRowExpanded(row)) {\n                    rowExpansions.add(row);\n                }\n            }\n            this.rowHeightsCache.initCache({\n                rows: this.rows,\n                rowHeight: this.rowHeight,\n                detailRowHeight: this.getDetailRowHeight,\n                externalVirtual: this.scrollbarV && this.externalPaging,\n                rowCount: this.rowCount,\n                rowIndexes: this.rowIndexes,\n                rowExpansions\n            });\n        }\n    }\n    /**\n     * Gets the index for the view port\n     */\n    getAdjustedViewPortIndex() {\n        // Capture the row index of the first row that is visible on the viewport.\n        // If the scroll bar is just below the row which is highlighted then make that as the\n        // first index.\n        const viewPortFirstRowIndex = this.indexes.first;\n        if (this.scrollbarV && this.virtualization) {\n            const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n            return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n        }\n        return viewPortFirstRowIndex;\n    }\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     */\n    toggleRowExpansion(row) {\n        // Capture the row index of the first row that is visible on the viewport.\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n        const expanded = rowExpandedIdx > -1;\n        // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n        if (this.scrollbarV && this.virtualization) {\n            const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n            // const idx = this.rowIndexes.get(row) || 0;\n            const idx = this.getRowIndex(row);\n            this.rowHeightsCache.update(idx, detailRowHeight);\n        }\n        // Update the toggled row and update thive nevere heights in the cache.\n        if (expanded) {\n            this.rowExpansions.splice(rowExpandedIdx, 1);\n        }\n        else {\n            this.rowExpansions.push(row);\n        }\n        this.detailToggle.emit({\n            rows: [row],\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     */\n    toggleAllRows(expanded) {\n        // clear prev expansions\n        this.rowExpansions = [];\n        // Capture the row index of the first row that is visible on the viewport.\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        if (expanded) {\n            for (const row of this.rows) {\n                this.rowExpansions.push(row);\n            }\n        }\n        if (this.scrollbarV) {\n            // Refresh the full row heights cache since every row was affected.\n            this.recalcLayout();\n        }\n        // Emit all rows that have been expanded.\n        this.detailToggle.emit({\n            rows: this.rows,\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Recalculates the table\n     */\n    recalcLayout() {\n        this.refreshRowHeightCache();\n        this.updateIndexes();\n        this.updateRows();\n    }\n    /**\n     * Tracks the column\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * Gets the row pinning group styles\n     */\n    stylesByGroup(group) {\n        const widths = this.columnGroupWidths;\n        const offsetX = this.offsetX;\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            const totalDiff = widths.total - bodyWidth;\n            const offsetDiff = totalDiff - offsetX;\n            const offset = offsetDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     */\n    getRowExpanded(row) {\n        if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n            for (const group of this.groupedRows) {\n                this.rowExpansions.push(group);\n            }\n        }\n        return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n    }\n    getRowExpandedIdx(row, expanded) {\n        if (!expanded || !expanded.length)\n            return -1;\n        const rowId = this.rowIdentity(row);\n        return expanded.findIndex(r => {\n            const id = this.rowIdentity(r);\n            return id === rowId;\n        });\n    }\n    /**\n     * Gets the row index given a row\n     */\n    getRowIndex(row) {\n        return this.rowIndexes.get(row) || 0;\n    }\n    onTreeAction(row) {\n        this.treeAction.emit({ row });\n    }\n}\nDataTableBodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nDataTableBodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableBodyComponent, selector: \"datatable-body\", inputs: { scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", loadingIndicator: \"loadingIndicator\", externalPaging: \"externalPaging\", rowHeight: \"rowHeight\", offsetX: \"offsetX\", emptyMessage: \"emptyMessage\", selectionType: \"selectionType\", selected: \"selected\", rowIdentity: \"rowIdentity\", rowDetail: \"rowDetail\", groupHeader: \"groupHeader\", selectCheck: \"selectCheck\", displayCheck: \"displayCheck\", trackByProp: \"trackByProp\", rowClass: \"rowClass\", groupedRows: \"groupedRows\", groupExpansionDefault: \"groupExpansionDefault\", innerWidth: \"innerWidth\", groupRowsBy: \"groupRowsBy\", virtualization: \"virtualization\", summaryRow: \"summaryRow\", summaryPosition: \"summaryPosition\", summaryHeight: \"summaryHeight\", pageSize: \"pageSize\", rows: \"rows\", columns: \"columns\", offset: \"offset\", rowCount: \"rowCount\", bodyHeight: \"bodyHeight\" }, outputs: { scroll: \"scroll\", page: \"page\", activate: \"activate\", select: \"select\", detailToggle: \"detailToggle\", rowContextmenu: \"rowContextmenu\", treeAction: \"treeAction\" }, host: { properties: { \"style.width\": \"this.bodyWidth\", \"style.height\": \"this.bodyHeight\" }, classAttribute: \"datatable-body\" }, viewQueries: [{ propertyName: \"scroller\", first: true, predicate: ScrollerComponent, descendants: true }], ngImport: i0, template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `, isInline: true, components: [{ type: ProgressBarComponent, selector: \"datatable-progress\" }, { type: DataTableSelectionComponent, selector: \"datatable-selection\", inputs: [\"rows\", \"selected\", \"selectEnabled\", \"selectionType\", \"rowIdentity\", \"selectCheck\"], outputs: [\"activate\", \"select\"] }, { type: ScrollerComponent, selector: \"datatable-scroller\", inputs: [\"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\"], outputs: [\"scroll\"] }, { type: DataTableSummaryRowComponent, selector: \"datatable-summary-row\", inputs: [\"rows\", \"columns\", \"rowHeight\", \"offsetX\", \"innerWidth\"] }, { type: DataTableRowWrapperComponent, selector: \"datatable-row-wrapper\", inputs: [\"innerWidth\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"groupedRows\", \"rowIndex\", \"expanded\"], outputs: [\"rowContextmenu\"] }, { type: DataTableBodyRowComponent, selector: \"datatable-body-row\", inputs: [\"columns\", \"innerWidth\", \"expanded\", \"rowClass\", \"row\", \"group\", \"isSelected\", \"rowIndex\", \"displayCheck\", \"treeStatus\", \"offsetX\", \"rowHeight\"], outputs: [\"activate\", \"treeAction\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableBodyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-body',\n                    template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'datatable-body'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { scrollbarV: [{\n                type: Input\n            }], scrollbarH: [{\n                type: Input\n            }], loadingIndicator: [{\n                type: Input\n            }], externalPaging: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], offsetX: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], selectionType: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], rowIdentity: [{\n                type: Input\n            }], rowDetail: [{\n                type: Input\n            }], groupHeader: [{\n                type: Input\n            }], selectCheck: [{\n                type: Input\n            }], displayCheck: [{\n                type: Input\n            }], trackByProp: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }], groupedRows: [{\n                type: Input\n            }], groupExpansionDefault: [{\n                type: Input\n            }], innerWidth: [{\n                type: Input\n            }], groupRowsBy: [{\n                type: Input\n            }], virtualization: [{\n                type: Input\n            }], summaryRow: [{\n                type: Input\n            }], summaryPosition: [{\n                type: Input\n            }], summaryHeight: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], rowCount: [{\n                type: Input\n            }], bodyWidth: [{\n                type: HostBinding,\n                args: ['style.width']\n            }], bodyHeight: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['style.height']\n            }], scroll: [{\n                type: Output\n            }], page: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }], detailToggle: [{\n                type: Output\n            }], rowContextmenu: [{\n                type: Output\n            }], treeAction: [{\n                type: Output\n            }], scroller: [{\n                type: ViewChild,\n                args: [ScrollerComponent]\n            }] } });\n\n/**\n * Gets the next sort direction\n */\nfunction nextSortDir(sortType, current) {\n    if (sortType === SortType.single) {\n        if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else {\n            return SortDirection.asc;\n        }\n    }\n    else {\n        if (!current) {\n            return SortDirection.asc;\n        }\n        else if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else if (current === SortDirection.desc) {\n            return undefined;\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nfunction orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined')\n        a = 0;\n    if (b === null || typeof b === 'undefined')\n        b = 0;\n    if (a instanceof Date && b instanceof Date) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n    }\n    else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n        // Convert to string in case of a=0 or b=0\n        a = String(a);\n        b = String(b);\n        // Isn't a number so lowercase the string to properly compare\n        if (a.toLowerCase() < b.toLowerCase())\n            return -1;\n        if (a.toLowerCase() > b.toLowerCase())\n            return 1;\n    }\n    else {\n        // Parse strings as numbers to compare properly\n        if (parseFloat(a) < parseFloat(b))\n            return -1;\n        if (parseFloat(a) > parseFloat(b))\n            return 1;\n    }\n    // equal each other\n    return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nfunction sortRows(rows, columns, dirs) {\n    if (!rows)\n        return [];\n    if (!dirs || !dirs.length || !columns)\n        return [...rows];\n    /**\n     * record the row ordering of results from prior sort operations (if applicable)\n     * this is necessary to guarantee stable sorting behavior\n     */\n    const rowToIndexMap = new Map();\n    rows.forEach((row, index) => rowToIndexMap.set(row, index));\n    const temp = [...rows];\n    const cols = columns.reduce((obj, col) => {\n        if (col.comparator && typeof col.comparator === 'function') {\n            obj[col.prop] = col.comparator;\n        }\n        return obj;\n    }, {});\n    // cache valueGetter and compareFn so that they\n    // do not need to be looked-up in the sort function body\n    const cachedDirs = dirs.map(dir => {\n        const prop = dir.prop;\n        return {\n            prop,\n            dir: dir.dir,\n            valueGetter: getterForProp(prop),\n            compareFn: cols[prop] || orderByComparator\n        };\n    });\n    return temp.sort(function (rowA, rowB) {\n        for (const cachedDir of cachedDirs) {\n            // Get property and valuegetters for column to be sorted\n            const { prop, valueGetter } = cachedDir;\n            // Get A and B cell values from rows based on properties of the columns\n            const propA = valueGetter(rowA, prop);\n            const propB = valueGetter(rowB, prop);\n            // Compare function gets five parameters:\n            // Two cell values to be compared as propA and propB\n            // Two rows corresponding to the cells as rowA and rowB\n            // Direction of the sort for this column as SortDirection\n            // Compare can be a standard JS comparison function (a,b) => -1|0|1\n            // as additional parameters are silently ignored. The whole row and sort\n            // direction enable more complex sort logic.\n            const comparison = cachedDir.dir !== SortDirection.desc\n                ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n                : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n            // Don't return 0 yet in case of needing to sort by next property\n            if (comparison !== 0)\n                return comparison;\n        }\n        if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB)))\n            return 0;\n        /**\n         * all else being equal, preserve original order of the rows (stable sort)\n         */\n        return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n    });\n}\n\nclass DataTableHeaderCellComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this.sortFn = this.onSort.bind(this);\n        this.selectFn = this.select.emit.bind(this.select);\n        this.cellContext = {\n            column: this.column,\n            sortDir: this.sortDir,\n            sortFn: this.sortFn,\n            allRowsSelected: this.allRowsSelected,\n            selectFn: this.selectFn\n        };\n    }\n    set allRowsSelected(value) {\n        this._allRowsSelected = value;\n        this.cellContext.allRowsSelected = value;\n    }\n    get allRowsSelected() {\n        return this._allRowsSelected;\n    }\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.cd.markForCheck();\n    }\n    get column() {\n        return this._column;\n    }\n    set sorts(val) {\n        this._sorts = val;\n        this.sortDir = this.calcSortDir(val);\n        this.cellContext.sortDir = this.sortDir;\n        this.sortClass = this.calcSortClass(this.sortDir);\n        this.cd.markForCheck();\n    }\n    get sorts() {\n        return this._sorts;\n    }\n    get columnCssClasses() {\n        let cls = 'datatable-header-cell';\n        if (this.column.sortable)\n            cls += ' sortable';\n        if (this.column.resizeable)\n            cls += ' resizeable';\n        if (this.column.headerClass) {\n            if (typeof this.column.headerClass === 'string') {\n                cls += ' ' + this.column.headerClass;\n            }\n            else if (typeof this.column.headerClass === 'function') {\n                const res = this.column.headerClass({\n                    column: this.column\n                });\n                if (typeof res === 'string') {\n                    cls += res;\n                }\n                else if (typeof res === 'object') {\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true)\n                            cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        const sortDir = this.sortDir;\n        if (sortDir) {\n            cls += ` sort-active sort-${sortDir}`;\n        }\n        return cls;\n    }\n    get name() {\n        // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n        return this.column.headerTemplate === undefined ? this.column.name : undefined;\n    }\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    get width() {\n        return this.column.width;\n    }\n    get isCheckboxable() {\n        return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n    }\n    onContextmenu($event) {\n        this.columnContextmenu.emit({ event: $event, column: this.column });\n    }\n    ngOnInit() {\n        this.sortClass = this.calcSortClass(this.sortDir);\n    }\n    calcSortDir(sorts) {\n        if (sorts && this.column) {\n            const sort = sorts.find((s) => {\n                return s.prop === this.column.prop;\n            });\n            if (sort)\n                return sort.dir;\n        }\n    }\n    onSort() {\n        if (!this.column.sortable)\n            return;\n        const newValue = nextSortDir(this.sortType, this.sortDir);\n        this.sort.emit({\n            column: this.column,\n            prevValue: this.sortDir,\n            newValue\n        });\n    }\n    calcSortClass(sortDir) {\n        if (!this.cellContext.column.sortable)\n            return;\n        if (sortDir === SortDirection.asc) {\n            return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n        }\n        else if (sortDir === SortDirection.desc) {\n            return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n        }\n        else {\n            return `sort-btn ${this.sortUnsetIcon}`;\n        }\n    }\n}\nDataTableHeaderCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableHeaderCellComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nDataTableHeaderCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableHeaderCellComponent, selector: \"datatable-header-cell\", inputs: { sortType: \"sortType\", sortAscendingIcon: \"sortAscendingIcon\", sortDescendingIcon: \"sortDescendingIcon\", sortUnsetIcon: \"sortUnsetIcon\", isTarget: \"isTarget\", targetMarkerTemplate: \"targetMarkerTemplate\", targetMarkerContext: \"targetMarkerContext\", allRowsSelected: \"allRowsSelected\", selectionType: \"selectionType\", column: \"column\", headerHeight: \"headerHeight\", sorts: \"sorts\" }, outputs: { sort: \"sort\", select: \"select\", columnContextmenu: \"columnContextmenu\" }, host: { listeners: { \"contextmenu\": \"onContextmenu($event)\" }, properties: { \"style.height.px\": \"this.headerHeight\", \"class\": \"this.columnCssClasses\", \"attr.title\": \"this.name\", \"style.minWidth.px\": \"this.minWidth\", \"style.maxWidth.px\": \"this.maxWidth\", \"style.width.px\": \"this.width\" }, classAttribute: \"datatable-header-cell\" }, ngImport: i0, template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableHeaderCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-header-cell',\n                    template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n                    host: {\n                        class: 'datatable-header-cell'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { sortType: [{\n                type: Input\n            }], sortAscendingIcon: [{\n                type: Input\n            }], sortDescendingIcon: [{\n                type: Input\n            }], sortUnsetIcon: [{\n                type: Input\n            }], isTarget: [{\n                type: Input\n            }], targetMarkerTemplate: [{\n                type: Input\n            }], targetMarkerContext: [{\n                type: Input\n            }], allRowsSelected: [{\n                type: Input\n            }], selectionType: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], headerHeight: [{\n                type: HostBinding,\n                args: ['style.height.px']\n            }, {\n                type: Input\n            }], sorts: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }], columnContextmenu: [{\n                type: Output\n            }], columnCssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], name: [{\n                type: HostBinding,\n                args: ['attr.title']\n            }], minWidth: [{\n                type: HostBinding,\n                args: ['style.minWidth.px']\n            }], maxWidth: [{\n                type: HostBinding,\n                args: ['style.maxWidth.px']\n            }], width: [{\n                type: HostBinding,\n                args: ['style.width.px']\n            }], onContextmenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\n\nclass DataTableHeaderComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.reorder = new EventEmitter();\n        this.resize = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this._columnGroupWidths = {\n            total: 100\n        };\n        this._styleByGroup = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this.destroyed = false;\n    }\n    set innerWidth(val) {\n        this._innerWidth = val;\n        setTimeout(() => {\n            if (this._columns) {\n                const colByPin = columnsByPin(this._columns);\n                this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n                this.setStylesByGroup();\n            }\n        });\n    }\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    set headerHeight(val) {\n        if (val !== 'auto') {\n            this._headerHeight = `${val}px`;\n        }\n        else {\n            this._headerHeight = val;\n        }\n    }\n    get headerHeight() {\n        return this._headerHeight;\n    }\n    set columns(val) {\n        this._columns = val;\n        const colsByPin = columnsByPin(val);\n        this._columnsByPin = columnsByPinArr(val);\n        setTimeout(() => {\n            this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n            this.setStylesByGroup();\n        });\n    }\n    get columns() {\n        return this._columns;\n    }\n    set offsetX(val) {\n        this._offsetX = val;\n        this.setStylesByGroup();\n    }\n    get offsetX() {\n        return this._offsetX;\n    }\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    onLongPressStart({ event, model }) {\n        model.dragging = true;\n        this.dragEventTarget = event;\n    }\n    onLongPressEnd({ event, model }) {\n        this.dragEventTarget = event;\n        // delay resetting so sort can be\n        // prevented if we were dragging\n        setTimeout(() => {\n            // datatable component creates copies from columns on reorder\n            // set dragging to false on new objects\n            const column = this._columns.find(c => c.$$id === model.$$id);\n            if (column) {\n                column.dragging = false;\n            }\n        }, 5);\n    }\n    get headerWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        return '100%';\n    }\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    onColumnResized(width, column) {\n        if (width <= column.minWidth) {\n            width = column.minWidth;\n        }\n        else if (width >= column.maxWidth) {\n            width = column.maxWidth;\n        }\n        this.resize.emit({\n            column,\n            prevValue: column.width,\n            newValue: width\n        });\n    }\n    onColumnReordered({ prevIndex, newIndex, model }) {\n        const column = this.getColumn(newIndex);\n        column.isTarget = false;\n        column.targetMarkerContext = undefined;\n        this.reorder.emit({\n            column: model,\n            prevValue: prevIndex,\n            newValue: newIndex\n        });\n    }\n    onTargetChanged({ prevIndex, newIndex, initialIndex }) {\n        if (prevIndex || prevIndex === 0) {\n            const oldColumn = this.getColumn(prevIndex);\n            oldColumn.isTarget = false;\n            oldColumn.targetMarkerContext = undefined;\n        }\n        if (newIndex || newIndex === 0) {\n            const newColumn = this.getColumn(newIndex);\n            newColumn.isTarget = true;\n            if (initialIndex !== newIndex) {\n                newColumn.targetMarkerContext = {\n                    class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n                };\n            }\n        }\n    }\n    getColumn(index) {\n        const leftColumnCount = this._columnsByPin[0].columns.length;\n        if (index < leftColumnCount) {\n            return this._columnsByPin[0].columns[index];\n        }\n        const centerColumnCount = this._columnsByPin[1].columns.length;\n        if (index < leftColumnCount + centerColumnCount) {\n            return this._columnsByPin[1].columns[index - leftColumnCount];\n        }\n        return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n    }\n    onSort({ column, prevValue, newValue }) {\n        // if we are dragging don't sort!\n        if (column.dragging) {\n            return;\n        }\n        const sorts = this.calcNewSorts(column, prevValue, newValue);\n        this.sort.emit({\n            sorts,\n            column,\n            prevValue,\n            newValue\n        });\n    }\n    calcNewSorts(column, prevValue, newValue) {\n        let idx = 0;\n        if (!this.sorts) {\n            this.sorts = [];\n        }\n        const sorts = this.sorts.map((s, i) => {\n            s = { ...s };\n            if (s.prop === column.prop) {\n                idx = i;\n            }\n            return s;\n        });\n        if (newValue === undefined) {\n            sorts.splice(idx, 1);\n        }\n        else if (prevValue) {\n            sorts[idx].dir = newValue;\n        }\n        else {\n            if (this.sortType === SortType.single) {\n                sorts.splice(0, this.sorts.length);\n            }\n            sorts.push({ dir: newValue, prop: column.prop });\n        }\n        return sorts;\n    }\n    setStylesByGroup() {\n        this._styleByGroup.left = this.calcStylesByGroup('left');\n        this._styleByGroup.center = this.calcStylesByGroup('center');\n        this._styleByGroup.right = this.calcStylesByGroup('right');\n        if (!this.destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n    calcStylesByGroup(group) {\n        const widths = this._columnGroupWidths;\n        const offsetX = this.offsetX;\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'center') {\n            translateXY(styles, offsetX * -1, 0);\n        }\n        else if (group === 'right') {\n            const totalDiff = widths.total - this.innerWidth;\n            const offset = totalDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n}\nDataTableHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableHeaderComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nDataTableHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableHeaderComponent, selector: \"datatable-header\", inputs: { sortAscendingIcon: \"sortAscendingIcon\", sortDescendingIcon: \"sortDescendingIcon\", sortUnsetIcon: \"sortUnsetIcon\", scrollbarH: \"scrollbarH\", dealsWithGroup: \"dealsWithGroup\", targetMarkerTemplate: \"targetMarkerTemplate\", innerWidth: \"innerWidth\", sorts: \"sorts\", sortType: \"sortType\", allRowsSelected: \"allRowsSelected\", selectionType: \"selectionType\", reorderable: \"reorderable\", headerHeight: \"headerHeight\", columns: \"columns\", offsetX: \"offsetX\" }, outputs: { sort: \"sort\", reorder: \"reorder\", resize: \"resize\", select: \"select\", columnContextmenu: \"columnContextmenu\" }, host: { properties: { \"style.height\": \"this.headerHeight\", \"style.width\": \"this.headerWidth\" }, classAttribute: \"datatable-header\" }, ngImport: i0, template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `, isInline: true, components: [{ type: DataTableHeaderCellComponent, selector: \"datatable-header-cell\", inputs: [\"sortType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"allRowsSelected\", \"selectionType\", \"column\", \"headerHeight\", \"sorts\"], outputs: [\"sort\", \"select\", \"columnContextmenu\"] }], directives: [{ type: OrderableDirective, selector: \"[orderable]\", outputs: [\"reorder\", \"targetChanged\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: ResizeableDirective, selector: \"[resizeable]\", inputs: [\"resizeEnabled\", \"minWidth\", \"maxWidth\"], outputs: [\"resize\"] }, { type: LongPressDirective, selector: \"[long-press]\", inputs: [\"pressEnabled\", \"pressModel\", \"duration\"], outputs: [\"longPressStart\", \"longPressing\", \"longPressEnd\"] }, { type: DraggableDirective, selector: \"[draggable]\", inputs: [\"dragEventTarget\", \"dragModel\", \"dragX\", \"dragY\"], outputs: [\"dragStart\", \"dragging\", \"dragEnd\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableHeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-header',\n                    template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n                    host: {\n                        class: 'datatable-header'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { sortAscendingIcon: [{\n                type: Input\n            }], sortDescendingIcon: [{\n                type: Input\n            }], sortUnsetIcon: [{\n                type: Input\n            }], scrollbarH: [{\n                type: Input\n            }], dealsWithGroup: [{\n                type: Input\n            }], targetMarkerTemplate: [{\n                type: Input\n            }], innerWidth: [{\n                type: Input\n            }], sorts: [{\n                type: Input\n            }], sortType: [{\n                type: Input\n            }], allRowsSelected: [{\n                type: Input\n            }], selectionType: [{\n                type: Input\n            }], reorderable: [{\n                type: Input\n            }], headerHeight: [{\n                type: HostBinding,\n                args: ['style.height']\n            }, {\n                type: Input\n            }], columns: [{\n                type: Input\n            }], offsetX: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], reorder: [{\n                type: Output\n            }], resize: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }], columnContextmenu: [{\n                type: Output\n            }], headerWidth: [{\n                type: HostBinding,\n                args: ['style.width']\n            }] } });\n\n/**\n * Throttle a function\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\n/**\n * Calculates the Total Flex Grow\n */\nfunction getTotalFlexGrow(columns) {\n    let totalFlexGrow = 0;\n    for (const c of columns) {\n        totalFlexGrow += c.flexGrow || 0;\n    }\n    return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n    const columnsWidth = columnsTotalWidth(allColumns);\n    const totalFlexGrow = getTotalFlexGrow(allColumns);\n    const colsByGroup = columnsByPin(allColumns);\n    if (columnsWidth !== expectedWidth) {\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n    }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n    // calculate total width and flexgrow points for coulumns that can be resized\n    for (const attr in colsByGroup) {\n        for (const column of colsByGroup[attr]) {\n            if (!column.canAutoResize) {\n                maxWidth -= column.width;\n                totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n            }\n            else {\n                column.width = 0;\n            }\n        }\n    }\n    const hasMinWidth = {};\n    let remainingWidth = maxWidth;\n    // resize columns until no width is left to be distributed\n    do {\n        const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n        remainingWidth = 0;\n        for (const attr in colsByGroup) {\n            for (const column of colsByGroup[attr]) {\n                // if the column can be resize and it hasn't reached its minimum width yet\n                if (column.canAutoResize && !hasMinWidth[column.prop]) {\n                    const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n                    if (column.minWidth !== undefined && newWidth < column.minWidth) {\n                        remainingWidth += newWidth - column.minWidth;\n                        column.width = column.minWidth;\n                        hasMinWidth[column.prop] = true;\n                    }\n                    else {\n                        column.width = newWidth;\n                    }\n                }\n            }\n        }\n    } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth = 300) {\n    const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n        return c.canAutoResize !== false;\n    });\n    for (const column of columnsToResize) {\n        if (!column.$$oldWidth) {\n            column.$$oldWidth = column.width;\n        }\n    }\n    let additionWidthPerColumn = 0;\n    let exceedsWindow = false;\n    let contentWidth = getContentWidth(allColumns, defaultColWidth);\n    let remainingWidth = expectedWidth - contentWidth;\n    const columnsProcessed = [];\n    const remainingWidthLimit = 1; // when to stop\n    // This loop takes care of the\n    do {\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\n        exceedsWindow = contentWidth >= expectedWidth;\n        for (const column of columnsToResize) {\n            if (exceedsWindow && allowBleed) {\n                column.width = column.$$oldWidth || column.width || defaultColWidth;\n            }\n            else {\n                const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n                if (column.minWidth && newSize < column.minWidth) {\n                    column.width = column.minWidth;\n                    columnsProcessed.push(column);\n                }\n                else if (column.maxWidth && newSize > column.maxWidth) {\n                    column.width = column.maxWidth;\n                    columnsProcessed.push(column);\n                }\n                else {\n                    column.width = newSize;\n                }\n            }\n            column.width = Math.max(0, column.width);\n        }\n        contentWidth = getContentWidth(allColumns);\n        remainingWidth = expectedWidth - contentWidth;\n        removeProcessedColumns(columnsToResize, columnsProcessed);\n    } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n    for (const column of columnsProcessed) {\n        const index = columnsToResize.indexOf(column);\n        columnsToResize.splice(index, 1);\n    }\n}\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns, defaultColWidth = 300) {\n    let contentWidth = 0;\n    for (const column of allColumns) {\n        contentWidth += column.width || defaultColWidth;\n    }\n    return contentWidth;\n}\n\nclass DataTablePagerComponent {\n    constructor() {\n        this.change = new EventEmitter();\n        this._count = 0;\n        this._page = 1;\n        this._size = 0;\n    }\n    set size(val) {\n        this._size = val;\n        this.pages = this.calcPages();\n    }\n    get size() {\n        return this._size;\n    }\n    set count(val) {\n        this._count = val;\n        this.pages = this.calcPages();\n    }\n    get count() {\n        return this._count;\n    }\n    set page(val) {\n        this._page = val;\n        this.pages = this.calcPages();\n    }\n    get page() {\n        return this._page;\n    }\n    get totalPages() {\n        const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n        return Math.max(count || 0, 1);\n    }\n    canPrevious() {\n        return this.page > 1;\n    }\n    canNext() {\n        return this.page < this.totalPages;\n    }\n    prevPage() {\n        this.selectPage(this.page - 1);\n    }\n    nextPage() {\n        this.selectPage(this.page + 1);\n    }\n    selectPage(page) {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n            this.page = page;\n            this.change.emit({\n                page\n            });\n        }\n    }\n    calcPages(page) {\n        const pages = [];\n        let startPage = 1;\n        let endPage = this.totalPages;\n        const maxSize = 5;\n        const isMaxSized = maxSize < this.totalPages;\n        page = page || this.page;\n        if (isMaxSized) {\n            startPage = page - Math.floor(maxSize / 2);\n            endPage = page + Math.floor(maxSize / 2);\n            if (startPage < 1) {\n                startPage = 1;\n                endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n            }\n            else if (endPage > this.totalPages) {\n                startPage = Math.max(this.totalPages - maxSize + 1, 1);\n                endPage = this.totalPages;\n            }\n        }\n        for (let num = startPage; num <= endPage; num++) {\n            pages.push({\n                number: num,\n                text: num\n            });\n        }\n        return pages;\n    }\n}\nDataTablePagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTablePagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDataTablePagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTablePagerComponent, selector: \"datatable-pager\", inputs: { pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\", size: \"size\", count: \"count\", page: \"page\" }, outputs: { change: \"change\" }, host: { classAttribute: \"datatable-pager\" }, ngImport: i0, template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `, isInline: true, directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTablePagerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-pager',\n                    template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n                    host: {\n                        class: 'datatable-pager'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { pagerLeftArrowIcon: [{\n                type: Input\n            }], pagerRightArrowIcon: [{\n                type: Input\n            }], pagerPreviousIcon: [{\n                type: Input\n            }], pagerNextIcon: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], count: [{\n                type: Input\n            }], page: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\nclass DataTableFooterComponent {\n    constructor() {\n        this.selectedCount = 0;\n        this.page = new EventEmitter();\n    }\n    get isVisible() {\n        return this.rowCount / this.pageSize > 1;\n    }\n    get curPage() {\n        return this.offset + 1;\n    }\n}\nDataTableFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableFooterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDataTableFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DataTableFooterComponent, selector: \"datatable-footer\", inputs: { footerHeight: \"footerHeight\", rowCount: \"rowCount\", pageSize: \"pageSize\", offset: \"offset\", pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\", totalMessage: \"totalMessage\", footerTemplate: \"footerTemplate\", selectedCount: \"selectedCount\", selectedMessage: \"selectedMessage\" }, outputs: { page: \"page\" }, host: { classAttribute: \"datatable-footer\" }, ngImport: i0, template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `, isInline: true, components: [{ type: DataTablePagerComponent, selector: \"datatable-pager\", inputs: [\"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"size\", \"count\", \"page\"], outputs: [\"change\"] }], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DataTableFooterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'datatable-footer',\n                    template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n                    host: {\n                        class: 'datatable-footer'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { footerHeight: [{\n                type: Input\n            }], rowCount: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], pagerLeftArrowIcon: [{\n                type: Input\n            }], pagerRightArrowIcon: [{\n                type: Input\n            }], pagerPreviousIcon: [{\n                type: Input\n            }], pagerNextIcon: [{\n                type: Input\n            }], totalMessage: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], selectedCount: [{\n                type: Input\n            }], selectedMessage: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n\nclass DatatableComponent {\n    constructor(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n        this.scrollbarHelper = scrollbarHelper;\n        this.dimensionsHelper = dimensionsHelper;\n        this.cd = cd;\n        this.columnChangesService = columnChangesService;\n        this.configuration = configuration;\n        /**\n         * List of row objects that should be\n         * represented as selected in the grid.\n         * Default value: `[]`\n         */\n        this.selected = [];\n        /**\n         * Enable vertical scrollbars\n         */\n        this.scrollbarV = false;\n        /**\n         * Enable horz scrollbars\n         */\n        this.scrollbarH = false;\n        /**\n         * The row height; which is necessary\n         * to calculate the height for the lazy rendering.\n         */\n        this.rowHeight = 30;\n        /**\n         * Type of column width distribution formula.\n         * Example: flex, force, standard\n         */\n        this.columnMode = ColumnMode.standard;\n        /**\n         * The minimum header height in pixels.\n         * Pass a falsey for no header\n         */\n        this.headerHeight = 30;\n        /**\n         * The minimum footer height in pixels.\n         * Pass falsey for no footer\n         */\n        this.footerHeight = 0;\n        /**\n         * If the table should use external paging\n         * otherwise its assumed that all data is preloaded.\n         */\n        this.externalPaging = false;\n        /**\n         * If the table should use external sorting or\n         * the built-in basic sorting.\n         */\n        this.externalSorting = false;\n        /**\n         * Show the linear loading bar.\n         * Default value: `false`\n         */\n        this.loadingIndicator = false;\n        /**\n         * Enable/Disable ability to re-order columns\n         * by dragging them.\n         */\n        this.reorderable = true;\n        /**\n         * Swap columns on re-order columns or\n         * move them.\n         */\n        this.swapColumns = true;\n        /**\n         * The type of sorting\n         */\n        this.sortType = SortType.single;\n        /**\n         * Array of sorted columns by property and type.\n         * Default value: `[]`\n         */\n        this.sorts = [];\n        /**\n         * Css class overrides\n         */\n        this.cssClasses = {\n            sortAscending: 'datatable-icon-up',\n            sortDescending: 'datatable-icon-down',\n            sortUnset: 'datatable-icon-sort-unset',\n            pagerLeftArrow: 'datatable-icon-left',\n            pagerRightArrow: 'datatable-icon-right',\n            pagerPrevious: 'datatable-icon-prev',\n            pagerNext: 'datatable-icon-skip'\n        };\n        /**\n         * Message overrides for localization\n         *\n         * emptyMessage     [default] = 'No data to display'\n         * totalMessage     [default] = 'total'\n         * selectedMessage  [default] = 'selected'\n         */\n        this.messages = {\n            // Message to show when array is presented\n            // but contains no values\n            emptyMessage: 'No data to display',\n            // Footer total message\n            totalMessage: 'total',\n            // Footer selected message\n            selectedMessage: 'selected'\n        };\n        /**\n         * A boolean you can use to set the detault behaviour of rows and groups\n         * whether they will start expanded or not. If ommited the default is NOT expanded.\n         *\n         */\n        this.groupExpansionDefault = false;\n        /**\n         * Property to which you can use for determining select all\n         * rows on current page or not.\n         *\n         * @memberOf DatatableComponent\n         */\n        this.selectAllRowsOnPage = false;\n        /**\n         * A flag for row virtualization on / off\n         */\n        this.virtualization = true;\n        /**\n         * A flag for switching summary row on / off\n         */\n        this.summaryRow = false;\n        /**\n         * A height of summary row\n         */\n        this.summaryHeight = 30;\n        /**\n         * A property holds a summary row position: top/bottom\n         */\n        this.summaryPosition = 'top';\n        /**\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\n         */\n        this.scroll = new EventEmitter();\n        /**\n         * A cell or row was focused via keyboard or mouse click.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * A cell or row was selected.\n         */\n        this.select = new EventEmitter();\n        /**\n         * Column sort was invoked.\n         */\n        this.sort = new EventEmitter();\n        /**\n         * The table was paged either triggered by the pager or the body scroll.\n         */\n        this.page = new EventEmitter();\n        /**\n         * Columns were re-ordered.\n         */\n        this.reorder = new EventEmitter();\n        /**\n         * Column was resized.\n         */\n        this.resize = new EventEmitter();\n        /**\n         * The context menu was invoked on the table.\n         * type indicates whether the header or the body was clicked.\n         * content contains either the column or the row that was clicked.\n         */\n        this.tableContextmenu = new EventEmitter(false);\n        /**\n         * A row was expanded ot collapsed for tree\n         */\n        this.treeAction = new EventEmitter();\n        this.rowCount = 0;\n        this._offsetX = new BehaviorSubject(0);\n        this._count = 0;\n        this._offset = 0;\n        this._subscriptions = [];\n        /**\n         * This will be used when displaying or selecting rows.\n         * when tracking/comparing them, we'll use the value of this fn,\n         *\n         * (`fn(x) === fn(y)` instead of `x === y`)\n         */\n        this.rowIdentity = (x) => {\n            if (this._groupRowsBy) {\n                // each group in groupedRows are stored as {key, value: [rows]},\n                // where key is the groupRowsBy index\n                return x.key;\n            }\n            else {\n                return x;\n            }\n        };\n        // get ref to elm for measuring\n        this.element = element.nativeElement;\n        this.rowDiffer = differs.find({}).create();\n        // apply global settings from Module.forRoot\n        if (this.configuration && this.configuration.messages) {\n            this.messages = { ...this.configuration.messages };\n        }\n    }\n    /**\n     * Rows that are displayed in the table.\n     */\n    set rows(val) {\n        this._rows = val;\n        if (val) {\n            this._internalRows = [...val];\n        }\n        // auto sort on new updates\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // recalculate sizes/etc\n        this.recalculate();\n        if (this._rows && this._groupRowsBy) {\n            // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n            this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n        }\n        this.cd.markForCheck();\n    }\n    /**\n     * Gets the rows.\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * This attribute allows the user to set the name of the column to group the data with\n     */\n    set groupRowsBy(val) {\n        if (val) {\n            this._groupRowsBy = val;\n            if (this._rows && this._groupRowsBy) {\n                // cretes a new array with the data grouped\n                this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n            }\n        }\n    }\n    get groupRowsBy() {\n        return this._groupRowsBy;\n    }\n    /**\n     * Columns to be displayed.\n     */\n    set columns(val) {\n        if (val) {\n            this._internalColumns = [...val];\n            setColumnDefaults(this._internalColumns);\n            this.recalculateColumns();\n        }\n        this._columns = val;\n    }\n    /**\n     * Get the columns.\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * The page size to be shown.\n     * Default value: `undefined`\n     */\n    set limit(val) {\n        this._limit = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the limit.\n     */\n    get limit() {\n        return this._limit;\n    }\n    /**\n     * The total count of all rows.\n     * Default value: `0`\n     */\n    set count(val) {\n        this._count = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the count.\n     */\n    get count() {\n        return this._count;\n    }\n    /**\n     * The current offset ( page - 1 ) shown.\n     * Default value: `0`\n     */\n    set offset(val) {\n        this._offset = val;\n    }\n    get offset() {\n        return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n    }\n    /**\n     * CSS class applied if the header height if fixed height.\n     */\n    get isFixedHeader() {\n        const headerHeight = this.headerHeight;\n        return typeof headerHeight === 'string' ? headerHeight !== 'auto' : true;\n    }\n    /**\n     * CSS class applied to the root element if\n     * the row heights are fixed heights.\n     */\n    get isFixedRow() {\n        return this.rowHeight !== 'auto';\n    }\n    /**\n     * CSS class applied to root element if\n     * vertical scrolling is enabled.\n     */\n    get isVertScroll() {\n        return this.scrollbarV;\n    }\n    /**\n     * CSS class applied to root element if\n     * virtualization is enabled.\n     */\n    get isVirtualized() {\n        return this.virtualization;\n    }\n    /**\n     * CSS class applied to the root element\n     * if the horziontal scrolling is enabled.\n     */\n    get isHorScroll() {\n        return this.scrollbarH;\n    }\n    /**\n     * CSS class applied to root element is selectable.\n     */\n    get isSelectable() {\n        return this.selectionType !== undefined;\n    }\n    /**\n     * CSS class applied to root is checkbox selection.\n     */\n    get isCheckboxSelection() {\n        return this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * CSS class applied to root if cell selection.\n     */\n    get isCellSelection() {\n        return this.selectionType === SelectionType.cell;\n    }\n    /**\n     * CSS class applied to root if single select.\n     */\n    get isSingleSelection() {\n        return this.selectionType === SelectionType.single;\n    }\n    /**\n     * CSS class added to root element if mulit select\n     */\n    get isMultiSelection() {\n        return this.selectionType === SelectionType.multi;\n    }\n    /**\n     * CSS class added to root element if mulit click select\n     */\n    get isMultiClickSelection() {\n        return this.selectionType === SelectionType.multiClick;\n    }\n    /**\n     * Column templates gathered from `ContentChildren`\n     * if described in your markup.\n     */\n    set columnTemplates(val) {\n        this._columnTemplates = val;\n        this.translateColumns(val);\n    }\n    /**\n     * Returns the column templates.\n     */\n    get columnTemplates() {\n        return this._columnTemplates;\n    }\n    /**\n     * Returns if all rows are selected.\n     */\n    get allRowsSelected() {\n        let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n        if (this.bodyComponent && this.selectAllRowsOnPage) {\n            const indexes = this.bodyComponent.indexes;\n            const rowsOnPage = indexes.last - indexes.first;\n            allRowsSelected = this.selected.length === rowsOnPage;\n        }\n        return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n    }\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     */\n    ngOnInit() {\n        // need to call this immediatly to size\n        // if the table is hidden the visibility\n        // listener will invoke this itself upon show\n        this.recalculate();\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     */\n    ngAfterViewInit() {\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // this has to be done to prevent the change detection\n        // tree from freaking out because we are readjusting\n        if (typeof requestAnimationFrame === 'undefined') {\n            return;\n        }\n        requestAnimationFrame(() => {\n            this.recalculate();\n            // emit page for virtual server-side kickoff\n            if (this.externalPaging && this.scrollbarV) {\n                this.page.emit({\n                    count: this.count,\n                    pageSize: this.pageSize,\n                    limit: this.limit,\n                    offset: 0\n                });\n            }\n        });\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     */\n    ngAfterContentInit() {\n        this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n        this.listenForColumnInputChanges();\n    }\n    /**\n     * Translates the templates to the column objects\n     */\n    translateColumns(val) {\n        if (val) {\n            const arr = val.toArray();\n            if (arr.length) {\n                this._internalColumns = translateTemplates(arr);\n                setColumnDefaults(this._internalColumns);\n                this.recalculateColumns();\n                this.sortInternalRows();\n                this.cd.markForCheck();\n            }\n        }\n    }\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param originalArray the original array passed via parameter\n     * @param groupByIndex  the index of the column to group the data by\n     */\n    groupArrayBy(originalArray, groupBy) {\n        // create a map to hold groups with their corresponding results\n        const map = new Map();\n        let i = 0;\n        originalArray.forEach((item) => {\n            const key = item[groupBy];\n            if (!map.has(key)) {\n                map.set(key, [item]);\n            }\n            else {\n                map.get(key).push(item);\n            }\n            i++;\n        });\n        const addGroup = (key, value) => {\n            return { key, value };\n        };\n        // convert map back to a simple array of objects\n        return Array.from(map, x => addGroup(x[0], x[1]));\n    }\n    /*\n     * Lifecycle hook that is called when Angular dirty checks a directive.\n     */\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.rows)) {\n            if (!this.externalSorting) {\n                this.sortInternalRows();\n            }\n            else {\n                this._internalRows = [...this.rows];\n            }\n            // auto group by parent on new update\n            this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n            this.recalculatePages();\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     */\n    recalculate() {\n        this.recalculateDims();\n        this.recalculateColumns();\n        this.cd.markForCheck();\n    }\n    /**\n     * Window resize handler to update sizes.\n     */\n    onWindowResize() {\n        this.recalculate();\n    }\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     */\n    recalculateColumns(columns = this._internalColumns, forceIdx = -1, allowBleed = this.scrollbarH) {\n        if (!columns)\n            return undefined;\n        let width = this._innerWidth;\n        if (this.scrollbarV) {\n            width = width - this.scrollbarHelper.width;\n        }\n        if (this.columnMode === ColumnMode.force) {\n            forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n        }\n        else if (this.columnMode === ColumnMode.flex) {\n            adjustColumnWidths(columns, width);\n        }\n        return columns;\n    }\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     */\n    recalculateDims() {\n        const dims = this.dimensionsHelper.getDimensions(this.element);\n        this._innerWidth = Math.floor(dims.width);\n        if (this.scrollbarV) {\n            let height = dims.height;\n            if (this.headerHeight)\n                height = height - this.headerHeight;\n            if (this.footerHeight)\n                height = height - this.footerHeight;\n            this.bodyHeight = height;\n        }\n        this.recalculatePages();\n    }\n    /**\n     * Recalculates the pages after a update.\n     */\n    recalculatePages() {\n        this.pageSize = this.calcPageSize();\n        this.rowCount = this.calcRowCount();\n    }\n    /**\n     * Body triggered a page event.\n     */\n    onBodyPage({ offset }) {\n        // Avoid pagination caming from body events like scroll when the table\n        // has no virtualization and the external paging is enable.\n        // This means, let's the developer handle pagination by my him(her) self\n        if (this.externalPaging && !this.virtualization) {\n            return;\n        }\n        this.offset = offset;\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    }\n    /**\n     * The body triggered a scroll event.\n     */\n    onBodyScroll(event) {\n        this._offsetX.next(event.offsetX);\n        this.scroll.emit(event);\n        this.cd.detectChanges();\n    }\n    /**\n     * The footer triggered a page event.\n     */\n    onFooterPage(event) {\n        this.offset = event.page - 1;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n    }\n    /**\n     * Recalculates the sizes of the page\n     */\n    calcPageSize(val = this.rows) {\n        // Keep the page size constant even if the row has been expanded.\n        // This is because an expanded row is still considered to be a child of\n        // the original row.  Hence calculation would use rowHeight only.\n        if (this.scrollbarV && this.virtualization) {\n            const size = Math.ceil(this.bodyHeight / this.rowHeight);\n            return Math.max(size, 0);\n        }\n        // if limit is passed, we are paging\n        if (this.limit !== undefined) {\n            return this.limit;\n        }\n        // otherwise use row length\n        if (val) {\n            return val.length;\n        }\n        // other empty :(\n        return 0;\n    }\n    /**\n     * Calculates the row count.\n     */\n    calcRowCount(val = this.rows) {\n        if (!this.externalPaging) {\n            if (!val)\n                return 0;\n            if (this.groupedRows) {\n                return this.groupedRows.length;\n            }\n            else if (this.treeFromRelation != null && this.treeToRelation != null) {\n                return this._internalRows.length;\n            }\n            else {\n                return val.length;\n            }\n        }\n        return this.count;\n    }\n    /**\n     * The header triggered a contextmenu event.\n     */\n    onColumnContextmenu({ event, column }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n    }\n    /**\n     * The body triggered a contextmenu event.\n     */\n    onRowContextmenu({ event, row }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n    }\n    /**\n     * The header triggered a column resize event.\n     */\n    onColumnResize({ column, newValue }) {\n        /* Safari/iOS 10.2 workaround */\n        if (column === undefined) {\n            return;\n        }\n        let idx;\n        const cols = this._internalColumns.map((c, i) => {\n            c = { ...c };\n            if (c.$$id === column.$$id) {\n                idx = i;\n                c.width = newValue;\n                // set this so we can force the column\n                // width distribution to be to this value\n                c.$$oldWidth = newValue;\n            }\n            return c;\n        });\n        this.recalculateColumns(cols, idx);\n        this._internalColumns = cols;\n        this.resize.emit({\n            column,\n            newValue\n        });\n    }\n    /**\n     * The header triggered a column re-order event.\n     */\n    onColumnReorder({ column, newValue, prevValue }) {\n        const cols = this._internalColumns.map(c => {\n            return { ...c };\n        });\n        if (this.swapColumns) {\n            const prevCol = cols[newValue];\n            cols[newValue] = column;\n            cols[prevValue] = prevCol;\n        }\n        else {\n            if (newValue > prevValue) {\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i < newValue; i++) {\n                    cols[i] = cols[i + 1];\n                }\n                cols[newValue] = movedCol;\n            }\n            else {\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i > newValue; i--) {\n                    cols[i] = cols[i - 1];\n                }\n                cols[newValue] = movedCol;\n            }\n        }\n        this._internalColumns = cols;\n        this.reorder.emit({\n            column,\n            newValue,\n            prevValue\n        });\n    }\n    /**\n     * The header triggered a column sort event.\n     */\n    onColumnSort(event) {\n        // clean selected rows\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n        this.sorts = event.sorts;\n        // this could be optimized better since it will resort\n        // the rows again on the 'push' detection...\n        if (this.externalSorting === false) {\n            // don't use normal setter so we don't resort\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // Always go to first page when sorting to see the newly sorted data\n        this.offset = 0;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.sort.emit(event);\n    }\n    /**\n     * Toggle all row selection\n     */\n    onHeaderSelect(event) {\n        if (this.bodyComponent && this.selectAllRowsOnPage) {\n            // before we splice, chk if we currently have all selected\n            const first = this.bodyComponent.indexes.first;\n            const last = this.bodyComponent.indexes.last;\n            const allSelected = this.selected.length === last - first;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this._internalRows.slice(first, last));\n            }\n        }\n        else {\n            // before we splice, chk if we currently have all selected\n            const allSelected = this.selected.length === this.rows.length;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this.rows);\n            }\n        }\n        this.select.emit({\n            selected: this.selected\n        });\n    }\n    /**\n     * A row was selected from body\n     */\n    onBodySelect(event) {\n        this.select.emit(event);\n    }\n    /**\n     * A row was expanded or collapsed for tree\n     */\n    onTreeAction(event) {\n        const row = event.row;\n        // TODO: For duplicated items this will not work\n        const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n        this.treeAction.emit({ row, rowIndex });\n    }\n    ngOnDestroy() {\n        this._subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     */\n    listenForColumnInputChanges() {\n        this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe(() => {\n            if (this.columnTemplates) {\n                this.columnTemplates.notifyOnChanges();\n            }\n        }));\n    }\n    sortInternalRows() {\n        this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n    }\n}\nDatatableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableComponent, deps: [{ token: ScrollbarHelper, skipSelf: true }, { token: DimensionsHelper, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.KeyValueDiffers }, { token: ColumnChangesService }, { token: 'configuration', optional: true }], target: i0.ɵɵFactoryTarget.Component });\nDatatableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DatatableComponent, selector: \"ngx-datatable\", inputs: { targetMarkerTemplate: \"targetMarkerTemplate\", rows: \"rows\", groupRowsBy: \"groupRowsBy\", groupedRows: \"groupedRows\", columns: \"columns\", selected: \"selected\", scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", rowHeight: \"rowHeight\", columnMode: \"columnMode\", headerHeight: \"headerHeight\", footerHeight: \"footerHeight\", externalPaging: \"externalPaging\", externalSorting: \"externalSorting\", limit: \"limit\", count: \"count\", offset: \"offset\", loadingIndicator: \"loadingIndicator\", selectionType: \"selectionType\", reorderable: \"reorderable\", swapColumns: \"swapColumns\", sortType: \"sortType\", sorts: \"sorts\", cssClasses: \"cssClasses\", messages: \"messages\", rowClass: \"rowClass\", selectCheck: \"selectCheck\", displayCheck: \"displayCheck\", groupExpansionDefault: \"groupExpansionDefault\", trackByProp: \"trackByProp\", selectAllRowsOnPage: \"selectAllRowsOnPage\", virtualization: \"virtualization\", treeFromRelation: \"treeFromRelation\", treeToRelation: \"treeToRelation\", summaryRow: \"summaryRow\", summaryHeight: \"summaryHeight\", summaryPosition: \"summaryPosition\", rowIdentity: \"rowIdentity\" }, outputs: { scroll: \"scroll\", activate: \"activate\", select: \"select\", sort: \"sort\", page: \"page\", reorder: \"reorder\", resize: \"resize\", tableContextmenu: \"tableContextmenu\", treeAction: \"treeAction\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class.fixed-header\": \"this.isFixedHeader\", \"class.fixed-row\": \"this.isFixedRow\", \"class.scroll-vertical\": \"this.isVertScroll\", \"class.virtualized\": \"this.isVirtualized\", \"class.scroll-horz\": \"this.isHorScroll\", \"class.selectable\": \"this.isSelectable\", \"class.checkbox-selection\": \"this.isCheckboxSelection\", \"class.cell-selection\": \"this.isCellSelection\", \"class.single-selection\": \"this.isSingleSelection\", \"class.multi-selection\": \"this.isMultiSelection\", \"class.multi-click-selection\": \"this.isMultiClickSelection\" }, classAttribute: \"ngx-datatable\" }, queries: [{ propertyName: \"rowDetail\", first: true, predicate: DatatableRowDetailDirective, descendants: true }, { propertyName: \"groupHeader\", first: true, predicate: DatatableGroupHeaderDirective, descendants: true }, { propertyName: \"footer\", first: true, predicate: DatatableFooterDirective, descendants: true }, { propertyName: \"columnTemplates\", predicate: DataTableColumnDirective }], viewQueries: [{ propertyName: \"bodyComponent\", first: true, predicate: DataTableBodyComponent, descendants: true }, { propertyName: \"headerComponent\", first: true, predicate: DataTableHeaderComponent, descendants: true }], ngImport: i0, template: \"<div role=\\\"table\\\" visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    role=\\\"rowgroup\\\"\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [sortUnsetIcon]=\\\"cssClasses.sortUnset\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    role=\\\"rowgroup\\\"\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\", styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate(0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable *:before,.ngx-datatable *:after{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-header-inner{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:none}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:none}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:none}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\\n\"], components: [{ type: DataTableHeaderComponent, selector: \"datatable-header\", inputs: [\"sortAscendingIcon\", \"sortDescendingIcon\", \"sortUnsetIcon\", \"scrollbarH\", \"dealsWithGroup\", \"targetMarkerTemplate\", \"innerWidth\", \"sorts\", \"sortType\", \"allRowsSelected\", \"selectionType\", \"reorderable\", \"headerHeight\", \"columns\", \"offsetX\"], outputs: [\"sort\", \"reorder\", \"resize\", \"select\", \"columnContextmenu\"] }, { type: DataTableBodyComponent, selector: \"datatable-body\", inputs: [\"scrollbarV\", \"scrollbarH\", \"loadingIndicator\", \"externalPaging\", \"rowHeight\", \"offsetX\", \"emptyMessage\", \"selectionType\", \"selected\", \"rowIdentity\", \"rowDetail\", \"groupHeader\", \"selectCheck\", \"displayCheck\", \"trackByProp\", \"rowClass\", \"groupedRows\", \"groupExpansionDefault\", \"innerWidth\", \"groupRowsBy\", \"virtualization\", \"summaryRow\", \"summaryPosition\", \"summaryHeight\", \"pageSize\", \"rows\", \"columns\", \"offset\", \"rowCount\", \"bodyHeight\"], outputs: [\"scroll\", \"page\", \"activate\", \"select\", \"detailToggle\", \"rowContextmenu\", \"treeAction\"] }, { type: DataTableFooterComponent, selector: \"datatable-footer\", inputs: [\"footerHeight\", \"rowCount\", \"pageSize\", \"offset\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"totalMessage\", \"footerTemplate\", \"selectedCount\", \"selectedMessage\"], outputs: [\"page\"] }], directives: [{ type: VisibilityDirective, selector: \"[visibilityObserver]\", outputs: [\"visible\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(5)\n], DatatableComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DatatableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-datatable', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'ngx-datatable'\n                    }, template: \"<div role=\\\"table\\\" visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    role=\\\"rowgroup\\\"\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [sortUnsetIcon]=\\\"cssClasses.sortUnset\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    role=\\\"rowgroup\\\"\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\", styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate(0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable *:before,.ngx-datatable *:after{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-header-inner{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:none}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:none}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:none}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: ScrollbarHelper, decorators: [{\n                    type: SkipSelf\n                }] }, { type: DimensionsHelper, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.KeyValueDiffers }, { type: ColumnChangesService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: ['configuration']\n                }] }]; }, propDecorators: { targetMarkerTemplate: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], groupRowsBy: [{\n                type: Input\n            }], groupedRows: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], scrollbarV: [{\n                type: Input\n            }], scrollbarH: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], columnMode: [{\n                type: Input\n            }], headerHeight: [{\n                type: Input\n            }], footerHeight: [{\n                type: Input\n            }], externalPaging: [{\n                type: Input\n            }], externalSorting: [{\n                type: Input\n            }], limit: [{\n                type: Input\n            }], count: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], loadingIndicator: [{\n                type: Input\n            }], selectionType: [{\n                type: Input\n            }], reorderable: [{\n                type: Input\n            }], swapColumns: [{\n                type: Input\n            }], sortType: [{\n                type: Input\n            }], sorts: [{\n                type: Input\n            }], cssClasses: [{\n                type: Input\n            }], messages: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }], selectCheck: [{\n                type: Input\n            }], displayCheck: [{\n                type: Input\n            }], groupExpansionDefault: [{\n                type: Input\n            }], trackByProp: [{\n                type: Input\n            }], selectAllRowsOnPage: [{\n                type: Input\n            }], virtualization: [{\n                type: Input\n            }], treeFromRelation: [{\n                type: Input\n            }], treeToRelation: [{\n                type: Input\n            }], summaryRow: [{\n                type: Input\n            }], summaryHeight: [{\n                type: Input\n            }], summaryPosition: [{\n                type: Input\n            }], scroll: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }], sort: [{\n                type: Output\n            }], page: [{\n                type: Output\n            }], reorder: [{\n                type: Output\n            }], resize: [{\n                type: Output\n            }], tableContextmenu: [{\n                type: Output\n            }], treeAction: [{\n                type: Output\n            }], isFixedHeader: [{\n                type: HostBinding,\n                args: ['class.fixed-header']\n            }], isFixedRow: [{\n                type: HostBinding,\n                args: ['class.fixed-row']\n            }], isVertScroll: [{\n                type: HostBinding,\n                args: ['class.scroll-vertical']\n            }], isVirtualized: [{\n                type: HostBinding,\n                args: ['class.virtualized']\n            }], isHorScroll: [{\n                type: HostBinding,\n                args: ['class.scroll-horz']\n            }], isSelectable: [{\n                type: HostBinding,\n                args: ['class.selectable']\n            }], isCheckboxSelection: [{\n                type: HostBinding,\n                args: ['class.checkbox-selection']\n            }], isCellSelection: [{\n                type: HostBinding,\n                args: ['class.cell-selection']\n            }], isSingleSelection: [{\n                type: HostBinding,\n                args: ['class.single-selection']\n            }], isMultiSelection: [{\n                type: HostBinding,\n                args: ['class.multi-selection']\n            }], isMultiClickSelection: [{\n                type: HostBinding,\n                args: ['class.multi-click-selection']\n            }], columnTemplates: [{\n                type: ContentChildren,\n                args: [DataTableColumnDirective]\n            }], rowDetail: [{\n                type: ContentChild,\n                args: [DatatableRowDetailDirective]\n            }], groupHeader: [{\n                type: ContentChild,\n                args: [DatatableGroupHeaderDirective]\n            }], footer: [{\n                type: ContentChild,\n                args: [DatatableFooterDirective]\n            }], bodyComponent: [{\n                type: ViewChild,\n                args: [DataTableBodyComponent]\n            }], headerComponent: [{\n                type: ViewChild,\n                args: [DataTableHeaderComponent]\n            }], rowIdentity: [{\n                type: Input\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass NgxDatatableModule {\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param configuration\n     */\n    static forRoot(configuration) {\n        return {\n            ngModule: NgxDatatableModule,\n            providers: [{ provide: 'configuration', useValue: configuration }]\n        };\n    }\n}\nNgxDatatableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxDatatableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxDatatableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxDatatableModule, declarations: [DataTableFooterTemplateDirective,\n        VisibilityDirective,\n        DraggableDirective,\n        ResizeableDirective,\n        OrderableDirective,\n        LongPressDirective,\n        ScrollerComponent,\n        DatatableComponent,\n        DataTableColumnDirective,\n        DataTableHeaderComponent,\n        DataTableHeaderCellComponent,\n        DataTableBodyComponent,\n        DataTableFooterComponent,\n        DataTablePagerComponent,\n        ProgressBarComponent,\n        DataTableBodyRowComponent,\n        DataTableRowWrapperComponent,\n        DatatableRowDetailDirective,\n        DatatableGroupHeaderDirective,\n        DatatableRowDetailTemplateDirective,\n        DataTableBodyCellComponent,\n        DataTableSelectionComponent,\n        DataTableColumnHeaderDirective,\n        DataTableColumnCellDirective,\n        DataTableColumnCellTreeToggle,\n        DatatableFooterDirective,\n        DatatableGroupHeaderTemplateDirective,\n        DataTableSummaryRowComponent], imports: [CommonModule], exports: [DatatableComponent,\n        DatatableRowDetailDirective,\n        DatatableGroupHeaderDirective,\n        DatatableRowDetailTemplateDirective,\n        DataTableColumnDirective,\n        DataTableColumnHeaderDirective,\n        DataTableColumnCellDirective,\n        DataTableColumnCellTreeToggle,\n        DataTableFooterTemplateDirective,\n        DatatableFooterDirective,\n        DataTablePagerComponent,\n        DatatableGroupHeaderTemplateDirective] });\nNgxDatatableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxDatatableModule, providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxDatatableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n                    declarations: [\n                        DataTableFooterTemplateDirective,\n                        VisibilityDirective,\n                        DraggableDirective,\n                        ResizeableDirective,\n                        OrderableDirective,\n                        LongPressDirective,\n                        ScrollerComponent,\n                        DatatableComponent,\n                        DataTableColumnDirective,\n                        DataTableHeaderComponent,\n                        DataTableHeaderCellComponent,\n                        DataTableBodyComponent,\n                        DataTableFooterComponent,\n                        DataTablePagerComponent,\n                        ProgressBarComponent,\n                        DataTableBodyRowComponent,\n                        DataTableRowWrapperComponent,\n                        DatatableRowDetailDirective,\n                        DatatableGroupHeaderDirective,\n                        DatatableRowDetailTemplateDirective,\n                        DataTableBodyCellComponent,\n                        DataTableSelectionComponent,\n                        DataTableColumnHeaderDirective,\n                        DataTableColumnCellDirective,\n                        DataTableColumnCellTreeToggle,\n                        DatatableFooterDirective,\n                        DatatableGroupHeaderTemplateDirective,\n                        DataTableSummaryRowComponent\n                    ],\n                    exports: [\n                        DatatableComponent,\n                        DatatableRowDetailDirective,\n                        DatatableGroupHeaderDirective,\n                        DatatableRowDetailTemplateDirective,\n                        DataTableColumnDirective,\n                        DataTableColumnHeaderDirective,\n                        DataTableColumnCellDirective,\n                        DataTableColumnCellTreeToggle,\n                        DataTableFooterTemplateDirective,\n                        DatatableFooterDirective,\n                        DataTablePagerComponent,\n                        DatatableGroupHeaderTemplateDirective\n                    ]\n                }]\n        }] });\n\nvar ClickType;\n(function (ClickType) {\n    ClickType[\"single\"] = \"single\";\n    ClickType[\"double\"] = \"double\";\n})(ClickType || (ClickType = {}));\n\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n    document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nfunction elementsFromPoint(x, y) {\n    const elements = [];\n    const previousPointerEvents = [];\n    let current; // TODO: window.getComputedStyle should be used with inferred type (Element)\n    let i;\n    let d;\n    //if (document === undefined) return elements;\n    // get all elements via elementFromPoint, and remove them from hit-testing in order\n    while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n        // push the element and its current style\n        elements.push(current);\n        previousPointerEvents.push({\n            value: current.style.getPropertyValue('pointer-events'),\n            priority: current.style.getPropertyPriority('pointer-events')\n        });\n        // add \"pointer-events: none\", to get to the underlying element\n        current.style.setProperty('pointer-events', 'none', 'important');\n    }\n    // restore the previous pointer-events values\n    for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]);) {\n        elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n    }\n    // return our results\n    return elements;\n}\n/*tslint:enable*/\n\n/*\n * Public API Surface of ngx-datatable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}