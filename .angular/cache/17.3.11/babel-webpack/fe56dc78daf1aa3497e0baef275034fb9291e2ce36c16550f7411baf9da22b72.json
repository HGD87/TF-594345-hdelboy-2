{"ast":null,"code":"import { MAT_DIALOG_DATA, MatDialogContent, MatDialogClose } from '@angular/material/dialog';\nimport { UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Staff } from '../../staff.model';\nimport { formatDate } from '@angular/common';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../staff.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/datepicker\";\nfunction FormDialogComponent_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Designation is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Mobile is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please select date \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormDialogComponent {\n  constructor(dialogRef, data, staffService, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.staffService = staffService;\n    this.fb = fb;\n    this.formControl = new UntypedFormControl('', [Validators.required\n    // Validators.email,\n    ]);\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.staff.name;\n      this.staff = data.staff;\n    } else {\n      this.dialogTitle = 'New Staff';\n      const blankObject = {};\n      this.staff = new Staff(blankObject);\n    }\n    this.staffForm = this.createContactForm();\n  }\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('email') ? 'Not a valid email' : '';\n  }\n  createContactForm() {\n    return this.fb.group({\n      id: [this.staff.id],\n      img: [this.staff.img],\n      name: [this.staff.name],\n      email: [this.staff.email, [Validators.required, Validators.email, Validators.minLength(5)]],\n      date: [formatDate(this.staff.date, 'yyyy-MM-dd', 'en'), [Validators.required]],\n      designation: [this.staff.designation],\n      address: [this.staff.address],\n      mobile: [this.staff.mobile]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  confirmAdd() {\n    this.staffService.addStaff(this.staffForm.getRawValue());\n  }\n  static {\n    this.ɵfac = function FormDialogComponent_Factory(t) {\n      return new (t || FormDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.StaffService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormDialogComponent,\n      selectors: [[\"app-form-dialog\", 5, \"e\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 69,\n      vars: 12,\n      consts: [[\"picker\", \"\"], [1, \"addContainer\"], [1, \"modalHeader\"], [1, \"editRowModal\"], [1, \"modalHeader\", \"clearfix\"], [\"alt\", \"avatar\", 3, \"src\"], [1, \"modal-about\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close dialog\", 1, \"modal-close-button\", 3, \"click\"], [\"mat-dialog-content\", \"\"], [1, \"register-form\", \"m-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"appearance\", \"outline\", 1, \"example-full-width\", \"mb-3\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [\"matSuffix\", \"\", 1, \"material-icons-outlined\", \"color-icon\", \"p-3\"], [\"matInput\", \"\", \"formControlName\", \"designation\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"mobile\", \"type\", \"number\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"matInput\", \"\", \"formControlName\", \"address\"], [1, \"example-button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", \"disabled\", \"mat-dialog-close\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"tabindex\", \"-1\", 3, \"click\"]],\n      template: function FormDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4);\n          i0.ɵɵelement(4, \"img\", 5);\n          i0.ɵɵelementStart(5, \"div\", 6);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_7_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.dialogRef.close());\n          });\n          i0.ɵɵelementStart(8, \"mat-icon\");\n          i0.ɵɵtext(9, \"close\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n          i0.ɵɵlistener(\"ngSubmit\", function FormDialogComponent_Template_form_ngSubmit_11_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submit);\n          });\n          i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"mat-form-field\", 12)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 13);\n          i0.ɵɵelementStart(18, \"mat-icon\", 14);\n          i0.ɵɵtext(19, \"face\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(20, FormDialogComponent_Conditional_20_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 11)(22, \"mat-form-field\", 12)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Designation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 15);\n          i0.ɵɵelementStart(26, \"mat-icon\", 14);\n          i0.ɵɵtext(27, \"business_center\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, FormDialogComponent_Conditional_28_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(29, \"div\", 10)(30, \"div\", 11)(31, \"mat-form-field\", 12)(32, \"mat-label\");\n          i0.ɵɵtext(33, \"Mobile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"input\", 16);\n          i0.ɵɵelementStart(35, \"mat-icon\", 14);\n          i0.ɵɵtext(36, \"phone\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(37, FormDialogComponent_Conditional_37_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 11)(39, \"mat-form-field\", 12)(40, \"mat-label\");\n          i0.ɵɵtext(41, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"input\", 17);\n          i0.ɵɵelementStart(43, \"mat-icon\", 14);\n          i0.ɵɵtext(44, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(45, FormDialogComponent_Conditional_45_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(46, \"div\", 10)(47, \"div\", 11)(48, \"mat-form-field\", 12)(49, \"mat-label\");\n          i0.ɵɵtext(50, \"Joining date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(51, \"input\", 18)(52, \"mat-datepicker-toggle\", 19)(53, \"mat-datepicker\", null, 0);\n          i0.ɵɵtemplate(55, FormDialogComponent_Conditional_55_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(56, \"div\", 10)(57, \"div\", 20)(58, \"mat-form-field\", 12)(59, \"mat-label\");\n          i0.ɵɵtext(60, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(61, \"textarea\", 21);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(62, \"div\", 10)(63, \"div\", 20)(64, \"div\", 22)(65, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_65_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.confirmAdd());\n          });\n          i0.ɵɵtext(66, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(67, \"button\", 24);\n          i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_67_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onNoClick());\n          });\n          i0.ɵɵtext(68, \"Cancel\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_10_0;\n          const picker_r2 = i0.ɵɵreference(54);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"src\", ctx.staff.img, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.dialogTitle, \" \");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.staffForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵconditional(20, ((tmp_4_0 = ctx.staffForm.get(\"name\")) == null ? null : tmp_4_0.hasError(\"required\")) ? 20 : -1);\n          i0.ɵɵadvance(8);\n          i0.ɵɵconditional(28, ((tmp_5_0 = ctx.staffForm.get(\"designation\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 28 : -1);\n          i0.ɵɵadvance(9);\n          i0.ɵɵconditional(37, ((tmp_6_0 = ctx.staffForm.get(\"mobile\")) == null ? null : tmp_6_0.hasError(\"required\")) ? 37 : -1);\n          i0.ɵɵadvance(8);\n          i0.ɵɵconditional(45, ((tmp_7_0 = ctx.staffForm.get(\"email\")) == null ? null : tmp_7_0.hasError(\"required\")) || ((tmp_7_0 = ctx.staffForm.get(\"email\")) == null ? null : tmp_7_0.touched) ? 45 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"matDatepicker\", picker_r2);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker_r2);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(55, ((tmp_10_0 = ctx.staffForm.get(\"date\")) == null ? null : tmp_10_0.hasError(\"required\")) ? 55 : -1);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"disabled\", !ctx.staffForm.valid)(\"mat-dialog-close\", 1);\n        }\n      },\n      dependencies: [MatButtonModule, i4.MatButton, i4.MatIconButton, MatIconModule, i5.MatIcon, MatDialogContent, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, ReactiveFormsModule, i3.FormGroupDirective, i3.FormControlName, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, MatInputModule, i7.MatInput, MatDatepickerModule, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, MatDialogClose],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["MAT_DIALOG_DATA","MatDialogContent","MatDialogClose","UntypedFormControl","Validators","FormsModule","ReactiveFormsModule","Staff","formatDate","MatDatepickerModule","MatInputModule","MatFormFieldModule","MatIconModule","MatButtonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","FormDialogComponent","constructor","dialogRef","data","staffService","fb","formControl","required","action","dialogTitle","staff","name","blankObject","staffForm","createContactForm","getErrorMessage","hasError","group","id","img","email","minLength","date","designation","address","mobile","submit","onNoClick","close","confirmAdd","addStaff","getRawValue","ɵɵdirectiveInject","i1","MatDialogRef","i2","StaffService","i3","UntypedFormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FormDialogComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","FormDialogComponent_Template_button_click_7_listener","ɵɵrestoreView","_r1","ɵɵresetView","FormDialogComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","FormDialogComponent_Conditional_20_Template","FormDialogComponent_Conditional_28_Template","FormDialogComponent_Conditional_37_Template","FormDialogComponent_Conditional_45_Template","FormDialogComponent_Conditional_55_Template","FormDialogComponent_Template_button_click_65_listener","FormDialogComponent_Template_button_click_67_listener","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl","ɵɵtextInterpolate1","ɵɵconditional","tmp_4_0","get","tmp_5_0","tmp_6_0","tmp_7_0","touched","picker_r2","tmp_10_0","valid","i4","MatButton","MatIconButton","i5","MatIcon","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i6","MatFormField","MatLabel","MatError","MatSuffix","i7","MatInput","i8","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/admin/staff/all-staff/dialog/form-dialog/form-dialog.component.ts","/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/admin/staff/all-staff/dialog/form-dialog/form-dialog.component.html"],"sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef, MatDialogContent, MatDialogClose } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { StaffService } from '../../staff.service';\r\nimport { UntypedFormControl, Validators, UntypedFormGroup, UntypedFormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Staff } from '../../staff.model';\r\nimport { formatDate } from '@angular/common';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nexport interface DialogData {\r\n  id: number;\r\n  action: string;\r\n  staff: Staff;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-dialog:not(e)',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogContent,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatDialogClose,\r\n  ],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  staffForm: UntypedFormGroup;\r\n  staff: Staff;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    public staffService: StaffService,\r\n    private fb: UntypedFormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.staff.name;\r\n      this.staff = data.staff;\r\n    } else {\r\n      this.dialogTitle = 'New Staff';\r\n      const blankObject = {} as Staff;\r\n      this.staff = new Staff(blankObject);\r\n    }\r\n    this.staffForm = this.createContactForm();\r\n  }\r\n  formControl = new UntypedFormControl('', [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): UntypedFormGroup {\r\n    return this.fb.group({\r\n      id: [this.staff.id],\r\n      img: [this.staff.img],\r\n      name: [this.staff.name],\r\n      email: [\r\n        this.staff.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      date: [\r\n        formatDate(this.staff.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required],\r\n      ],\r\n      designation: [this.staff.designation],\r\n      address: [this.staff.address],\r\n      mobile: [this.staff.mobile],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.staffService.addStaff(this.staffForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img [src]='staff.img' alt=\"avatar\">\n        <div class=\"modal-about\">\n          {{dialogTitle}}\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" class=\"modal-close-button\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"staffForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" required>\n            <mat-icon class=\"material-icons-outlined color-icon p-3\" matSuffix>face</mat-icon>\n            @if (staffForm.get('name')?.hasError('required')) {\n            <mat-error>\n              Name is required\n            </mat-error>\n            }\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Designation</mat-label>\n            <input matInput formControlName=\"designation\" required>\n            <mat-icon class=\"material-icons-outlined color-icon p-3\" matSuffix>business_center</mat-icon>\n            @if (staffForm.get('designation')?.hasError('required')) {\n            <mat-error>\n              Designation is required\n            </mat-error>\n            }\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Mobile</mat-label>\n            <input matInput formControlName=\"mobile\" type=\"number\">\n            <mat-icon class=\"material-icons-outlined color-icon p-3\" matSuffix>phone</mat-icon>\n            @if (staffForm.get('mobile')?.hasError('required')) {\n            <mat-error>\n              Mobile is required\n            </mat-error>\n            }\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n            <mat-icon class=\"material-icons-outlined color-icon p-3\" matSuffix>email</mat-icon>\n            @if (staffForm.get('email')?.hasError('required') || staffForm.get('email')?.touched) {\n            <mat-error>\n              Please enter a valid email address\n            </mat-error>\n            }\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Joining date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            @if (staffForm.get('date')?.hasError('required')) {\n            <mat-error>\n              Please select date\n            </mat-error>\n            }\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <textarea matInput formControlName=\"address\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [disabled]=\"!staffForm.valid\" [mat-dialog-close]=\"1\"\n              (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>"],"mappings":"AAAA,SAASA,eAAe,EAAgBC,gBAAgB,EAAEC,cAAc,QAAQ,0BAA0B;AAG1G,SAASC,kBAAkB,EAAEC,UAAU,EAAwCC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACvI,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;;;;ICa9CC,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAE,MAAA,yBACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAUZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAE,MAAA,gCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAYZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAE,MAAA,2BACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAUZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAE,MAAA,2CACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAaZH,EAAA,CAAAC,cAAA,gBAAW;IACTD,EAAA,CAAAE,MAAA,2BACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;AD3CxB,OAAM,MAAOC,mBAAmB;EAK9BC,YACSC,SAA4C,EACnBC,IAAgB,EACzCC,YAA0B,EACzBC,EAAsB;IAHvB,KAAAH,SAAS,GAATA,SAAS;IACgB,KAAAC,IAAI,GAAJA,IAAI;IAC7B,KAAAC,YAAY,GAAZA,YAAY;IACX,KAAAC,EAAE,GAAFA,EAAE;IAcZ,KAAAC,WAAW,GAAG,IAAIrB,kBAAkB,CAAC,EAAE,EAAE,CACvCC,UAAU,CAACqB;IACX;IAAA,CACD,CAAC;IAfA;IACA,IAAI,CAACC,MAAM,GAAGL,IAAI,CAACK,MAAM;IACzB,IAAI,IAAI,CAACA,MAAM,KAAK,MAAM,EAAE;MAC1B,IAAI,CAACC,WAAW,GAAGN,IAAI,CAACO,KAAK,CAACC,IAAI;MAClC,IAAI,CAACD,KAAK,GAAGP,IAAI,CAACO,KAAK;KACxB,MAAM;MACL,IAAI,CAACD,WAAW,GAAG,WAAW;MAC9B,MAAMG,WAAW,GAAG,EAAW;MAC/B,IAAI,CAACF,KAAK,GAAG,IAAIrB,KAAK,CAACuB,WAAW,CAAC;;IAErC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,iBAAiB,EAAE;EAC3C;EAKAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACT,WAAW,CAACU,QAAQ,CAAC,UAAU,CAAC,GACxC,gBAAgB,GAChB,IAAI,CAACV,WAAW,CAACU,QAAQ,CAAC,OAAO,CAAC,GAChC,mBAAmB,GACnB,EAAE;EACV;EACAF,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACT,EAAE,CAACY,KAAK,CAAC;MACnBC,EAAE,EAAE,CAAC,IAAI,CAACR,KAAK,CAACQ,EAAE,CAAC;MACnBC,GAAG,EAAE,CAAC,IAAI,CAACT,KAAK,CAACS,GAAG,CAAC;MACrBR,IAAI,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC,IAAI,CAAC;MACvBS,KAAK,EAAE,CACL,IAAI,CAACV,KAAK,CAACU,KAAK,EAChB,CAAClC,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACkC,KAAK,EAAElC,UAAU,CAACmC,SAAS,CAAC,CAAC,CAAC,CAAC,CACjE;MACDC,IAAI,EAAE,CACJhC,UAAU,CAAC,IAAI,CAACoB,KAAK,CAACY,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,EAC/C,CAACpC,UAAU,CAACqB,QAAQ,CAAC,CACtB;MACDgB,WAAW,EAAE,CAAC,IAAI,CAACb,KAAK,CAACa,WAAW,CAAC;MACrCC,OAAO,EAAE,CAAC,IAAI,CAACd,KAAK,CAACc,OAAO,CAAC;MAC7BC,MAAM,EAAE,CAAC,IAAI,CAACf,KAAK,CAACe,MAAM;KAC3B,CAAC;EACJ;EACAC,MAAMA,CAAA;IACJ;EAAA;EAEFC,SAASA,CAAA;IACP,IAAI,CAACzB,SAAS,CAAC0B,KAAK,EAAE;EACxB;EACOC,UAAUA,CAAA;IACf,IAAI,CAACzB,YAAY,CAAC0B,QAAQ,CAAC,IAAI,CAACjB,SAAS,CAACkB,WAAW,EAAE,CAAC;EAC1D;;;uBA5DW/B,mBAAmB,EAAAJ,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAtC,EAAA,CAAAoC,iBAAA,CAOpBlD,eAAe,GAAAc,EAAA,CAAAoC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAxC,EAAA,CAAAoC,iBAAA,CAAAK,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;YAPdtC,mBAAmB;MAAAuC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA7C,EAAA,CAAA8C,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UChC1BpD,EAHN,CAAAC,cAAA,aAA0B,aACC,aACG,aACU;UAChCD,EAAA,CAAAsD,SAAA,aAAoC;UACpCtD,EAAA,CAAAC,cAAA,aAAyB;UACvBD,EAAA,CAAAE,MAAA,GACF;UAEJF,EAFI,CAAAG,YAAA,EAAM,EACF,EACF;UACNH,EAAA,CAAAC,cAAA,gBAAyG;UAAjFD,EAAA,CAAAuD,UAAA,mBAAAC,qDAAA;YAAAxD,EAAA,CAAAyD,aAAA,CAAAC,GAAA;YAAA,OAAA1D,EAAA,CAAA2D,WAAA,CAASN,GAAA,CAAA/C,SAAA,CAAA0B,KAAA,EAAiB;UAAA,EAAC;UACjDhC,EAAA,CAAAC,cAAA,eAAU;UAAAD,EAAA,CAAAE,MAAA,YAAK;UAEnBF,EAFmB,CAAAG,YAAA,EAAW,EACnB,EACL;UAEJH,EADF,CAAAC,cAAA,cAAwB,eACsD;UAApBD,EAAA,CAAAuD,UAAA,sBAAAK,uDAAA;YAAA5D,EAAA,CAAAyD,aAAA,CAAAC,GAAA;YAAA,OAAA1D,EAAA,CAAA2D,WAAA,CAAAN,GAAA,CAAAvB,MAAA;UAAA,EAAmB;UAInE9B,EAHN,CAAAC,cAAA,eAAiB,eACyC,0BACe,iBACxD;UAAAD,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC3BH,EAAA,CAAAsD,SAAA,iBAAgD;UAChDtD,EAAA,CAAAC,cAAA,oBAAmE;UAAAD,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAClFH,EAAA,CAAA6D,UAAA,KAAAC,2CAAA,oBAAmD;UAMvD9D,EADE,CAAAG,YAAA,EAAiB,EACb;UAGFH,EAFJ,CAAAC,cAAA,eAAwD,0BACe,iBACxD;UAAAD,EAAA,CAAAE,MAAA,mBAAW;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAClCH,EAAA,CAAAsD,SAAA,iBAAuD;UACvDtD,EAAA,CAAAC,cAAA,oBAAmE;UAAAD,EAAA,CAAAE,MAAA,uBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAC7FH,EAAA,CAAA6D,UAAA,KAAAE,2CAAA,oBAA0D;UAOhE/D,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,eAAiB,eACyC,0BACe,iBACxD;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC7BH,EAAA,CAAAsD,SAAA,iBAAuD;UACvDtD,EAAA,CAAAC,cAAA,oBAAmE;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAW;UACnFH,EAAA,CAAA6D,UAAA,KAAAG,2CAAA,oBAAqD;UAMzDhE,EADE,CAAAG,YAAA,EAAiB,EACb;UAGFH,EAFJ,CAAAC,cAAA,eAAwD,0BACe,iBACxD;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC5BH,EAAA,CAAAsD,SAAA,iBAAiD;UACjDtD,EAAA,CAAAC,cAAA,oBAAmE;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAW;UACnFH,EAAA,CAAA6D,UAAA,KAAAI,2CAAA,oBAAuF;UAO7FjE,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,eAAiB,eACyC,0BACe,iBACxD;UAAAD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAGnCH,EAFA,CAAAsD,SAAA,iBAAgE,iCACQ,+BAC/B;UACzCtD,EAAA,CAAA6D,UAAA,KAAAK,2CAAA,oBAAmD;UAOzDlE,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,eAAiB,eAC2C,0BACa,iBACxD;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC9BH,EAAA,CAAAsD,SAAA,oBAAwD;UAG9DtD,EAFI,CAAAG,YAAA,EAAiB,EACb,EACF;UAIAH,EAHN,CAAAC,cAAA,eAAiB,eAC2C,eACxB,kBAEL;UAAvBD,EAAA,CAAAuD,UAAA,mBAAAY,sDAAA;YAAAnE,EAAA,CAAAyD,aAAA,CAAAC,GAAA;YAAA,OAAA1D,EAAA,CAAA2D,WAAA,CAASN,GAAA,CAAApB,UAAA,EAAY;UAAA,EAAC;UAACjC,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACtCH,EAAA,CAAAC,cAAA,kBAA2E;UAApCD,EAAA,CAAAuD,UAAA,mBAAAa,sDAAA;YAAApE,EAAA,CAAAyD,aAAA,CAAAC,GAAA;YAAA,OAAA1D,EAAA,CAAA2D,WAAA,CAASN,GAAA,CAAAtB,SAAA,EAAW;UAAA,EAAC;UAAe/B,EAAA,CAAAE,MAAA,cAAM;UAM7FF,EAN6F,CAAAG,YAAA,EAAS,EACtF,EACF,EACF,EACD,EACH,EACF;;;;;;;;;UAlGOH,EAAA,CAAAqE,SAAA,GAAiB;UAAjBrE,EAAA,CAAAsE,UAAA,QAAAjB,GAAA,CAAAvC,KAAA,CAAAS,GAAA,EAAAvB,EAAA,CAAAuE,aAAA,CAAiB;UAEpBvE,EAAA,CAAAqE,SAAA,GACF;UADErE,EAAA,CAAAwE,kBAAA,MAAAnB,GAAA,CAAAxC,WAAA,MACF;UAQ4Bb,EAAA,CAAAqE,SAAA,GAAuB;UAAvBrE,EAAA,CAAAsE,UAAA,cAAAjB,GAAA,CAAApC,SAAA,CAAuB;UAO/CjB,EAAA,CAAAqE,SAAA,GAIC;UAJDrE,EAAA,CAAAyE,aAAA,OAAAC,OAAA,GAAArB,GAAA,CAAApC,SAAA,CAAA0D,GAAA,2BAAAD,OAAA,CAAAtD,QAAA,wBAIC;UAQDpB,EAAA,CAAAqE,SAAA,GAIC;UAJDrE,EAAA,CAAAyE,aAAA,OAAAG,OAAA,GAAAvB,GAAA,CAAApC,SAAA,CAAA0D,GAAA,kCAAAC,OAAA,CAAAxD,QAAA,wBAIC;UAUDpB,EAAA,CAAAqE,SAAA,GAIC;UAJDrE,EAAA,CAAAyE,aAAA,OAAAI,OAAA,GAAAxB,GAAA,CAAApC,SAAA,CAAA0D,GAAA,6BAAAE,OAAA,CAAAzD,QAAA,wBAIC;UAQDpB,EAAA,CAAAqE,SAAA,GAIC;UAJDrE,EAAA,CAAAyE,aAAA,OAAAK,OAAA,GAAAzB,GAAA,CAAApC,SAAA,CAAA0D,GAAA,4BAAAG,OAAA,CAAA1D,QAAA,mBAAA0D,OAAA,GAAAzB,GAAA,CAAApC,SAAA,CAAA0D,GAAA,4BAAAG,OAAA,CAAAC,OAAA,YAIC;UAQe/E,EAAA,CAAAqE,SAAA,GAAwB;UAAxBrE,EAAA,CAAAsE,UAAA,kBAAAU,SAAA,CAAwB;UACPhF,EAAA,CAAAqE,SAAA,EAAc;UAAdrE,EAAA,CAAAsE,UAAA,QAAAU,SAAA,CAAc;UAE/ChF,EAAA,CAAAqE,SAAA,GAIC;UAJDrE,EAAA,CAAAyE,aAAA,OAAAQ,QAAA,GAAA5B,GAAA,CAAApC,SAAA,CAAA0D,GAAA,2BAAAM,QAAA,CAAA7D,QAAA,wBAIC;UAeyCpB,EAAA,CAAAqE,SAAA,IAA6B;UAACrE,EAA9B,CAAAsE,UAAA,cAAAjB,GAAA,CAAApC,SAAA,CAAAiE,KAAA,CAA6B,uBAAuB;;;qBDtEtGnF,eAAe,EAAAoF,EAAA,CAAAC,SAAA,EAAAD,EAAA,CAAAE,aAAA,EACfvF,aAAa,EAAAwF,EAAA,CAAAC,OAAA,EACbpG,gBAAgB,EAChBI,WAAW,EAAAkD,EAAA,CAAA+C,aAAA,EAAA/C,EAAA,CAAAgD,oBAAA,EAAAhD,EAAA,CAAAiD,mBAAA,EAAAjD,EAAA,CAAAkD,eAAA,EAAAlD,EAAA,CAAAmD,oBAAA,EAAAnD,EAAA,CAAAoD,iBAAA,EACXrG,mBAAmB,EAAAiD,EAAA,CAAAqD,kBAAA,EAAArD,EAAA,CAAAsD,eAAA,EACnBlG,kBAAkB,EAAAmG,EAAA,CAAAC,YAAA,EAAAD,EAAA,CAAAE,QAAA,EAAAF,EAAA,CAAAG,QAAA,EAAAH,EAAA,CAAAI,SAAA,EAClBxG,cAAc,EAAAyG,EAAA,CAAAC,QAAA,EACd3G,mBAAmB,EAAA4G,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,kBAAA,EAAAF,EAAA,CAAAG,mBAAA,EACnBtH,cAAc;MAAAuH,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}