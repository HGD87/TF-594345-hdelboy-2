{"ast":null,"code":"import { HTTP_INTERCEPTORS, HttpClient, provideHttpClient } from '@angular/common/http';\nimport { importProvidersFrom } from '@angular/core';\nimport { APP_ROUTE } from './app.routes';\nimport { provideRouter } from '@angular/router';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { JwtInterceptor } from '@core/interceptor/jwt.interceptor';\nimport { ErrorInterceptor } from '@core/interceptor/error.interceptor';\nimport { DirectionService, LanguageService } from '@core';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { FeatherModule } from 'angular-feather';\nimport { allIcons } from 'angular-feather/icons';\nexport function createTranslateLoader(http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nexport const appConfig = {\n  providers: [provideHttpClient(), provideRouter(APP_ROUTE), provideAnimations(), {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  }, DirectionService, LanguageService, importProvidersFrom(TranslateModule.forRoot({\n    defaultLanguage: 'en',\n    loader: {\n      provide: TranslateLoader,\n      useFactory: createTranslateLoader,\n      deps: [HttpClient]\n    }\n  })), {\n    provide: MAT_DATE_LOCALE,\n    useValue: 'en-GB'\n  }, {\n    provide: DateAdapter,\n    useClass: MomentDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: {\n      parse: {\n        dateInput: 'YYYY-MM-DD'\n      },\n      display: {\n        dateInput: 'YYYY-MM-DD',\n        monthYearLabel: 'YYYY MMM',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'YYYY MMM'\n      }\n    }\n  }, importProvidersFrom(FeatherModule.pick(allIcons))]\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","HttpClient","provideHttpClient","importProvidersFrom","APP_ROUTE","provideRouter","provideAnimations","HashLocationStrategy","LocationStrategy","JwtInterceptor","ErrorInterceptor","DirectionService","LanguageService","TranslateLoader","TranslateModule","TranslateHttpLoader","DateAdapter","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","FeatherModule","allIcons","createTranslateLoader","http","appConfig","providers","provide","useClass","multi","forRoot","defaultLanguage","loader","useFactory","deps","useValue","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","pick"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/app.config.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpClient, provideHttpClient } from '@angular/common/http';\r\nimport { ApplicationConfig, importProvidersFrom } from '@angular/core';\r\nimport { APP_ROUTE } from './app.routes';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { JwtInterceptor } from '@core/interceptor/jwt.interceptor';\r\nimport { ErrorInterceptor } from '@core/interceptor/error.interceptor';\r\nimport { DirectionService, LanguageService } from '@core';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { FeatherModule } from 'angular-feather';\r\nimport { allIcons } from 'angular-feather/icons';\r\n\r\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n    providers: [\r\n        provideHttpClient(),\r\n        provideRouter(APP_ROUTE),\r\n        provideAnimations(),\r\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n        DirectionService, LanguageService,\r\n        importProvidersFrom(\r\n            TranslateModule.forRoot({\r\n                defaultLanguage: 'en',\r\n                loader: {\r\n                    provide: TranslateLoader,\r\n                    useFactory: createTranslateLoader,\r\n                    deps: [HttpClient],\r\n                },\r\n            })\r\n        ),\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        { provide: DateAdapter, useClass: MomentDateAdapter },\r\n        {\r\n            provide: MAT_DATE_FORMATS,\r\n            useValue: {\r\n                parse: {\r\n                    dateInput: 'YYYY-MM-DD',\r\n                },\r\n                display: {\r\n                    dateInput: 'YYYY-MM-DD',\r\n                    monthYearLabel: 'YYYY MMM',\r\n                    dateA11yLabel: 'LL',\r\n                    monthYearA11yLabel: 'YYYY MMM',\r\n                },\r\n            },\r\n        },\r\n        importProvidersFrom(FeatherModule.pick(allIcons)),\r\n\r\n    ],\r\n\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,sBAAsB;AACvF,SAA4BC,mBAAmB,QAAQ,eAAe;AACtE,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,oBAAoB,EAAEC,gBAAgB,QAAQ,iBAAiB;AACxE,SAASC,cAAc,QAAQ,mCAAmC;AAClE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,OAAO;AACzD,SAASC,eAAe,EAAEC,eAAe,QAAQ,qBAAqB;AACtE,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,WAAW,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,wBAAwB;AACvF,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,OAAM,SAAUC,qBAAqBA,CAACC,IAAgB;EAClD,OAAO,IAAIR,mBAAmB,CAACQ,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC;AACnE;AAEA,OAAO,MAAMC,SAAS,GAAsB;EACxCC,SAAS,EAAE,CACPvB,iBAAiB,EAAE,EACnBG,aAAa,CAACD,SAAS,CAAC,EACxBE,iBAAiB,EAAE,EACnB;IAAEoB,OAAO,EAAElB,gBAAgB;IAAEmB,QAAQ,EAAEpB;EAAoB,CAAE,EAC7D;IAAEmB,OAAO,EAAE1B,iBAAiB;IAAE2B,QAAQ,EAAElB,cAAc;IAAEmB,KAAK,EAAE;EAAI,CAAE,EACrE;IAAEF,OAAO,EAAE1B,iBAAiB;IAAE2B,QAAQ,EAAEjB,gBAAgB;IAAEkB,KAAK,EAAE;EAAI,CAAE,EACvEjB,gBAAgB,EAAEC,eAAe,EACjCT,mBAAmB,CACfW,eAAe,CAACe,OAAO,CAAC;IACpBC,eAAe,EAAE,IAAI;IACrBC,MAAM,EAAE;MACJL,OAAO,EAAEb,eAAe;MACxBmB,UAAU,EAAEV,qBAAqB;MACjCW,IAAI,EAAE,CAAChC,UAAU;;GAExB,CAAC,CACL,EACD;IAAEyB,OAAO,EAAER,eAAe;IAAEgB,QAAQ,EAAE;EAAO,CAAE,EAC/C;IAAER,OAAO,EAAEV,WAAW;IAAEW,QAAQ,EAAER;EAAiB,CAAE,EACrD;IACIO,OAAO,EAAET,gBAAgB;IACzBiB,QAAQ,EAAE;MACNC,KAAK,EAAE;QACHC,SAAS,EAAE;OACd;MACDC,OAAO,EAAE;QACLD,SAAS,EAAE,YAAY;QACvBE,cAAc,EAAE,UAAU;QAC1BC,aAAa,EAAE,IAAI;QACnBC,kBAAkB,EAAE;;;GAG/B,EACDrC,mBAAmB,CAACiB,aAAa,CAACqB,IAAI,CAACpB,QAAQ,CAAC,CAAC;CAIxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}