{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomeworkService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = 'assets/data/stdHomework.json';\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllHomework() {\n    return this.httpClient.get(this.API_URL);\n  }\n  addHomework(homework) {\n    this.dialogData = homework;\n    // this.httpClient.post(this.API_URL, homework)\n    //   .subscribe({\n    //     next: (data) => {\n    //       this.dialogData = homework;\n    //     },\n    //     error: (error: HttpErrorResponse) => {\n    //        // error code here\n    //     },\n    //   });\n  }\n  updateHomework(homework) {\n    this.dialogData = homework;\n    // this.httpClient.put(this.API_URL + homework.id, homework)\n    //     .subscribe({\n    //       next: (data) => {\n    //         this.dialogData = homework;\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  deleteHomework(id) {\n    console.log(id);\n    // this.httpClient.delete(this.API_URL + id)\n    //     .subscribe({\n    //       next: (data) => {\n    //         console.log(id);\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  static {\n    this.ɵfac = function HomeworkService_Factory(t) {\n      return new (t || HomeworkService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HomeworkService,\n      factory: HomeworkService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","HomeworkService","constructor","httpClient","API_URL","dataChange","data","value","getDialogData","dialogData","getAllHomework","get","addHomework","homework","updateHomework","deleteHomework","id","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/student/homework/homework.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Homework } from './homework.modal';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n\r\nexport class HomeworkService {\r\n  private readonly API_URL = 'assets/data/stdHomework.json';\r\n\r\n  dataChange: BehaviorSubject<Homework[]> = new BehaviorSubject<Homework[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData!: Homework;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  get data(): Homework[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n\r\n  /** CRUD METHODS */\r\n  getAllHomework(): Observable<Homework[]> {\r\n    return this.httpClient.get<Homework[]>(this.API_URL);\r\n  }\r\n\r\n  addHomework(homework: Homework): void {\r\n    this.dialogData = homework;\r\n\r\n    // this.httpClient.post(this.API_URL, homework)\r\n    //   .subscribe({\r\n    //     next: (data) => {\r\n    //       this.dialogData = homework;\r\n    //     },\r\n    //     error: (error: HttpErrorResponse) => {\r\n    //        // error code here\r\n    //     },\r\n    //   });\r\n  }\r\n\r\n  updateHomework(homework: Homework): void {\r\n    this.dialogData = homework;\r\n\r\n    // this.httpClient.put(this.API_URL + homework.id, homework)\r\n    //     .subscribe({\r\n    //       next: (data) => {\r\n    //         this.dialogData = homework;\r\n    //       },\r\n    //       error: (error: HttpErrorResponse) => {\r\n    //          // error code here\r\n    //       },\r\n    //     });\r\n  }\r\n\r\n  deleteHomework(id: number): void {\r\n    console.log(id);\r\n\r\n    // this.httpClient.delete(this.API_URL + id)\r\n    //     .subscribe({\r\n    //       next: (data) => {\r\n    //         console.log(id);\r\n    //       },\r\n    //       error: (error: HttpErrorResponse) => {\r\n    //          // error code here\r\n    //       },\r\n    //     });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;;AASlD,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IANb,KAAAC,OAAO,GAAG,8BAA8B;IAEzD,KAAAC,UAAU,GAAgC,IAAIL,eAAe,CAAa,EAAE,CAAC;EAI/B;EAE9C,IAAIM,IAAIA,CAAA;IACN,OAAO,IAAI,CAACD,UAAU,CAACE,KAAK;EAC9B;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACC,UAAU;EACxB;EAEA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAa,IAAI,CAACP,OAAO,CAAC;EACtD;EAEAQ,WAAWA,CAACC,QAAkB;IAC5B,IAAI,CAACJ,UAAU,GAAGI,QAAQ;IAE1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEAC,cAAcA,CAACD,QAAkB;IAC/B,IAAI,CAACJ,UAAU,GAAGI,QAAQ;IAE1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEAE,cAAcA,CAACC,EAAU;IACvBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;;uBA9DWf,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfrB,eAAe;MAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;MAAAC,UAAA,EAJd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}