{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"canvas\"];\nconst _c1 = [\"rLabel\"];\nconst _c2 = [\"reading\"];\nconst _c3 = [[[\"ngx-gauge-prepend\"]], [[\"ngx-gauge-value\"]], [[\"ngx-gauge-append\"]], [[\"ngx-gauge-label\"]]];\nconst _c4 = [\"ngx-gauge-prepend\", \"ngx-gauge-value\", \"ngx-gauge-append\", \"ngx-gauge-label\"];\nfunction NgxGauge_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction NgxGauge_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.prepend);\n  }\n}\nfunction NgxGauge_ng_content_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction NgxGauge_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.value));\n  }\n}\nfunction NgxGauge_ng_content_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction NgxGauge_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.append);\n  }\n}\nfunction NgxGauge_ng_content_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction NgxGauge_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nfunction cssUnit(value) {\n  return `${value}px`;\n}\nfunction isNumber(value) {\n  return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\nclass NgxGaugeAppend {\n  static {\n    this.ɵfac = function NgxGaugeAppend_Factory(t) {\n      return new (t || NgxGaugeAppend)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgxGaugeAppend,\n      selectors: [[\"ngx-gauge-append\"]],\n      exportAs: [\"ngxGaugeAppend\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeAppend, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-append\",\n      exportAs: \"ngxGaugeAppend\"\n    }]\n  }], null, null);\n})();\nclass NgxGaugePrepend {\n  static {\n    this.ɵfac = function NgxGaugePrepend_Factory(t) {\n      return new (t || NgxGaugePrepend)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgxGaugePrepend,\n      selectors: [[\"ngx-gauge-prepend\"]],\n      exportAs: [\"ngxGaugePrepend\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugePrepend, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-prepend\",\n      exportAs: \"ngxGaugePrepend\"\n    }]\n  }], null, null);\n})();\nclass NgxGaugeValue {\n  static {\n    this.ɵfac = function NgxGaugeValue_Factory(t) {\n      return new (t || NgxGaugeValue)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgxGaugeValue,\n      selectors: [[\"ngx-gauge-value\"]],\n      exportAs: [\"ngxGaugeValue\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeValue, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-value\",\n      exportAs: \"ngxGaugeValue\"\n    }]\n  }], null, null);\n})();\nclass NgxGaugeLabel {\n  static {\n    this.ɵfac = function NgxGaugeLabel_Factory(t) {\n      return new (t || NgxGaugeLabel)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgxGaugeLabel,\n      selectors: [[\"ngx-gauge-label\"]],\n      exportAs: [\"ngxGaugeLabel\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeLabel, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-label\",\n      exportAs: \"ngxGaugeLabel\"\n    }]\n  }], null, null);\n})();\nconst DEFAULTS = {\n  MIN: 0,\n  MAX: 100,\n  TYPE: 'arch',\n  THICK: 4,\n  FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n  BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n  CAP: 'butt',\n  SIZE: 200\n};\nclass NgxGauge {\n  get size() {\n    return this._size;\n  }\n  set size(value) {\n    this._size = coerceNumberProperty(value);\n  }\n  get margin() {\n    return this._margin;\n  }\n  set margin(value) {\n    this._margin = coerceNumberProperty(value);\n  }\n  get min() {\n    return this._min;\n  }\n  set min(value) {\n    this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n  }\n  get animate() {\n    return this._animate;\n  }\n  set animate(value) {\n    this._animate = coerceBooleanProperty(value);\n  }\n  get max() {\n    return this._max;\n  }\n  set max(value) {\n    this._max = coerceNumberProperty(value, DEFAULTS.MAX);\n  }\n  get value() {\n    return this._value;\n  }\n  set value(val) {\n    this._value = coerceNumberProperty(val);\n  }\n  constructor(_elementRef, _renderer) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._size = DEFAULTS.SIZE;\n    this._min = DEFAULTS.MIN;\n    this._max = DEFAULTS.MAX;\n    this._animate = true;\n    this._margin = 0;\n    this._initialized = false;\n    this._animationRequestID = 0;\n    this.ariaLabel = '';\n    this.ariaLabelledby = null;\n    this.type = DEFAULTS.TYPE;\n    this.cap = DEFAULTS.CAP;\n    this.thick = DEFAULTS.THICK;\n    this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\n    this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\n    // { \"40\" : { color: \"green\", bgOpacity: .2 }, ... }\n    this.thresholds = Object.create(null);\n    // { \"25\": { color: '#ccc', type: 'line', size: 8, label: \"25 lbs\" }, ... }\n    this.markers = Object.create(null);\n    this._value = 0;\n    this.duration = 1200;\n  }\n  ngOnInit() {\n    // if markers are to be added, but no margin specified then here we add 10 px.\n    if (this.markers && Object.keys(this.markers).length > 0 && !this._margin) this._margin = 10;\n  }\n  ngOnChanges(changes) {\n    const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\n    const isDataChanged = changes['value'] || changes['min'] || changes['max'];\n    if (this._initialized) {\n      if (isDataChanged) {\n        let nv;\n        if (changes['value']) {\n          nv = Number(changes['value'].currentValue);\n          nv = isNaN(nv) ? 0 : nv;\n          const prevVal = Number(changes['value'].previousValue);\n          this._oldChangeVal = isNaN(prevVal) ? this._oldChangeVal : prevVal;\n        }\n        this._update(nv, this._oldChangeVal);\n      }\n      if (isCanvasPropertyChanged) {\n        this._destroy();\n        this._init();\n      }\n    }\n  }\n  _updateSize() {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\n    this._canvas.nativeElement.width = this._getWidth();\n    this._canvas.nativeElement.height = this._getCanvasHeight();\n    this._renderer.setStyle(this._label.nativeElement, 'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\n    this._renderer.setStyle(this._reading.nativeElement, 'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\n  }\n  ngAfterViewInit() {\n    if (this._canvas) {\n      this._init();\n    }\n  }\n  ngOnDestroy() {\n    this._destroy();\n  }\n  _getBounds(type) {\n    let head, tail, start, end;\n    if (type == 'semi') {\n      head = Math.PI;\n      tail = 2 * Math.PI;\n      start = 180;\n      end = 360;\n    } else if (type == 'full') {\n      head = 1.5 * Math.PI;\n      tail = 3.5 * Math.PI;\n      start = 270;\n      end = start + 360;\n    } else if (type === 'arch') {\n      head = 0.8 * Math.PI;\n      tail = 2.2 * Math.PI;\n      start = 180 - 0.2 * 180;\n      end = 360 + 0.2 * 180;\n    }\n    return {\n      head,\n      tail,\n      start,\n      end\n    };\n  }\n  _drawShell(start, middle, tail, color) {\n    let center = this._getCenter(),\n      radius = this._getRadius();\n    if (this._initialized) {\n      this._clear();\n      this._drawMarkersAndTicks();\n      let ranges = this._getBackgroundColorRanges();\n      this._context.lineWidth = this.thick;\n      if (ranges && ranges.length > 0) {\n        // if background color is not specified then use default background, unless opacity is provided in which case use the color\n        // and opactity against color, to form the background color.\n        this._context.lineCap = 'butt';\n        for (let i = 0; i < ranges.length; ++i) {\n          let r = ranges[i];\n          this._context.beginPath();\n          this._context.strokeStyle = r.backgroundColor ? r.backgroundColor : r.bgOpacity ? r.color : this.backgroundColor;\n          if (r.bgOpacity !== undefined && r.bgOpacity !== null) {\n            this._context.globalAlpha = r.bgOpacity;\n          }\n          this._context.arc(center.x, center.y, radius, this._getDisplacement(r.start), this._getDisplacement(r.end), false);\n          this._context.stroke();\n          this._context.globalAlpha = 1;\n        }\n      } else {\n        this._context.lineCap = this.cap;\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, start, tail, false);\n        this._context.stroke();\n      }\n      this._drawFill(start, middle, tail, color);\n    }\n  }\n  _drawFill(start, middle, tail, color) {\n    let center = this._getCenter(),\n      radius = this._getRadius();\n    this._context.lineCap = this.cap;\n    this._context.lineWidth = this.thick;\n    middle = Math.max(middle, start); // never below 0%\n    middle = Math.min(middle, tail); // never exceed 100%\n    this._context.lineCap = this.cap;\n    this._context.lineWidth = this.thick;\n    this._context.beginPath();\n    this._context.strokeStyle = color;\n    this._context.arc(center.x, center.y, radius, start, middle, false);\n    this._context.stroke();\n  }\n  _addMarker(angle, color, label, type, len, font) {\n    var rad = angle * Math.PI / 180;\n    let offset = 2;\n    if (!len) len = 8;\n    if (!type) type = 'line';\n    let center = this._getCenter(),\n      radius = this._getRadius();\n    let x = (radius + this.thick / 2 + offset) * Math.cos(rad) + center.x;\n    let y = (radius + this.thick / 2 + offset) * Math.sin(rad) + center.y;\n    let x2 = (radius + this.thick / 2 + offset + len) * Math.cos(rad) + center.x;\n    let y2 = (radius + this.thick / 2 + offset + len) * Math.sin(rad) + center.y;\n    if (type == 'triangle') {\n      //Draw the triangle marker\n      this._context.beginPath();\n      this._context.strokeStyle = color;\n      this._context.moveTo(x, y);\n      this._context.lineWidth = 1;\n      let a2 = angle - 45;\n      let a3 = angle + 45;\n      if (a2 < 0) a2 += 360;\n      if (a2 > 360) a2 -= 360;\n      if (a3 < 0) a3 += 360;\n      if (a3 > 360) a3 -= 360;\n      let rad2 = a2 * Math.PI / 180;\n      let x3 = len * Math.cos(rad2) + x;\n      let y3 = len * Math.sin(rad2) + y;\n      this._context.lineTo(x3, y3);\n      let rad3 = a3 * Math.PI / 180;\n      let x4 = len * Math.cos(rad3) + x;\n      let y4 = len * Math.sin(rad3) + y;\n      this._context.lineTo(x4, y4);\n      this._context.lineTo(x, y);\n      this._context.closePath();\n      this._context.stroke();\n      this._context.fillStyle = color;\n      this._context.fill();\n    } else {\n      //line\n      this._context.beginPath();\n      this._context.lineWidth = .5;\n      this._context.strokeStyle = color;\n      this._context.moveTo(x, y);\n      this._context.lineTo(x2, y2);\n      this._context.closePath();\n      this._context.stroke();\n    }\n    if (label) {\n      this._context.save();\n      this._context.translate(x2, y2);\n      this._context.rotate((angle + 90) * (Math.PI / 180));\n      this._context.textAlign = \"center\";\n      this._context.font = font ? font : '13px Arial';\n      this._context.fillText(label, 0, -3);\n      this._context.restore();\n    }\n  }\n  _clear() {\n    this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n  }\n  _getWidth() {\n    return this.size;\n  }\n  _getHeight() {\n    return this.size;\n  }\n  // canvas height will be shorter for type 'semi' and 'arch'\n  _getCanvasHeight() {\n    return this.type == 'arch' || this.type == 'semi' ? 0.85 * this._getHeight() : this._getHeight();\n  }\n  _getRadius() {\n    const center = this._getCenter();\n    var rad = center.x - this.thick;\n    if (this._margin > 0) rad -= this._margin;\n    return rad;\n  }\n  _getCenter() {\n    var x = this._getWidth() / 2,\n      y = this._getHeight() / 2;\n    return {\n      x,\n      y\n    };\n  }\n  _init() {\n    this._context = this._canvas.nativeElement.getContext('2d');\n    this._initialized = true;\n    this._updateSize();\n    this._create();\n  }\n  _destroy() {\n    if (this._animationRequestID) {\n      window.cancelAnimationFrame(this._animationRequestID);\n      this._animationRequestID = 0;\n    }\n    this._clear();\n    this._context = null;\n    this._initialized = false;\n  }\n  _getForegroundColorByRange(value) {\n    const thresh = this._getThresholdMatchForValue(value);\n    return thresh && thresh.color ? thresh.color : this.foregroundColor;\n  }\n  _getThresholdMatchForValue(value) {\n    const match = Object.keys(this.thresholds).filter(function (item) {\n      return isNumber(item) && Number(item) <= value;\n    }).sort((a, b) => Number(a) - Number(b)).reverse()[0];\n    if (match !== undefined) {\n      const thresh = this.thresholds[match];\n      const t = {\n        color: thresh.color,\n        backgroundColor: thresh.backgroundColor,\n        bgOpacity: thresh.bgOpacity,\n        start: Number(match),\n        end: this._getNextThreshold(Number(match))\n      };\n      return t;\n    }\n  }\n  _getNextThreshold(value) {\n    const match = Object.keys(this.thresholds).filter(function (item) {\n      return isNumber(item) && Number(item) > value;\n    }).sort((a, b) => Number(a) - Number(b));\n    if (match && match[0] !== undefined) {\n      return Number(match[0]);\n    } else {\n      return this.max;\n    }\n  }\n  _getBackgroundColorRanges() {\n    let i = 0,\n      ranges = [];\n    do {\n      let thresh = this._getThresholdMatchForValue(i);\n      if (thresh) {\n        ranges.push({\n          start: thresh.start,\n          end: thresh.end,\n          color: thresh.color,\n          backgroundColor: thresh.backgroundColor,\n          bgOpacity: thresh.bgOpacity\n        });\n        i = thresh.end;\n        if (i >= this.max) break;\n      } else break;\n    } while (true);\n    return ranges;\n  }\n  _getDisplacement(v) {\n    let type = this.type,\n      bounds = this._getBounds(type),\n      min = this.min,\n      max = this.max,\n      start = bounds.head,\n      value = clamp(v, this.min, this.max),\n      unit = (bounds.tail - bounds.head) / (max - min),\n      displacement = unit * (value - min);\n    return start + displacement;\n  }\n  _create(nv, ov) {\n    const self = this;\n    const type = this.type;\n    const bounds = this._getBounds(type);\n    const duration = this.duration;\n    const min = this.min;\n    const max = this.max;\n    const value = clamp(this.value, min, max);\n    const start = bounds.head;\n    const unit = (bounds.tail - bounds.head) / (max - min);\n    let displacement = unit * (value - min);\n    const tail = bounds.tail;\n    const color = this._getForegroundColorByRange(value);\n    let startTime;\n    if (self._animationRequestID) {\n      window.cancelAnimationFrame(self._animationRequestID);\n    }\n    const animate = timestamp => {\n      timestamp = timestamp || new Date().getTime();\n      const runtime = timestamp - startTime;\n      const progress = Math.min(runtime / duration, 1);\n      const previousProgress = ov ? (ov - min) * unit : 0;\n      const middle = start + previousProgress + displacement * progress;\n      self._drawShell(start, middle, tail, color);\n      if (self._animationRequestID && runtime < duration) {\n        self._animationRequestID = window.requestAnimationFrame(ts => animate(ts));\n      } else {\n        window.cancelAnimationFrame(self._animationRequestID);\n      }\n    };\n    if (this._animate) {\n      if (nv !== undefined && ov !== undefined && ov !== 0) {\n        displacement = unit * nv - unit * ov;\n      }\n      self._animationRequestID = window.requestAnimationFrame(timestamp => {\n        startTime = timestamp || new Date().getTime();\n        animate(startTime);\n      });\n    } else {\n      self._drawShell(start, start + displacement, tail, color);\n    }\n  }\n  _drawMarkersAndTicks() {\n    /*\r\n     * example:\r\n    this.markers = {\r\n        '-10': {\r\n            color: '#555',\r\n            size: 5,\r\n            label: '-10',\r\n            font: '11px verdana',\r\n            type: 'line',\r\n        },\r\n        '10': {\r\n            color: '#555',\r\n            size: 5,\r\n            label: '10',\r\n            font: '11px verdana',\r\n            type: 'line',\r\n        },\r\n        '20': {\r\n            color: '#555',\r\n            size: 5,\r\n            label: '20',\r\n            type: 'line',\r\n        },\r\n    };\r\n    */\n    if (this.markers) {\n      const bounds = this._getBounds(this.type);\n      const degrees = bounds.end - bounds.start;\n      const perD = degrees / (this.max - this.min);\n      for (const mv in this.markers) {\n        const n = Number(mv) - this.min;\n        const angle = bounds.start + n * perD;\n        const m = this.markers[mv];\n        this._addMarker(angle, m.color, m.label, m.type, m.size, m.font);\n      }\n    }\n  }\n  _update(nv, ov) {\n    this._clear();\n    this._create(nv, ov);\n  }\n  static {\n    this.ɵfac = function NgxGauge_Factory(t) {\n      return new (t || NgxGauge)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgxGauge,\n      selectors: [[\"ngx-gauge\"]],\n      contentQueries: function NgxGauge_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgxGaugeLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgxGaugePrepend, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgxGaugeAppend, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgxGaugeValue, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prependChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._appendChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueDisplayChild = _t.first);\n        }\n      },\n      viewQuery: function NgxGauge_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._canvas = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._label = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._reading = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"slider\", \"aria-readonly\", \"true\"],\n      hostVars: 7,\n      hostBindings: function NgxGauge_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n          i0.ɵɵclassProp(\"ngx-gauge-meter\", true);\n        }\n      },\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        size: \"size\",\n        margin: \"margin\",\n        min: \"min\",\n        animate: \"animate\",\n        max: \"max\",\n        type: \"type\",\n        cap: \"cap\",\n        thick: \"thick\",\n        label: \"label\",\n        append: \"append\",\n        prepend: \"prepend\",\n        foregroundColor: \"foregroundColor\",\n        backgroundColor: \"backgroundColor\",\n        thresholds: \"thresholds\",\n        markers: \"markers\",\n        value: \"value\",\n        duration: \"duration\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c4,\n      decls: 17,\n      vars: 16,\n      consts: [[\"reading\", \"\"], [\"rLabel\", \"\"], [\"canvas\", \"\"], [1, \"reading-block\"], [1, \"reading-affix\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngSwitch\"], [1, \"reading-label\", 3, \"ngSwitch\"]],\n      template: function NgxGauge_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵelementStart(0, \"div\", 3, 0)(2, \"u\", 4);\n          i0.ɵɵtemplate(3, NgxGauge_ng_content_3_Template, 1, 0, \"ng-content\", 5)(4, NgxGauge_ng_container_4_Template, 2, 1, \"ng-container\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementContainerStart(5, 6);\n          i0.ɵɵtemplate(6, NgxGauge_ng_content_6_Template, 1, 0, \"ng-content\", 5)(7, NgxGauge_ng_container_7_Template, 3, 3, \"ng-container\", 5);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementStart(8, \"u\", 4);\n          i0.ɵɵtemplate(9, NgxGauge_ng_content_9_Template, 1, 0, \"ng-content\", 5)(10, NgxGauge_ng_container_10_Template, 2, 1, \"ng-container\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 7, 1);\n          i0.ɵɵtemplate(13, NgxGauge_ng_content_13_Template, 1, 0, \"ng-content\", 5)(14, NgxGauge_ng_container_14_Template, 2, 1, \"ng-container\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"canvas\", null, 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"font-size\", (ctx.size - ctx.margin * 2) * 0.22 + \"px\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngSwitch\", ctx._prependChild != null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", false);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitch\", ctx._valueDisplayChild != null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", false);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitch\", ctx._appendChild != null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", false);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"font-size\", (ctx.size - ctx.margin * 2) / 13 + \"px\");\n          i0.ɵɵproperty(\"ngSwitch\", ctx._labelChild != null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngSwitchCase\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", false);\n        }\n      },\n      dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.DecimalPipe],\n      styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;width:100%;display:inline-block;position:absolute;text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:400}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGauge, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-gauge',\n      host: {\n        'role': 'slider',\n        'aria-readonly': 'true',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-labelledby]': 'ariaLabelledby'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"(size-(margin*2)) * 0.22 + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" #rLabel\\r\\n     [style.fontSize]=\\\"(size-(margin*2)) / 13 + 'px'\\\"\\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas></canvas>\\r\\n\",\n      styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;width:100%;display:inline-block;position:absolute;text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:400}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    _canvas: [{\n      type: ViewChild,\n      args: ['canvas', {\n        static: true\n      }]\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['rLabel', {\n        static: true\n      }]\n    }],\n    _reading: [{\n      type: ViewChild,\n      args: ['reading', {\n        static: true\n      }]\n    }],\n    _labelChild: [{\n      type: ContentChild,\n      args: [NgxGaugeLabel]\n    }],\n    _prependChild: [{\n      type: ContentChild,\n      args: [NgxGaugePrepend]\n    }],\n    _appendChild: [{\n      type: ContentChild,\n      args: [NgxGaugeAppend]\n    }],\n    _valueDisplayChild: [{\n      type: ContentChild,\n      args: [NgxGaugeValue]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    size: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cap: [{\n      type: Input\n    }],\n    thick: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    append: [{\n      type: Input\n    }],\n    prepend: [{\n      type: Input\n    }],\n    foregroundColor: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    thresholds: [{\n      type: Input\n    }],\n    markers: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxGaugeModule {\n  static {\n    this.ɵfac = function NgxGaugeModule_Factory(t) {\n      return new (t || NgxGaugeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgxGaugeModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n      exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public APIs of ngx-gauge\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxGauge, NgxGaugeAppend, NgxGaugeLabel, NgxGaugeModule, NgxGaugePrepend, NgxGaugeValue };","map":{"version":3,"names":["i0","Directive","Component","ViewEncapsulation","ViewChild","ContentChild","Input","NgModule","i1","CommonModule","_c0","_c1","_c2","_c3","_c4","NgxGauge_ng_content_3_Template","rf","ctx","ɵɵprojection","NgxGauge_ng_container_4_Template","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","prepend","NgxGauge_ng_content_6_Template","NgxGauge_ng_container_7_Template","ɵɵpipe","ɵɵpipeBind1","value","NgxGauge_ng_content_9_Template","NgxGauge_ng_container_10_Template","append","NgxGauge_ng_content_13_Template","NgxGauge_ng_container_14_Template","label","clamp","min","max","Math","coerceBooleanProperty","coerceNumberProperty","fallbackValue","isNaN","parseFloat","Number","cssUnit","isNumber","undefined","NgxGaugeAppend","ɵfac","NgxGaugeAppend_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","NgxGaugePrepend","NgxGaugePrepend_Factory","NgxGaugeValue","NgxGaugeValue_Factory","NgxGaugeLabel","NgxGaugeLabel_Factory","DEFAULTS","MIN","MAX","TYPE","THICK","FOREGROUND_COLOR","BACKGROUND_COLOR","CAP","SIZE","NgxGauge","size","_size","margin","_margin","_min","animate","_animate","_max","_value","val","constructor","_elementRef","_renderer","_initialized","_animationRequestID","ariaLabel","ariaLabelledby","cap","thick","foregroundColor","backgroundColor","thresholds","Object","create","markers","duration","ngOnInit","keys","length","ngOnChanges","changes","isCanvasPropertyChanged","isDataChanged","nv","currentValue","prevVal","previousValue","_oldChangeVal","_update","_destroy","_init","_updateSize","setStyle","nativeElement","_getWidth","_getCanvasHeight","_canvas","width","height","_label","_reading","ngAfterViewInit","ngOnDestroy","_getBounds","head","tail","start","end","PI","_drawShell","middle","color","center","_getCenter","radius","_getRadius","_clear","_drawMarkersAndTicks","ranges","_getBackgroundColorRanges","_context","lineWidth","lineCap","i","r","beginPath","strokeStyle","bgOpacity","globalAlpha","arc","x","y","_getDisplacement","stroke","_drawFill","_addMarker","angle","len","font","rad","offset","cos","sin","x2","y2","moveTo","a2","a3","rad2","x3","y3","lineTo","rad3","x4","y4","closePath","fillStyle","fill","save","translate","rotate","textAlign","fillText","restore","clearRect","_getHeight","getContext","_create","window","cancelAnimationFrame","_getForegroundColorByRange","thresh","_getThresholdMatchForValue","match","filter","item","sort","a","b","reverse","_getNextThreshold","push","v","bounds","unit","displacement","ov","self","startTime","timestamp","Date","getTime","runtime","progress","previousProgress","requestAnimationFrame","ts","degrees","perD","mv","n","m","NgxGauge_Factory","ɵɵdirectiveInject","ElementRef","Renderer2","ɵcmp","ɵɵdefineComponent","contentQueries","NgxGauge_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_labelChild","first","_prependChild","_appendChild","_valueDisplayChild","viewQuery","NgxGauge_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","NgxGauge_HostBindings","ɵɵattribute","ɵɵclassProp","inputs","ɵɵInputFlags","None","features","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","NgxGauge_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ɵɵelement","ɵɵstyleProp","ɵɵproperty","dependencies","NgSwitch","NgSwitchCase","DecimalPipe","styles","encapsulation","host","static","NgxGaugeModule","NgxGaugeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/node_modules/ngx-gauge/fesm2022/ngx-gauge.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\r\n}\r\nfunction cssUnit(value) {\r\n    return `${value}px`;\r\n}\r\nfunction isNumber(value) {\r\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\n\nclass NgxGaugeAppend {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeAppend, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.3\", type: NgxGaugeAppend, selector: \"ngx-gauge-append\", exportAs: [\"ngxGaugeAppend\"], ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeAppend, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-append\",\r\n                    exportAs: \"ngxGaugeAppend\"\r\n                }]\r\n        }] });\r\nclass NgxGaugePrepend {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugePrepend, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.3\", type: NgxGaugePrepend, selector: \"ngx-gauge-prepend\", exportAs: [\"ngxGaugePrepend\"], ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugePrepend, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-prepend\",\r\n                    exportAs: \"ngxGaugePrepend\"\r\n                }]\r\n        }] });\r\nclass NgxGaugeValue {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeValue, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.3\", type: NgxGaugeValue, selector: \"ngx-gauge-value\", exportAs: [\"ngxGaugeValue\"], ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeValue, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-value\",\r\n                    exportAs: \"ngxGaugeValue\"\r\n                }]\r\n        }] });\r\nclass NgxGaugeLabel {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.3\", type: NgxGaugeLabel, selector: \"ngx-gauge-label\", exportAs: [\"ngxGaugeLabel\"], ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeLabel, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-label\",\r\n                    exportAs: \"ngxGaugeLabel\"\r\n                }]\r\n        }] });\n\nconst DEFAULTS = {\r\n    MIN: 0,\r\n    MAX: 100,\r\n    TYPE: 'arch',\r\n    THICK: 4,\r\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\r\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\r\n    CAP: 'butt',\r\n    SIZE: 200\r\n};\r\nclass NgxGauge {\r\n    get size() { return this._size; }\r\n    set size(value) {\r\n        this._size = coerceNumberProperty(value);\r\n    }\r\n    get margin() { return this._margin; }\r\n    set margin(value) {\r\n        this._margin = coerceNumberProperty(value);\r\n    }\r\n    get min() { return this._min; }\r\n    set min(value) {\r\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\r\n    }\r\n    get animate() { return this._animate; }\r\n    set animate(value) {\r\n        this._animate = coerceBooleanProperty(value);\r\n    }\r\n    get max() { return this._max; }\r\n    set max(value) {\r\n        this._max = coerceNumberProperty(value, DEFAULTS.MAX);\r\n    }\r\n    get value() { return this._value; }\r\n    set value(val) {\r\n        this._value = coerceNumberProperty(val);\r\n    }\r\n    constructor(_elementRef, _renderer) {\r\n        this._elementRef = _elementRef;\r\n        this._renderer = _renderer;\r\n        this._size = DEFAULTS.SIZE;\r\n        this._min = DEFAULTS.MIN;\r\n        this._max = DEFAULTS.MAX;\r\n        this._animate = true;\r\n        this._margin = 0;\r\n        this._initialized = false;\r\n        this._animationRequestID = 0;\r\n        this.ariaLabel = '';\r\n        this.ariaLabelledby = null;\r\n        this.type = DEFAULTS.TYPE;\r\n        this.cap = DEFAULTS.CAP;\r\n        this.thick = DEFAULTS.THICK;\r\n        this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\r\n        this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\r\n        // { \"40\" : { color: \"green\", bgOpacity: .2 }, ... }\r\n        this.thresholds = Object.create(null);\r\n        // { \"25\": { color: '#ccc', type: 'line', size: 8, label: \"25 lbs\" }, ... }\r\n        this.markers = Object.create(null);\r\n        this._value = 0;\r\n        this.duration = 1200;\r\n    }\r\n    ngOnInit() {\r\n        // if markers are to be added, but no margin specified then here we add 10 px.\r\n        if (this.markers && Object.keys(this.markers).length > 0 && !this._margin)\r\n            this._margin = 10;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\r\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\r\n        if (this._initialized) {\r\n            if (isDataChanged) {\r\n                let nv;\r\n                if (changes['value']) {\r\n                    nv = Number(changes['value'].currentValue);\r\n                    nv = isNaN(nv) ? 0 : nv;\r\n                    const prevVal = Number(changes['value'].previousValue);\r\n                    this._oldChangeVal = isNaN(prevVal) ? this._oldChangeVal : prevVal;\r\n                }\r\n                this._update(nv, this._oldChangeVal);\r\n            }\r\n            if (isCanvasPropertyChanged) {\r\n                this._destroy();\r\n                this._init();\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\r\n        this._canvas.nativeElement.width = this._getWidth();\r\n        this._canvas.nativeElement.height = this._getCanvasHeight();\r\n        this._renderer.setStyle(this._label.nativeElement, 'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\r\n        this._renderer.setStyle(this._reading.nativeElement, 'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this._canvas) {\r\n            this._init();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroy();\r\n    }\r\n    _getBounds(type) {\r\n        let head, tail, start, end;\r\n        if (type == 'semi') {\r\n            head = Math.PI;\r\n            tail = 2 * Math.PI;\r\n            start = 180;\r\n            end = 360;\r\n        }\r\n        else if (type == 'full') {\r\n            head = 1.5 * Math.PI;\r\n            tail = 3.5 * Math.PI;\r\n            start = 270;\r\n            end = start + 360;\r\n        }\r\n        else if (type === 'arch') {\r\n            head = 0.8 * Math.PI;\r\n            tail = 2.2 * Math.PI;\r\n            start = 180 - (0.2 * 180);\r\n            end = 360 + (0.2 * 180);\r\n        }\r\n        return { head, tail, start, end };\r\n    }\r\n    _drawShell(start, middle, tail, color) {\r\n        let center = this._getCenter(), radius = this._getRadius();\r\n        if (this._initialized) {\r\n            this._clear();\r\n            this._drawMarkersAndTicks();\r\n            let ranges = this._getBackgroundColorRanges();\r\n            this._context.lineWidth = this.thick;\r\n            if (ranges && ranges.length > 0) {\r\n                // if background color is not specified then use default background, unless opacity is provided in which case use the color\r\n                // and opactity against color, to form the background color.\r\n                this._context.lineCap = 'butt';\r\n                for (let i = 0; i < ranges.length; ++i) {\r\n                    let r = ranges[i];\r\n                    this._context.beginPath();\r\n                    this._context.strokeStyle = r.backgroundColor ? r.backgroundColor : (r.bgOpacity) ? r.color : this.backgroundColor;\r\n                    if (r.bgOpacity !== undefined && r.bgOpacity !== null) {\r\n                        this._context.globalAlpha = r.bgOpacity;\r\n                    }\r\n                    this._context.arc(center.x, center.y, radius, this._getDisplacement(r.start), this._getDisplacement(r.end), false);\r\n                    this._context.stroke();\r\n                    this._context.globalAlpha = 1;\r\n                }\r\n            }\r\n            else {\r\n                this._context.lineCap = this.cap;\r\n                this._context.beginPath();\r\n                this._context.strokeStyle = this.backgroundColor;\r\n                this._context.arc(center.x, center.y, radius, start, tail, false);\r\n                this._context.stroke();\r\n            }\r\n            this._drawFill(start, middle, tail, color);\r\n        }\r\n    }\r\n    _drawFill(start, middle, tail, color) {\r\n        let center = this._getCenter(), radius = this._getRadius();\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n        middle = Math.max(middle, start); // never below 0%\r\n        middle = Math.min(middle, tail); // never exceed 100%\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n        this._context.beginPath();\r\n        this._context.strokeStyle = color;\r\n        this._context.arc(center.x, center.y, radius, start, middle, false);\r\n        this._context.stroke();\r\n    }\r\n    _addMarker(angle, color, label, type, len, font) {\r\n        var rad = angle * Math.PI / 180;\r\n        let offset = 2;\r\n        if (!len)\r\n            len = 8;\r\n        if (!type)\r\n            type = 'line';\r\n        let center = this._getCenter(), radius = this._getRadius();\r\n        let x = (radius + this.thick / 2 + offset) * Math.cos(rad) + center.x;\r\n        let y = (radius + this.thick / 2 + offset) * Math.sin(rad) + center.y;\r\n        let x2 = (radius + this.thick / 2 + offset + len) * Math.cos(rad) + center.x;\r\n        let y2 = (radius + this.thick / 2 + offset + len) * Math.sin(rad) + center.y;\r\n        if (type == 'triangle') {\r\n            //Draw the triangle marker\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = color;\r\n            this._context.moveTo(x, y);\r\n            this._context.lineWidth = 1;\r\n            let a2 = angle - 45;\r\n            let a3 = angle + 45;\r\n            if (a2 < 0)\r\n                a2 += 360;\r\n            if (a2 > 360)\r\n                a2 -= 360;\r\n            if (a3 < 0)\r\n                a3 += 360;\r\n            if (a3 > 360)\r\n                a3 -= 360;\r\n            let rad2 = a2 * Math.PI / 180;\r\n            let x3 = len * Math.cos(rad2) + x;\r\n            let y3 = len * Math.sin(rad2) + y;\r\n            this._context.lineTo(x3, y3);\r\n            let rad3 = a3 * Math.PI / 180;\r\n            let x4 = len * Math.cos(rad3) + x;\r\n            let y4 = len * Math.sin(rad3) + y;\r\n            this._context.lineTo(x4, y4);\r\n            this._context.lineTo(x, y);\r\n            this._context.closePath();\r\n            this._context.stroke();\r\n            this._context.fillStyle = color;\r\n            this._context.fill();\r\n        }\r\n        else { //line\r\n            this._context.beginPath();\r\n            this._context.lineWidth = .5;\r\n            this._context.strokeStyle = color;\r\n            this._context.moveTo(x, y);\r\n            this._context.lineTo(x2, y2);\r\n            this._context.closePath();\r\n            this._context.stroke();\r\n        }\r\n        if (label) {\r\n            this._context.save();\r\n            this._context.translate(x2, y2);\r\n            this._context.rotate((angle + 90) * (Math.PI / 180));\r\n            this._context.textAlign = \"center\";\r\n            this._context.font = (font) ? font : '13px Arial';\r\n            this._context.fillText(label, 0, -3);\r\n            this._context.restore();\r\n        }\r\n    }\r\n    _clear() {\r\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\r\n    }\r\n    _getWidth() {\r\n        return this.size;\r\n    }\r\n    _getHeight() {\r\n        return this.size;\r\n    }\r\n    // canvas height will be shorter for type 'semi' and 'arch'\r\n    _getCanvasHeight() {\r\n        return (this.type == 'arch' || this.type == 'semi')\r\n            ? 0.85 * this._getHeight()\r\n            : this._getHeight();\r\n    }\r\n    _getRadius() {\r\n        const center = this._getCenter();\r\n        var rad = center.x - this.thick;\r\n        if (this._margin > 0)\r\n            rad -= this._margin;\r\n        return rad;\r\n    }\r\n    _getCenter() {\r\n        var x = this._getWidth() / 2, y = this._getHeight() / 2;\r\n        return { x, y };\r\n    }\r\n    _init() {\r\n        this._context = this._canvas.nativeElement.getContext('2d');\r\n        this._initialized = true;\r\n        this._updateSize();\r\n        this._create();\r\n    }\r\n    _destroy() {\r\n        if (this._animationRequestID) {\r\n            window.cancelAnimationFrame(this._animationRequestID);\r\n            this._animationRequestID = 0;\r\n        }\r\n        this._clear();\r\n        this._context = null;\r\n        this._initialized = false;\r\n    }\r\n    _getForegroundColorByRange(value) {\r\n        const thresh = this._getThresholdMatchForValue(value);\r\n        return thresh && thresh.color ? thresh.color : this.foregroundColor;\r\n    }\r\n    _getThresholdMatchForValue(value) {\r\n        const match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) <= value; })\r\n            .sort((a, b) => Number(a) - Number(b))\r\n            .reverse()[0];\r\n        if (match !== undefined) {\r\n            const thresh = this.thresholds[match];\r\n            const t = {\r\n                color: thresh.color,\r\n                backgroundColor: thresh.backgroundColor,\r\n                bgOpacity: thresh.bgOpacity,\r\n                start: Number(match),\r\n                end: this._getNextThreshold(Number(match))\r\n            };\r\n            return t;\r\n        }\r\n    }\r\n    _getNextThreshold(value) {\r\n        const match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) > value; })\r\n            .sort((a, b) => Number(a) - Number(b));\r\n        if (match && match[0] !== undefined) {\r\n            return Number(match[0]);\r\n        }\r\n        else {\r\n            return this.max;\r\n        }\r\n    }\r\n    _getBackgroundColorRanges() {\r\n        let i = 0, ranges = [];\r\n        do {\r\n            let thresh = this._getThresholdMatchForValue(i);\r\n            if (thresh) {\r\n                ranges.push({\r\n                    start: thresh.start,\r\n                    end: thresh.end,\r\n                    color: thresh.color,\r\n                    backgroundColor: thresh.backgroundColor,\r\n                    bgOpacity: thresh.bgOpacity\r\n                });\r\n                i = thresh.end;\r\n                if (i >= this.max)\r\n                    break;\r\n            }\r\n            else\r\n                break;\r\n        } while (true);\r\n        return ranges;\r\n    }\r\n    _getDisplacement(v) {\r\n        let type = this.type, bounds = this._getBounds(type), min = this.min, max = this.max, start = bounds.head, value = clamp(v, this.min, this.max), unit = (bounds.tail - bounds.head) / (max - min), displacement = unit * (value - min);\r\n        return start + displacement;\r\n    }\r\n    _create(nv, ov) {\r\n        const self = this;\r\n        const type = this.type;\r\n        const bounds = this._getBounds(type);\r\n        const duration = this.duration;\r\n        const min = this.min;\r\n        const max = this.max;\r\n        const value = clamp(this.value, min, max);\r\n        const start = bounds.head;\r\n        const unit = (bounds.tail - bounds.head) / (max - min);\r\n        let displacement = unit * (value - min);\r\n        const tail = bounds.tail;\r\n        const color = this._getForegroundColorByRange(value);\r\n        let startTime;\r\n        if (self._animationRequestID) {\r\n            window.cancelAnimationFrame(self._animationRequestID);\r\n        }\r\n        const animate = (timestamp) => {\r\n            timestamp = timestamp || new Date().getTime();\r\n            const runtime = timestamp - startTime;\r\n            const progress = Math.min(runtime / duration, 1);\r\n            const previousProgress = ov ? (ov - min) * unit : 0;\r\n            const middle = start + previousProgress + displacement * progress;\r\n            self._drawShell(start, middle, tail, color);\r\n            if (self._animationRequestID && (runtime < duration)) {\r\n                self._animationRequestID = window.requestAnimationFrame((ts) => animate(ts));\r\n            }\r\n            else {\r\n                window.cancelAnimationFrame(self._animationRequestID);\r\n            }\r\n        };\r\n        if (this._animate) {\r\n            if (nv !== undefined && ov !== undefined && ov !== 0) {\r\n                displacement = unit * nv - unit * ov;\r\n            }\r\n            self._animationRequestID = window.requestAnimationFrame((timestamp) => {\r\n                startTime = timestamp || new Date().getTime();\r\n                animate(startTime);\r\n            });\r\n        }\r\n        else {\r\n            self._drawShell(start, start + displacement, tail, color);\r\n        }\r\n    }\r\n    _drawMarkersAndTicks() {\r\n        /*\r\n         * example:\r\n        this.markers = {\r\n            '-10': {\r\n                color: '#555',\r\n                size: 5,\r\n                label: '-10',\r\n                font: '11px verdana',\r\n                type: 'line',\r\n            },\r\n            '10': {\r\n                color: '#555',\r\n                size: 5,\r\n                label: '10',\r\n                font: '11px verdana',\r\n                type: 'line',\r\n            },\r\n            '20': {\r\n                color: '#555',\r\n                size: 5,\r\n                label: '20',\r\n                type: 'line',\r\n            },\r\n        };\r\n        */\r\n        if (this.markers) {\r\n            const bounds = this._getBounds(this.type);\r\n            const degrees = (bounds.end - bounds.start);\r\n            const perD = degrees / (this.max - this.min);\r\n            for (const mv in this.markers) {\r\n                const n = Number(mv) - this.min;\r\n                const angle = bounds.start + n * perD;\r\n                const m = this.markers[mv];\r\n                this._addMarker(angle, m.color, m.label, m.type, m.size, m.font);\r\n            }\r\n        }\r\n    }\r\n    _update(nv, ov) {\r\n        this._clear();\r\n        this._create(nv, ov);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGauge, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.3\", type: NgxGauge, selector: \"ngx-gauge\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], size: \"size\", margin: \"margin\", min: \"min\", animate: \"animate\", max: \"max\", type: \"type\", cap: \"cap\", thick: \"thick\", label: \"label\", append: \"append\", prepend: \"prepend\", foregroundColor: \"foregroundColor\", backgroundColor: \"backgroundColor\", thresholds: \"thresholds\", markers: \"markers\", value: \"value\", duration: \"duration\" }, host: { attributes: { \"role\": \"slider\", \"aria-readonly\": \"true\" }, properties: { \"class.ngx-gauge-meter\": \"true\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"value\", \"attr.aria-label\": \"ariaLabel\", \"attr.aria-labelledby\": \"ariaLabelledby\" } }, queries: [{ propertyName: \"_labelChild\", first: true, predicate: NgxGaugeLabel, descendants: true }, { propertyName: \"_prependChild\", first: true, predicate: NgxGaugePrepend, descendants: true }, { propertyName: \"_appendChild\", first: true, predicate: NgxGaugeAppend, descendants: true }, { propertyName: \"_valueDisplayChild\", first: true, predicate: NgxGaugeValue, descendants: true }], viewQueries: [{ propertyName: \"_canvas\", first: true, predicate: [\"canvas\"], descendants: true, static: true }, { propertyName: \"_label\", first: true, predicate: [\"rLabel\"], descendants: true, static: true }, { propertyName: \"_reading\", first: true, predicate: [\"reading\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"(size-(margin*2)) * 0.22 + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" #rLabel\\r\\n     [style.fontSize]=\\\"(size-(margin*2)) / 13 + 'px'\\\"\\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas></canvas>\\r\\n\", styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;width:100%;display:inline-block;position:absolute;text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:400}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"pipe\", type: i1.DecimalPipe, name: \"number\" }], encapsulation: i0.ViewEncapsulation.None }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGauge, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-gauge', host: {\r\n                        'role': 'slider',\r\n                        'aria-readonly': 'true',\r\n                        '[class.ngx-gauge-meter]': 'true',\r\n                        '[attr.aria-valuemin]': 'min',\r\n                        '[attr.aria-valuemax]': 'max',\r\n                        '[attr.aria-valuenow]': 'value',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '[attr.aria-labelledby]': 'ariaLabelledby'\r\n                    }, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"(size-(margin*2)) * 0.22 + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" #rLabel\\r\\n     [style.fontSize]=\\\"(size-(margin*2)) / 13 + 'px'\\\"\\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas></canvas>\\r\\n\", styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;width:100%;display:inline-block;position:absolute;text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:400}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { _canvas: [{\r\n                type: ViewChild,\r\n                args: ['canvas', { static: true }]\r\n            }], _label: [{\r\n                type: ViewChild,\r\n                args: ['rLabel', { static: true }]\r\n            }], _reading: [{\r\n                type: ViewChild,\r\n                args: ['reading', { static: true }]\r\n            }], _labelChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeLabel]\r\n            }], _prependChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugePrepend]\r\n            }], _appendChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeAppend]\r\n            }], _valueDisplayChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeValue]\r\n            }], ariaLabel: [{\r\n                type: Input,\r\n                args: ['aria-label']\r\n            }], ariaLabelledby: [{\r\n                type: Input,\r\n                args: ['aria-labelledby']\r\n            }], size: [{\r\n                type: Input\r\n            }], margin: [{\r\n                type: Input\r\n            }], min: [{\r\n                type: Input\r\n            }], animate: [{\r\n                type: Input\r\n            }], max: [{\r\n                type: Input\r\n            }], type: [{\r\n                type: Input\r\n            }], cap: [{\r\n                type: Input\r\n            }], thick: [{\r\n                type: Input\r\n            }], label: [{\r\n                type: Input\r\n            }], append: [{\r\n                type: Input\r\n            }], prepend: [{\r\n                type: Input\r\n            }], foregroundColor: [{\r\n                type: Input\r\n            }], backgroundColor: [{\r\n                type: Input\r\n            }], thresholds: [{\r\n                type: Input\r\n            }], markers: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], duration: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxGaugeModule {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeModule, declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel], imports: [CommonModule], exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeModule, imports: [CommonModule] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.3\", ngImport: i0, type: NgxGaugeModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\r\n                    exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\r\n                }]\r\n        }] });\n\n/*\r\n * Public APIs of ngx-gauge\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxGauge, NgxGaugeAppend, NgxGaugeLabel, NgxGaugeModule, NgxGaugePrepend, NgxGaugeValue };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}