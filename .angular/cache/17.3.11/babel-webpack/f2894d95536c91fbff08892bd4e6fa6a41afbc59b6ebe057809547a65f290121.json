{"ast":null,"code":"import { RouterLink } from '@angular/router';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nfunction ForgotPasswordComponent_Conditional_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(formBuilder, route, router) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.minLength(5)]]\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      this.router.navigate(['/dashboard/main']);\n    }\n  }\n  static {\n    this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n      return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordComponent,\n      selectors: [[\"app-forgot-password\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 30,\n      vars: 3,\n      consts: [[1, \"auth-container\"], [1, \"row\", \"auth-main\"], [1, \"col-sm-6\", \"px-0\", \"d-none\", \"d-sm-block\"], [1, \"left-img\", 2, \"background-image\", \"url(assets/images/pages/bg-03.png)\"], [1, \"col-sm-6\", \"auth-form-section\"], [1, \"form-section\"], [1, \"auth-wrapper\"], [1, \"welcome-msg\"], [1, \"auth-signup-text\", \"text-muted\"], [1, \"validate-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [1, \"error-subheader2\", \"p-t-20\", \"p-b-15\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matSuffix\", \"\", 1, \"material-icons-outlined\", \"color-icon\", \"p-3\"], [1, \"container-auth-form-btn\", \"mt-5\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"auth-form-btn\", 3, \"disabled\"], [1, \"w-full\", \"p-t-25\", \"text-center\"], [\"routerLink\", \"/authentication/signin\", 1, \"txt1\"]],\n      template: function ForgotPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n          i0.ɵɵtext(8, \" Reset Password \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 8);\n          i0.ɵɵtext(10, \"Let Us Help You\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"form\", 9);\n          i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"span\", 12);\n          i0.ɵɵtext(15, \" Enter your registered email address. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 13)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 14);\n          i0.ɵɵelementStart(20, \"mat-icon\", 15);\n          i0.ɵɵtext(21, \"mail\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, ForgotPasswordComponent_Conditional_22_Template, 2, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(23, \"div\", 16)(24, \"button\", 17);\n          i0.ɵɵtext(25, \" Reset My Password \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 18)(27, \"div\")(28, \"a\", 19);\n          i0.ɵɵtext(29, \" Login? \");\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(11);\n          i0.ɵɵconditional(22, ((tmp_1_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")) || ((tmp_1_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_1_0.touched) ? 22 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.authForm.valid);\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i3.MatFormField, i3.MatLabel, i3.MatError, i3.MatSuffix, MatInputModule, i4.MatInput, MatIconModule, i5.MatIcon, MatButtonModule, i6.MatButton, RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["RouterLink","Validators","FormsModule","ReactiveFormsModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordComponent","constructor","formBuilder","route","router","submitted","ngOnInit","authForm","group","email","required","minLength","returnUrl","snapshot","queryParams","f","controls","onSubmit","invalid","navigate","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","ForgotPasswordComponent_Conditional_22_Template","ɵɵadvance","ɵɵproperty","ɵɵconditional","tmp_1_0","get","hasError","touched","valid","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i3","MatFormField","MatLabel","MatError","MatSuffix","i4","MatInput","i5","MatIcon","i6","MatButton","styles"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/authentication/forgot-password/forgot-password.component.ts","/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/authentication/forgot-password/forgot-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    RouterLink,\r\n  ],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm!: UntypedFormGroup;\r\n  submitted = false;\r\n  returnUrl!: string;\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-03.png);\">\n      </div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <h2 class=\"welcome-msg\"> Reset Password </h2>\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\n                  Enter your registered email address.\n                </span>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"email\" required>\n                  <mat-icon class=\"material-icons-outlined color-icon p-3\" matSuffix>mail</mat-icon>\n                  @if (authForm.get('email')?.hasError('required') || authForm.get('email')?.touched) {\n                  <mat-error>\n                    Please enter a valid email address\n                  </mat-error>\n                  }\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn mt-5\">\n              <button mat-raised-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \"\n                type=\"submit\">\n                Reset My Password\n              </button>\n            </div>\n            <div class=\"w-full p-t-25 text-center\">\n              <div>\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                  Login?\n                </a>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}