{"ast":null,"code":"import * as XLSX from 'xlsx';\nconst getFileName = name => {\n  const timeSpan = new Date().toISOString();\n  const sheetName = name || 'ExportResult';\n  const fileName = `${sheetName}-${timeSpan}`;\n  return {\n    sheetName,\n    fileName\n  };\n};\nexport class TableExportUtil {\n  static exportToExcel(arr, name) {\n    const {\n      sheetName,\n      fileName\n    } = getFileName(name);\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.json_to_sheet(arr);\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\n    XLSX.writeFile(wb, `${fileName}.xlsx`);\n  }\n}","map":{"version":3,"names":["XLSX","getFileName","name","timeSpan","Date","toISOString","sheetName","fileName","TableExportUtil","exportToExcel","arr","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","writeFile"],"sources":["/home/hugo/Documentos/TF-594345-hdelboy/themeforest-jtUTY/smart/source/main/src/app/shared/tableExportUtil.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport { TableElement } from './TableElement';\r\n\r\nconst getFileName = (name: string) => {\r\n  const timeSpan = new Date().toISOString();\r\n  const sheetName = name || 'ExportResult';\r\n  const fileName = `${sheetName}-${timeSpan}`;\r\n  return {\r\n    sheetName,\r\n    fileName,\r\n  };\r\n};\r\nexport class TableExportUtil {\r\n  static exportToExcel(arr: Partial<TableElement>[], name: string) {\r\n    const { sheetName, fileName } = getFileName(name);\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.json_to_sheet(arr);\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n    XLSX.writeFile(wb, `${fileName}.xlsx`);\r\n  }\r\n\r\n  // static exportToPDF(exportData: any[]) {\r\n  //   const doc = new jsPDF();\r\n  //   const dataValue: any = Object.keys(exportData).map(function (\r\n  //     personNamedIndex: any\r\n  //   ) {\r\n  //     return Object.values(exportData[personNamedIndex]);\r\n  //   });\r\n  //   const keys: any = Object.keys(exportData[0]);\r\n\r\n  //   autoTable(doc, {\r\n  //     head: [keys],\r\n  //     body: dataValue,\r\n  //   });\r\n\r\n  //   const { fileName } = getFileName('pdf');\r\n\r\n  //   doc.save(`${fileName}.pdf`);\r\n  // }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAG5B,MAAMC,WAAW,GAAIC,IAAY,IAAI;EACnC,MAAMC,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;EACzC,MAAMC,SAAS,GAAGJ,IAAI,IAAI,cAAc;EACxC,MAAMK,QAAQ,GAAG,GAAGD,SAAS,IAAIH,QAAQ,EAAE;EAC3C,OAAO;IACLG,SAAS;IACTC;GACD;AACH,CAAC;AACD,OAAM,MAAOC,eAAe;EAC1B,OAAOC,aAAaA,CAACC,GAA4B,EAAER,IAAY;IAC7D,MAAM;MAAEI,SAAS;MAAEC;IAAQ,CAAE,GAAGN,WAAW,CAACC,IAAI,CAAC;IAEjD,MAAMS,EAAE,GAAGX,IAAI,CAACY,KAAK,CAACC,QAAQ,EAAE;IAChC,MAAMC,EAAE,GAAGd,IAAI,CAACY,KAAK,CAACG,aAAa,CAACL,GAAG,CAAC;IACxCV,IAAI,CAACY,KAAK,CAACI,iBAAiB,CAACL,EAAE,EAAEG,EAAE,EAAER,SAAS,CAAC;IAC/CN,IAAI,CAACiB,SAAS,CAACN,EAAE,EAAE,GAAGJ,QAAQ,OAAO,CAAC;EACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}